{
  "version": "2",
  "toolVersion": "1.52.1",
  "snippets": {
    "7a8e829560bc98622515804c45f71caff8e6316fbf694dd891d06b76b8177752": {
      "translations": {
        "python": {
          "source": "kinesis.Stream(self, \"MyFirstStream\",\n    stream_name=\"my-awesome-stream\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Stream(this, \"MyFirstStream\", new StreamProps {\n    StreamName = \"my-awesome-stream\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Stream.Builder.create(this, \"MyFirstStream\")\n        .streamName(\"my-awesome-stream\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new kinesis.Stream(this, 'MyFirstStream', {\n  streamName: 'my-awesome-stream',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 36
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew kinesis.Stream(this, 'MyFirstStream', {\n  streamName: 'my-awesome-stream',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "d96a8818cd16808da0fbee860079a6824720c1ccf9b9962ed92380aa2487411c"
    },
    "764991d691384eac6e83b3ec10e59f59dad9a279c935427ea2039ec62bb6fe11": {
      "translations": {
        "python": {
          "source": "kinesis.Stream(self, \"MyFirstStream\",\n    stream_name=\"my-awesome-stream\",\n    shard_count=3,\n    retention_period=Duration.hours(48)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Stream(this, \"MyFirstStream\", new StreamProps {\n    StreamName = \"my-awesome-stream\",\n    ShardCount = 3,\n    RetentionPeriod = Duration.Hours(48)\n});",
          "version": "1"
        },
        "java": {
          "source": "Stream.Builder.create(this, \"MyFirstStream\")\n        .streamName(\"my-awesome-stream\")\n        .shardCount(3)\n        .retentionPeriod(Duration.hours(48))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new kinesis.Stream(this, 'MyFirstStream', {\n  streamName: 'my-awesome-stream',\n  shardCount: 3,\n  retentionPeriod: Duration.hours(48),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 46
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#hours",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew kinesis.Stream(this, 'MyFirstStream', {\n  streamName: 'my-awesome-stream',\n  shardCount: 3,\n  retentionPeriod: Duration.hours(48),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "0830204fb508f9428b082952ce96f3471f2507bf52a27390caeaa3da57db2339"
    },
    "1afc55c5385fd75075444d5d557d280021a3a024b679ac8c80c0bc62daa22630": {
      "translations": {
        "python": {
          "source": "kinesis.Stream(self, \"MyEncryptedStream\")",
          "version": "2"
        },
        "csharp": {
          "source": "new Stream(this, \"MyEncryptedStream\");",
          "version": "1"
        },
        "java": {
          "source": "new Stream(this, \"MyEncryptedStream\");",
          "version": "1"
        },
        "$": {
          "source": "new kinesis.Stream(this, 'MyEncryptedStream');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 61
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew kinesis.Stream(this, 'MyEncryptedStream');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 2,
        "104": 1,
        "194": 1,
        "197": 1,
        "226": 1
      },
      "fqnsFingerprint": "39a63d19b384e0257026bd6bfe5358f51a2719ebbc84569462c8091d940196e2"
    },
    "964091ab222920b832d17bce21eec4deb214f3c80ff0a29f918ef241ca3be35a": {
      "translations": {
        "python": {
          "source": "kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});",
          "version": "1"
        },
        "java": {
          "source": "Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 68
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "6f9f4fa6a57f6377e116718d8ca59c669c9898781c4e81220801194c7a888681"
    },
    "6952645fd52ee8e84a142ea4a997da6e1658aad7f55277219b0b84c63d25af8c": {
      "translations": {
        "python": {
          "source": "key = kms.Key(self, \"MyKey\")\n\nkinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS,\n    encryption_key=key\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nnew Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS,\n    EncryptionKey = key\n});",
          "version": "1"
        },
        "java": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nStream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .encryptionKey(key)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 76
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 11,
        "104": 2,
        "193": 1,
        "194": 4,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "aa59758e5e2c9f880ab9ece7e6c7ece2c1aa090a5d2dbe93aaa40d3725e8262d"
    },
    "a4a5cf833d14a9461cb00d7bbdacb46aa456b56f2b0c6c71bdde52de3d717f68": {
      "translations": {
        "python": {
          "source": "imported_stream = kinesis.Stream.from_stream_arn(self, \"ImportedStream\", \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\")",
          "version": "2"
        },
        "csharp": {
          "source": "IStream importedStream = Stream.FromStreamArn(this, \"ImportedStream\", \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\");",
          "version": "1"
        },
        "java": {
          "source": "IStream importedStream = Stream.fromStreamArn(this, \"ImportedStream\", \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\");",
          "version": "1"
        },
        "$": {
          "source": "const importedStream = kinesis.Stream.fromStreamArn(this, 'ImportedStream',\n  'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 91
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.IStream",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.Stream#fromStreamArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedStream = kinesis.Stream.fromStreamArn(this, 'ImportedStream',\n  'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "2775b3e2eb9a3deda728801a7ced95884eb3f4e4525021468157533680d1ecfa"
    },
    "3b107a62c48ee65c1d8b605bd2203574ee31b2855ee0e87be3c0928e2f812c34": {
      "translations": {
        "python": {
          "source": "imported_stream = kinesis.Stream.from_stream_attributes(self, \"ImportedEncryptedStream\",\n    stream_arn=\"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\",\n    encryption_key=kms.Key.from_key_arn(self, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\")\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IStream importedStream = Stream.FromStreamAttributes(this, \"ImportedEncryptedStream\", new StreamAttributes {\n    StreamArn = \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\",\n    EncryptionKey = Key.FromKeyArn(this, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\")\n});",
          "version": "1"
        },
        "java": {
          "source": "IStream importedStream = Stream.fromStreamAttributes(this, \"ImportedEncryptedStream\", StreamAttributes.builder()\n        .streamArn(\"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\")\n        .encryptionKey(Key.fromKeyArn(this, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const importedStream = kinesis.Stream.fromStreamAttributes(this, 'ImportedEncryptedStream', {\n  streamArn: 'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n  encryptionKey: kms.Key.fromKeyArn(this, 'key',\n    'arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012',\n  ),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 99
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.IStream",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.Stream#fromStreamAttributes",
        "@aws-cdk/aws-kinesis.StreamAttributes",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.Key#fromKeyArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedStream = kinesis.Stream.fromStreamAttributes(this, 'ImportedEncryptedStream', {\n  streamArn: 'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n  encryptionKey: kms.Key.fromKeyArn(this, 'key',\n    'arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012',\n  ),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "104": 2,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "a0a0553c8af9a9803e2595804d72744e1c4a82f907ddd6155d6b5b5097cd6bd5"
    },
    "5762618d2098ed7ec62714a341ebc964a6054dc5ab39deddbac495279a8fa64e": {
      "translations": {
        "python": {
          "source": "lambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"),\n    description=\"Example role...\"\n)\n\nstream = kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)\n\n# give lambda permissions to read stream\nstream.grant_read(lambda_role)",
          "version": "2"
        },
        "csharp": {
          "source": "Role lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\"),\n    Description = \"Example role...\"\n});\n\nStream stream = new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});\n\n// give lambda permissions to read stream\nstream.GrantRead(lambdaRole);",
          "version": "1"
        },
        "java": {
          "source": "Role lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .description(\"Example role...\")\n        .build();\n\nStream stream = Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);",
          "version": "1"
        },
        "$": {
          "source": "const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 123
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 17,
        "104": 2,
        "193": 2,
        "194": 6,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "f428af101881101bd70a5d314a67b0bf9d78cb433a8782cb5255245aaed0822f"
    },
    "93f0650a984349efe1d10cf6fe6b6ddf79543623b0fb7d1728b7c64d92e16bbb": {
      "translations": {
        "python": {
          "source": "lambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"),\n    description=\"Example role...\"\n)\n\nstream = kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)\n\n# give lambda permissions to write to stream\nstream.grant_write(lambda_role)",
          "version": "2"
        },
        "csharp": {
          "source": "Role lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\"),\n    Description = \"Example role...\"\n});\n\nStream stream = new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});\n\n// give lambda permissions to write to stream\nstream.GrantWrite(lambdaRole);",
          "version": "1"
        },
        "java": {
          "source": "Role lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .description(\"Example role...\")\n        .build();\n\nStream stream = Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();\n\n// give lambda permissions to write to stream\nstream.grantWrite(lambdaRole);",
          "version": "1"
        },
        "$": {
          "source": "const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to write to stream\nstream.grantWrite(lambdaRole);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 150
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to write to stream\nstream.grantWrite(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 17,
        "104": 2,
        "193": 2,
        "194": 6,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "f428af101881101bd70a5d314a67b0bf9d78cb433a8782cb5255245aaed0822f"
    },
    "c64831e02df83a83338f306cd78797020f835f508f8e53aea4a96c9f9d8d8a68": {
      "translations": {
        "python": {
          "source": "user = iam.User(self, \"MyUser\")\n\nstream = kinesis.Stream(self, \"MyStream\")\n\n# give my user permissions to list shards\nstream.grant(user, \"kinesis:ListShards\")",
          "version": "2"
        },
        "csharp": {
          "source": "User user = new User(this, \"MyUser\");\n\nStream stream = new Stream(this, \"MyStream\");\n\n// give my user permissions to list shards\nstream.Grant(user, \"kinesis:ListShards\");",
          "version": "1"
        },
        "java": {
          "source": "User user = new User(this, \"MyUser\");\n\nStream stream = new Stream(this, \"MyStream\");\n\n// give my user permissions to list shards\nstream.grant(user, \"kinesis:ListShards\");",
          "version": "1"
        },
        "$": {
          "source": "const user = new iam.User(this, 'MyUser');\n\nconst stream = new kinesis.Stream(this, 'MyStream');\n\n// give my user permissions to list shards\nstream.grant(user, 'kinesis:ListShards');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 174
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.User",
        "@aws-cdk/aws-kinesis.Stream",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser');\n\nconst stream = new kinesis.Stream(this, 'MyStream');\n\n// give my user permissions to list shards\nstream.grant(user, 'kinesis:ListShards');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "104": 2,
        "194": 3,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2
      },
      "fqnsFingerprint": "b1b9cc25761dc030e217e2fc7242b7401c4e2bc7dd337f4571c87f8b03639c77"
    },
    "d7f995ae9af5446a7413f8cd18e3a5d4b45a381e27ebe6188d21345c8196995d": {
      "translations": {
        "python": {
          "source": "stream = kinesis.Stream(self, \"MyStream\")\n\n# Using base metric method passing the metric name\nstream.metric(\"GetRecords.Success\")\n\n# using pre-defined metric method\nstream.metric_get_records_success()\n\n# using pre-defined and overriding the statistic\nstream.metric_get_records_success(statistic=\"Maximum\")",
          "version": "2"
        },
        "csharp": {
          "source": "Stream stream = new Stream(this, \"MyStream\");\n\n// Using base metric method passing the metric name\nstream.Metric(\"GetRecords.Success\");\n\n// using pre-defined metric method\nstream.MetricGetRecordsSuccess();\n\n// using pre-defined and overriding the statistic\nstream.MetricGetRecordsSuccess(new MetricOptions { Statistic = \"Maximum\" });",
          "version": "1"
        },
        "java": {
          "source": "Stream stream = new Stream(this, \"MyStream\");\n\n// Using base metric method passing the metric name\nstream.metric(\"GetRecords.Success\");\n\n// using pre-defined metric method\nstream.metricGetRecordsSuccess();\n\n// using pre-defined and overriding the statistic\nstream.metricGetRecordsSuccess(MetricOptions.builder().statistic(\"Maximum\").build());",
          "version": "1"
        },
        "$": {
          "source": "const stream = new kinesis.Stream(this, 'MyStream');\n\n// Using base metric method passing the metric name\nstream.metric('GetRecords.Success');\n\n// using pre-defined metric method\nstream.metricGetRecordsSuccess();\n\n// using pre-defined and overriding the statistic\nstream.metricGetRecordsSuccess({ statistic: 'Maximum' });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesis"
        },
        "field": {
          "field": "markdown",
          "line": 187
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudwatch.MetricOptions",
        "@aws-cdk/aws-kinesis.Stream",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst stream = new kinesis.Stream(this, 'MyStream');\n\n// Using base metric method passing the metric name\nstream.metric('GetRecords.Success');\n\n// using pre-defined metric method\nstream.metricGetRecordsSuccess();\n\n// using pre-defined and overriding the statistic\nstream.metricGetRecordsSuccess({ statistic: 'Maximum' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 3,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "886ed584b342c4be26c178a433d0c40e92ae9a708fd910652cf5bcfb98905b30"
    },
    "6fea0521e27f9f8cf1499d22bd283b45dacdd957b93b37a3ab6447291c39b1f2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\ncfn_stream = kinesis.CfnStream(self, \"MyCfnStream\",\n    name=\"name\",\n    retention_period_hours=123,\n    shard_count=123,\n    stream_encryption=kinesis.CfnStream.StreamEncryptionProperty(\n        encryption_type=\"encryptionType\",\n        key_id=\"keyId\"\n    ),\n    stream_mode_details=kinesis.CfnStream.StreamModeDetailsProperty(\n        stream_mode=\"streamMode\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nCfnStream cfnStream = new CfnStream(this, \"MyCfnStream\", new CfnStreamProps {\n    Name = \"name\",\n    RetentionPeriodHours = 123,\n    ShardCount = 123,\n    StreamEncryption = new StreamEncryptionProperty {\n        EncryptionType = \"encryptionType\",\n        KeyId = \"keyId\"\n    },\n    StreamModeDetails = new StreamModeDetailsProperty {\n        StreamMode = \"streamMode\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nCfnStream cfnStream = CfnStream.Builder.create(this, \"MyCfnStream\")\n        .name(\"name\")\n        .retentionPeriodHours(123)\n        .shardCount(123)\n        .streamEncryption(StreamEncryptionProperty.builder()\n                .encryptionType(\"encryptionType\")\n                .keyId(\"keyId\")\n                .build())\n        .streamModeDetails(StreamModeDetailsProperty.builder()\n                .streamMode(\"streamMode\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst cfnStream = new kinesis.CfnStream(this, 'MyCfnStream', /* all optional props */ {\n  name: 'name',\n  retentionPeriodHours: 123,\n  shardCount: 123,\n  streamEncryption: {\n    encryptionType: 'encryptionType',\n    keyId: 'keyId',\n  },\n  streamModeDetails: {\n    streamMode: 'streamMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStream"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStream",
        "@aws-cdk/aws-kinesis.CfnStreamProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStream = new kinesis.CfnStream(this, 'MyCfnStream', /* all optional props */ {\n  name: 'name',\n  retentionPeriodHours: 123,\n  shardCount: 123,\n  streamEncryption: {\n    encryptionType: 'encryptionType',\n    keyId: 'keyId',\n  },\n  streamModeDetails: {\n    streamMode: 'streamMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 15,
        "104": 1,
        "192": 1,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "96811c18cbbee62e019d36fb7ba56a9dfdbe1fc61044f828cee758a4989dcb2f"
    },
    "a974d6f86df8309551a743d0d75da6dc5ffd57c1aa0cee86930aec1218b39ac2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\nstream_encryption_property = kinesis.CfnStream.StreamEncryptionProperty(\n    encryption_type=\"encryptionType\",\n    key_id=\"keyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nStreamEncryptionProperty streamEncryptionProperty = new StreamEncryptionProperty {\n    EncryptionType = \"encryptionType\",\n    KeyId = \"keyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nStreamEncryptionProperty streamEncryptionProperty = StreamEncryptionProperty.builder()\n        .encryptionType(\"encryptionType\")\n        .keyId(\"keyId\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst streamEncryptionProperty: kinesis.CfnStream.StreamEncryptionProperty = {\n  encryptionType: 'encryptionType',\n  keyId: 'keyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst streamEncryptionProperty: kinesis.CfnStream.StreamEncryptionProperty = {\n  encryptionType: 'encryptionType',\n  keyId: 'keyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dc3e2ed934112324e3120b18ecb248ea753d7797da83d21d506dd4636010b5e6"
    },
    "5ba1e770152e72f73c637eec65f73f1d4732b01065c125f113a129f670b1716f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\nstream_mode_details_property = kinesis.CfnStream.StreamModeDetailsProperty(\n    stream_mode=\"streamMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nStreamModeDetailsProperty streamModeDetailsProperty = new StreamModeDetailsProperty {\n    StreamMode = \"streamMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nStreamModeDetailsProperty streamModeDetailsProperty = StreamModeDetailsProperty.builder()\n        .streamMode(\"streamMode\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst streamModeDetailsProperty: kinesis.CfnStream.StreamModeDetailsProperty = {\n  streamMode: 'streamMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStream.StreamModeDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStream.StreamModeDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst streamModeDetailsProperty: kinesis.CfnStream.StreamModeDetailsProperty = {\n  streamMode: 'streamMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8b516d285107dc6080d37073f66132e3aaba423c073d4fb3173655a5d8607aa8"
    },
    "f87965de868a3b2400856cc4aa49bbf110c7b3cc013213219b55dae69410cd95": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\ncfn_stream_consumer = kinesis.CfnStreamConsumer(self, \"MyCfnStreamConsumer\",\n    consumer_name=\"consumerName\",\n    stream_arn=\"streamArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nCfnStreamConsumer cfnStreamConsumer = new CfnStreamConsumer(this, \"MyCfnStreamConsumer\", new CfnStreamConsumerProps {\n    ConsumerName = \"consumerName\",\n    StreamArn = \"streamArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nCfnStreamConsumer cfnStreamConsumer = CfnStreamConsumer.Builder.create(this, \"MyCfnStreamConsumer\")\n        .consumerName(\"consumerName\")\n        .streamArn(\"streamArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst cfnStreamConsumer = new kinesis.CfnStreamConsumer(this, 'MyCfnStreamConsumer', {\n  consumerName: 'consumerName',\n  streamArn: 'streamArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStreamConsumer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStreamConsumer",
        "@aws-cdk/aws-kinesis.CfnStreamConsumerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStreamConsumer = new kinesis.CfnStreamConsumer(this, 'MyCfnStreamConsumer', {\n  consumerName: 'consumerName',\n  streamArn: 'streamArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fa0d16d131b82598a57fc4ac589307b0c6499a5c4895c352d0fad85dd8ab5d42"
    },
    "6cf9219461964d1cb3c61f597d67c88c65ec283490e208f667ae0dce4d9ab73e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\ncfn_stream_consumer_props = kinesis.CfnStreamConsumerProps(\n    consumer_name=\"consumerName\",\n    stream_arn=\"streamArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nCfnStreamConsumerProps cfnStreamConsumerProps = new CfnStreamConsumerProps {\n    ConsumerName = \"consumerName\",\n    StreamArn = \"streamArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nCfnStreamConsumerProps cfnStreamConsumerProps = CfnStreamConsumerProps.builder()\n        .consumerName(\"consumerName\")\n        .streamArn(\"streamArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst cfnStreamConsumerProps: kinesis.CfnStreamConsumerProps = {\n  consumerName: 'consumerName',\n  streamArn: 'streamArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStreamConsumerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStreamConsumerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStreamConsumerProps: kinesis.CfnStreamConsumerProps = {\n  consumerName: 'consumerName',\n  streamArn: 'streamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "679ae91955e396da91938054802398c1091917a2e2887cb834cce3b4e8329641"
    },
    "6cc7806768ae86429978c0c71e55fe6b2a9dbf05015c3b8facc40dc9d706ae7c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesis as kinesis\n\ncfn_stream_props = kinesis.CfnStreamProps(\n    name=\"name\",\n    retention_period_hours=123,\n    shard_count=123,\n    stream_encryption=kinesis.CfnStream.StreamEncryptionProperty(\n        encryption_type=\"encryptionType\",\n        key_id=\"keyId\"\n    ),\n    stream_mode_details=kinesis.CfnStream.StreamModeDetailsProperty(\n        stream_mode=\"streamMode\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Kinesis;\n\nCfnStreamProps cfnStreamProps = new CfnStreamProps {\n    Name = \"name\",\n    RetentionPeriodHours = 123,\n    ShardCount = 123,\n    StreamEncryption = new StreamEncryptionProperty {\n        EncryptionType = \"encryptionType\",\n        KeyId = \"keyId\"\n    },\n    StreamModeDetails = new StreamModeDetailsProperty {\n        StreamMode = \"streamMode\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesis.*;\n\nCfnStreamProps cfnStreamProps = CfnStreamProps.builder()\n        .name(\"name\")\n        .retentionPeriodHours(123)\n        .shardCount(123)\n        .streamEncryption(StreamEncryptionProperty.builder()\n                .encryptionType(\"encryptionType\")\n                .keyId(\"keyId\")\n                .build())\n        .streamModeDetails(StreamModeDetailsProperty.builder()\n                .streamMode(\"streamMode\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nconst cfnStreamProps: kinesis.CfnStreamProps = {\n  name: 'name',\n  retentionPeriodHours: 123,\n  shardCount: 123,\n  streamEncryption: {\n    encryptionType: 'encryptionType',\n    keyId: 'keyId',\n  },\n  streamModeDetails: {\n    streamMode: 'streamMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.CfnStreamProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.CfnStreamProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStreamProps: kinesis.CfnStreamProps = {\n  name: 'name',\n  retentionPeriodHours: 123,\n  shardCount: 123,\n  streamEncryption: {\n    encryptionType: 'encryptionType',\n    keyId: 'keyId',\n  },\n  streamModeDetails: {\n    streamMode: 'streamMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 15,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "3e577671af769dc80bd2911340e8d0ad9c41fbbda8904c3b25aee096864d8a22"
    },
    "d1160cd1474c92f6d12426709e6fae0f438db455f723cb076adb781951474f17": {
      "translations": {
        "python": {
          "source": "key = kms.Key(self, \"MyKey\")\n\nkinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS,\n    encryption_key=key\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nnew Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS,\n    EncryptionKey = key\n});",
          "version": "1"
        },
        "java": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nStream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .encryptionKey(key)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.Stream"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 11,
        "104": 2,
        "193": 1,
        "194": 4,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "aa59758e5e2c9f880ab9ece7e6c7ece2c1aa090a5d2dbe93aaa40d3725e8262d"
    },
    "b059fb84b5082da8989759dec3be8f3ff74ba539405baf9881f3b7241ecc9e6a": {
      "translations": {
        "python": {
          "source": "imported_stream = kinesis.Stream.from_stream_attributes(self, \"ImportedEncryptedStream\",\n    stream_arn=\"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\",\n    encryption_key=kms.Key.from_key_arn(self, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\")\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IStream importedStream = Stream.FromStreamAttributes(this, \"ImportedEncryptedStream\", new StreamAttributes {\n    StreamArn = \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\",\n    EncryptionKey = Key.FromKeyArn(this, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\")\n});",
          "version": "1"
        },
        "java": {
          "source": "IStream importedStream = Stream.fromStreamAttributes(this, \"ImportedEncryptedStream\", StreamAttributes.builder()\n        .streamArn(\"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\")\n        .encryptionKey(Key.fromKeyArn(this, \"key\", \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const importedStream = kinesis.Stream.fromStreamAttributes(this, 'ImportedEncryptedStream', {\n  streamArn: 'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n  encryptionKey: kms.Key.fromKeyArn(this, 'key',\n    'arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012',\n  ),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.StreamAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.IStream",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.Stream#fromStreamAttributes",
        "@aws-cdk/aws-kinesis.StreamAttributes",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.Key#fromKeyArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedStream = kinesis.Stream.fromStreamAttributes(this, 'ImportedEncryptedStream', {\n  streamArn: 'arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j',\n  encryptionKey: kms.Key.fromKeyArn(this, 'key',\n    'arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012',\n  ),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "104": 2,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "a0a0553c8af9a9803e2595804d72744e1c4a82f907ddd6155d6b5b5097cd6bd5"
    },
    "2558180ab783c823c6c3e71d2a5a10bd20ab777445609d3eaffd17830f90145f": {
      "translations": {
        "python": {
          "source": "key = kms.Key(self, \"MyKey\")\n\nkinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS,\n    encryption_key=key\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nnew Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS,\n    EncryptionKey = key\n});",
          "version": "1"
        },
        "java": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nStream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .encryptionKey(key)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.StreamEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 11,
        "104": 2,
        "193": 1,
        "194": 4,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "aa59758e5e2c9f880ab9ece7e6c7ece2c1aa090a5d2dbe93aaa40d3725e8262d"
    },
    "cf0f5a54a7455e18c763e28a185568d0fc4ee3a2789b16effaa995370ffb8ef4": {
      "translations": {
        "python": {
          "source": "key = kms.Key(self, \"MyKey\")\n\nkinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS,\n    encryption_key=key\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nnew Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS,\n    EncryptionKey = key\n});",
          "version": "1"
        },
        "java": {
          "source": "Key key = new Key(this, \"MyKey\");\n\nStream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .encryptionKey(key)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesis.StreamProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesis.StreamEncryption",
        "@aws-cdk/aws-kinesis.StreamEncryption#KMS",
        "@aws-cdk/aws-kinesis.StreamProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst key = new kms.Key(this, 'MyKey');\n\nnew kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n  encryptionKey: key,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 11,
        "104": 2,
        "193": 1,
        "194": 4,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "aa59758e5e2c9f880ab9ece7e6c7ece2c1aa090a5d2dbe93aaa40d3725e8262d"
    }
  }
}
