{
  "version": 3,
  "sources": ["api-key.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport { ArnFormat, IResource as IResourceBase, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnApiKey } from './apigateway.generated';\nimport { ResourceOptions } from './resource';\nimport { IRestApi } from './restapi';\nimport { QuotaSettings, ThrottleSettings, UsagePlan, UsagePlanPerApiStage } from './usage-plan';\n\n                                                                                                                                \nexport interface IApiKey extends IResourceBase {\n                                                \n  readonly keyId: string;\n\n                                 \n  readonly keyArn: string;\n}\n\n                                               \nexport interface ApiKeyOptions extends ResourceOptions {\n                                                                                                                                                                                                                                                                                                                                               \n  readonly apiKeyName?: string;\n\n                                                                                                                                                                                                                                            \n  readonly value?: string;\n\n                                                                                                                                                                                                                               \n  readonly description?: string;\n}\n\n                             \nexport interface ApiKeyProps extends ApiKeyOptions {\n                                                                                        \n  readonly resources?: IRestApi[];\n\n                                                                                                                                                                                                                                                                               \n  readonly customerId?: string;\n\n                                                                                                                                                                                                                                    \n  readonly enabled?: boolean;\n\n                                                                                                                                                                                                                                                                           \n  readonly generateDistinctId?: boolean;\n}\n\n/**\n * Base implementation that is common to the various implementations of IApiKey\n */\nabstract class ApiKeyBase extends Resource implements IApiKey {\n  public abstract readonly keyId: string;\n  public abstract readonly keyArn: string;\n\n                                                                                                                                         \n  public grantRead(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: readPermissions,\n      resourceArns: [this.keyArn],\n    });\n  }\n\n                                                                                                                                          \n  public grantWrite(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: writePermissions,\n      resourceArns: [this.keyArn],\n    });\n  }\n\n                                                                                                                                                   \n  public grantReadWrite(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: [...readPermissions, ...writePermissions],\n      resourceArns: [this.keyArn],\n    });\n  }\n}\n\n                                                                                                                                                                \nexport class ApiKey extends ApiKeyBase {\n\n                                           \n  public static fromApiKeyId(scope: Construct, id: string, apiKeyId: string): IApiKey {\n    class Import extends ApiKeyBase {\n      public keyId = apiKeyId;\n      public keyArn = Stack.of(this).formatArn({\n        service: 'apigateway',\n        account: '',\n        resource: '/apikeys',\n        arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n        resourceName: apiKeyId,\n      });\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly keyId: string;\n  public readonly keyArn: string;\n\n  constructor(scope: Construct, id: string, props: ApiKeyProps = { }) {\n    super(scope, id, {\n      physicalName: props.apiKeyName,\n    });\n\n    const resource = new CfnApiKey(this, 'Resource', {\n      customerId: props.customerId,\n      description: props.description,\n      enabled: props.enabled ?? true,\n      generateDistinctId: props.generateDistinctId,\n      name: this.physicalName,\n      stageKeys: this.renderStageKeys(props.resources),\n      value: props.value,\n    });\n\n    this.keyId = resource.ref;\n    this.keyArn = Stack.of(this).formatArn({\n      service: 'apigateway',\n      account: '',\n      resource: '/apikeys',\n      arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n      resourceName: this.keyId,\n    });\n  }\n\n  private renderStageKeys(resources: IRestApi[] | undefined): CfnApiKey.StageKeyProperty[] | undefined {\n    if (!resources) {\n      return undefined;\n    }\n\n    return resources.map((resource: IRestApi) => {\n      const restApi = resource;\n      const restApiId = restApi.restApiId;\n      const stageName = restApi.deploymentStage!.stageName.toString();\n      return { restApiId, stageName };\n    });\n  }\n}\n\n                                        \nexport interface RateLimitedApiKeyProps extends ApiKeyProps {\n                                                                                           \n  readonly apiStages?: UsagePlanPerApiStage[];\n\n                                                                                               \n  readonly quota?: QuotaSettings;\n\n                                                                          \n  readonly throttle?: ThrottleSettings;\n}\n\n                                                                                                                                   \nexport class RateLimitedApiKey extends ApiKeyBase {\n  public readonly keyId: string;\n  public readonly keyArn: string;\n\n  constructor(scope: Construct, id: string, props: RateLimitedApiKeyProps = { }) {\n    super(scope, id, {\n      physicalName: props.apiKeyName,\n    });\n\n    const resource = new ApiKey(this, 'Resource', props);\n\n    if (props.apiStages || props.quota || props.throttle) {\n      const usageplan = new UsagePlan(this, 'UsagePlanResource', {\n        apiStages: props.apiStages,\n        quota: props.quota,\n        throttle: props.throttle,\n      });\n      usageplan.addApiKey(resource);\n    }\n\n    this.keyId = resource.keyId;\n    this.keyArn = resource.keyArn;\n  }\n}\n\nconst readPermissions = [\n  'apigateway:GET',\n];\n\nconst writePermissions = [\n  'apigateway:POST',\n  'apigateway:PUT',\n  'apigateway:PATCH',\n  'apigateway:DELETE',\n];"],
  "mappings": "0OAAA,IAAA,QAAA,iBACA,OAAA,QAAA,cAEA,uBAAA,QAAA,0BAGA,aAAA,QAAA,gBAyCA,wBAAkC,QAAA,QAAQ,CAKjC,UAAU,QAAuB,CACtC,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,gBACT,aAAc,CAAC,KAAK,UAKjB,WAAW,QAAuB,CACvC,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,iBACT,aAAc,CAAC,KAAK,UAKjB,eAAe,QAAuB,CAC3C,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,CAAC,GAAG,gBAAiB,GAAG,kBACjC,aAAc,CAAC,KAAK,WAM1B,oBAA4B,WAAU,CAqBpC,YAAY,MAAkB,GAAY,MAAqB,GAAG,QAChE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,mFAGtB,KAAM,UAAW,GAAI,wBAAA,UAAU,KAAM,WAAY,CAC/C,WAAY,MAAM,WAClB,YAAa,MAAM,YACnB,QAAO,IAAE,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,GAC1B,mBAAoB,MAAM,mBAC1B,KAAM,KAAK,aACX,UAAW,KAAK,gBAAgB,MAAM,WACtC,MAAO,MAAM,QAGf,KAAK,MAAQ,SAAS,IACtB,KAAK,OAAS,OAAA,MAAM,GAAG,MAAM,UAAU,CACrC,QAAS,aACT,QAAS,GACT,SAAU,WACV,UAAW,OAAA,UAAU,oBACrB,aAAc,KAAK,cAvCT,cAAa,MAAkB,GAAY,SAAgB,CACvE,oBAAqB,WAAU,CAA/B,aAAA,qBACS,KAAA,MAAQ,SACR,KAAA,OAAS,OAAA,MAAM,GAAG,MAAM,UAAU,CACvC,QAAS,aACT,QAAS,GACT,SAAU,WACV,UAAW,OAAA,UAAU,oBACrB,aAAc,YAIlB,MAAO,IAAI,QAAO,MAAO,IA+BnB,gBAAgB,UAAiC,CACvD,GAAI,EAAC,UAIL,MAAO,WAAU,IAAI,AAAC,UAAsB,CAC1C,KAAM,SAAU,SACV,UAAY,QAAQ,UACpB,UAAY,QAAQ,gBAAiB,UAAU,WACrD,MAAO,CAAE,UAAW,cAvD1B,QAAA,OAAA,mGAyEA,+BAAuC,WAAU,CAI/C,YAAY,MAAkB,GAAY,MAAgC,GAAG,CAC3E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,8FAGtB,KAAM,UAAW,GAAI,QAAO,KAAM,WAAY,OAE9C,AAAI,OAAM,WAAa,MAAM,OAAS,MAAM,WAM1C,AALkB,GAAI,cAAA,UAAU,KAAM,oBAAqB,CACzD,UAAW,MAAM,UACjB,MAAO,MAAM,MACb,SAAU,MAAM,WAER,UAAU,UAGtB,KAAK,MAAQ,SAAS,MACtB,KAAK,OAAS,SAAS,QArB3B,QAAA,kBAAA,oIAyBA,KAAM,iBAAkB,CACtB,kBAGI,iBAAmB,CACvB,kBACA,iBACA,mBACA",
  "names": []
}
