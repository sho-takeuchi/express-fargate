{
  "version": 3,
  "sources": ["cognito.ts"],
  "sourcesContent": ["import * as cognito from '../../../aws-cognito';\nimport { Duration, Lazy, Names, Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { CfnAuthorizer } from '../apigateway.generated';\nimport { Authorizer, IAuthorizer } from '../authorizer';\nimport { AuthorizationType } from '../method';\nimport { IRestApi } from '../restapi';\n\n                                                    \nexport interface CognitoUserPoolsAuthorizerProps {\n                                                                                                                                                                                  \n  readonly authorizerName?: string;\n\n                                                                  \n  readonly cognitoUserPools: cognito.IUserPool[];\n\n                                                                                                                                                            \n  readonly resultsCacheTtl?: Duration;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n  readonly identitySource?: string;\n}\n\n                                                                                                 \nexport class CognitoUserPoolsAuthorizer extends Authorizer implements IAuthorizer {\n                                                          \n  public readonly authorizerId: string;\n\n                                                                                                                                    \n  public readonly authorizerArn: string;\n\n                                                           \n  public readonly authorizationType?: AuthorizationType;\n\n  private restApiId?: string;\n\n  constructor(scope: Construct, id: string, props: CognitoUserPoolsAuthorizerProps) {\n    super(scope, id);\n\n    const restApiId = this.lazyRestApiId();\n    const resource = new CfnAuthorizer(this, 'Resource', {\n      name: props.authorizerName ?? Names.uniqueId(this),\n      restApiId,\n      type: 'COGNITO_USER_POOLS',\n      providerArns: props.cognitoUserPools.map(userPool => userPool.userPoolArn),\n      authorizerResultTtlInSeconds: props.resultsCacheTtl?.toSeconds(),\n      identitySource: props.identitySource || 'method.request.header.Authorization',\n    });\n\n    this.authorizerId = resource.ref;\n    this.authorizerArn = Stack.of(this).formatArn({\n      service: 'execute-api',\n      resource: restApiId,\n      resourceName: `authorizers/${this.authorizerId}`,\n    });\n    this.authorizationType = AuthorizationType.COGNITO;\n  }\n\n  /**\n   * Attaches this authorizer to a specific REST API.\n   * @internal\n   */\n  public _attachToApi(restApi: IRestApi): void {\n    if (this.restApiId && this.restApiId !== restApi.restApiId) {\n      throw new Error('Cannot attach authorizer to two different rest APIs');\n    }\n\n    this.restApiId = restApi.restApiId;\n  }\n\n  /**\n   * Returns a token that resolves to the Rest Api Id at the time of synthesis.\n   * Throws an error, during token resolution, if no RestApi is attached to this authorizer.\n   */\n  private lazyRestApiId() {\n    return Lazy.string({\n      produce: () => {\n        if (!this.restApiId) {\n          throw new Error(`Authorizer (${this.node.path}) must be attached to a RestApi`);\n        }\n        return this.restApiId;\n      },\n    });\n  }\n}\n"],
  "mappings": "oOACA,OAAA,QAAA,iBAEA,uBAAA,QAAA,2BACA,aAAA,QAAA,iBACA,SAAA,QAAA,aAmBA,wCAAgD,cAAA,UAAU,CAYxD,YAAY,MAAkB,GAAY,MAAsC,WAC9E,MAAM,MAAO,8FAEb,KAAM,WAAY,KAAK,gBACjB,SAAW,GAAI,wBAAA,cAAc,KAAM,WAAY,CACnD,KAAI,IAAE,MAAM,kBAAc,MAAA,KAAA,OAAA,GAAI,OAAA,MAAM,SAAS,MAC7C,UACA,KAAM,qBACN,aAAc,MAAM,iBAAiB,IAAI,UAAY,SAAS,aAC9D,6BAA4B,IAAE,MAAM,mBAAe,MAAA,KAAA,OAAA,OAAA,GAAE,YACrD,eAAgB,MAAM,gBAAkB,wCAG1C,KAAK,aAAe,SAAS,IAC7B,KAAK,cAAgB,OAAA,MAAM,GAAG,MAAM,UAAU,CAC5C,QAAS,cACT,SAAU,UACV,aAAc,eAAe,KAAK,iBAEpC,KAAK,kBAAoB,SAAA,kBAAkB,QAOtC,aAAa,QAAiB,CACnC,GAAI,KAAK,WAAa,KAAK,YAAc,QAAQ,UAC/C,KAAM,IAAI,OAAM,uDAGlB,KAAK,UAAY,QAAQ,UAOnB,eAAa,CACnB,MAAO,QAAA,KAAK,OAAO,CACjB,QAAS,IAAK,CACZ,GAAI,CAAC,KAAK,UACR,KAAM,IAAI,OAAM,eAAe,KAAK,KAAK,uCAE3C,MAAO,MAAK,cAxDpB,QAAA,2BAAA",
  "names": []
}
