{
  "version": 3,
  "sources": ["aws.ts"],
  "sourcesContent": ["import * as cdk from '../../../core';\nimport { ArnFormat } from '../../../core';\nimport { IConstruct } from 'constructs';\nimport { Integration, IntegrationConfig, IntegrationOptions, IntegrationType } from '../integration';\nimport { Method } from '../method';\nimport { parseAwsApiCall } from '../util';\n\nexport interface AwsIntegrationProps {\n                                                                    \n  readonly proxy?: boolean;\n\n                                                                   \n  readonly service: string;\n\n                                                                                                        \n  readonly subdomain?: string;\n\n                                                                                                                                                                                                                                                                         \n  readonly path?: string;\n\n                                                                                                                                                                                 \n  readonly action?: string;\n\n                                                                                                                                                     \n  readonly actionParameters?: { [key: string]: string };\n\n                                                                            \n  readonly integrationHttpMethod?: string;\n\n                                                                                              \n  readonly options?: IntegrationOptions\n\n                                                                                                        \n  readonly region?: string;\n}\n\n                                                                                                                                                                                                                                                            \nexport class AwsIntegration extends Integration {\n  private scope?: IConstruct;\n\n  constructor(props: AwsIntegrationProps) {\n    const backend = props.subdomain ? `${props.subdomain}.${props.service}` : props.service;\n    const type = props.proxy ? IntegrationType.AWS_PROXY : IntegrationType.AWS;\n    const { apiType, apiValue } = parseAwsApiCall(props.path, props.action, props.actionParameters);\n    super({\n      type,\n      integrationHttpMethod: props.integrationHttpMethod || 'POST',\n      uri: cdk.Lazy.string({\n        produce: () => {\n          if (!this.scope) { throw new Error('AwsIntegration must be used in API'); }\n          return cdk.Stack.of(this.scope).formatArn({\n            service: 'apigateway',\n            account: backend,\n            resource: apiType,\n            arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n            resourceName: apiValue,\n            region: props.region,\n          });\n        },\n      }),\n      options: props.options,\n    });\n  }\n\n  public bind(method: Method): IntegrationConfig {\n    const bindResult = super.bind(method);\n    this.scope = method;\n    return bindResult;\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,iBACA,OAAA,QAAA,iBAEA,cAAA,QAAA,kBAEA,OAAA,QAAA,WAgCA,4BAAoC,eAAA,WAAW,CAG7C,YAAY,MAA0B,+EACpC,KAAM,SAAU,MAAM,UAAY,GAAG,MAAM,aAAa,MAAM,UAAY,MAAM,QAC1E,KAAO,MAAM,MAAQ,cAAA,gBAAgB,UAAY,cAAA,gBAAgB,IACjE,CAAE,QAAS,UAAa,OAAA,gBAAgB,MAAM,KAAM,MAAM,OAAQ,MAAM,kBAC9E,MAAM,CACJ,KACA,sBAAuB,MAAM,uBAAyB,OACtD,IAAK,IAAI,KAAK,OAAO,CACnB,QAAS,IAAK,CACZ,GAAI,CAAC,KAAK,MAAS,KAAM,IAAI,OAAM,sCACnC,MAAO,KAAI,MAAM,GAAG,KAAK,OAAO,UAAU,CACxC,QAAS,aACT,QAAS,QACT,SAAU,QACV,UAAW,OAAA,UAAU,oBACrB,aAAc,SACd,OAAQ,MAAM,YAIpB,QAAS,MAAM,UAIZ,KAAK,OAAc,mEACxB,KAAM,YAAa,MAAM,KAAK,QAC9B,YAAK,MAAQ,OACN,YA9BX,QAAA,eAAA",
  "names": []
}
