{
  "version": 3,
  "sources": ["applicationautoscaling.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T03:53:58.916Z\",\"fingerprint\":\"rk46RGI6R+s7O1pBRahv4Sqzd6Z3hsBCOKX8F9Xsvrg=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                               \nexport interface CfnScalableTargetProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly maxCapacity: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly minCapacity: number;\n\nn    readonly resourceId: string;\n\nn    readonly roleArn: string;\n\nn    readonly scalableDimension: string;\n\n                                                                                                                                                                                                                                                                                                                 \n    readonly serviceNamespace: string;\n\nn    readonly scheduledActions?: Array<CfnScalableTarget.ScheduledActionProperty | cdk.IResolvable> | cdk.IResolvable;\n\nn    readonly suspendedState?: CfnScalableTarget.SuspendedStateProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnScalableTargetProps`\n *\n * @param properties - the TypeScript properties of a `CfnScalableTargetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalableTargetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('maxCapacity', cdk.requiredValidator)(properties.maxCapacity));\n    errors.collect(cdk.propertyValidator('maxCapacity', cdk.validateNumber)(properties.maxCapacity));\n    errors.collect(cdk.propertyValidator('minCapacity', cdk.requiredValidator)(properties.minCapacity));\n    errors.collect(cdk.propertyValidator('minCapacity', cdk.validateNumber)(properties.minCapacity));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.requiredValidator)(properties.resourceId));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.validateString)(properties.resourceId));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('scalableDimension', cdk.requiredValidator)(properties.scalableDimension));\n    errors.collect(cdk.propertyValidator('scalableDimension', cdk.validateString)(properties.scalableDimension));\n    errors.collect(cdk.propertyValidator('scheduledActions', cdk.listValidator(CfnScalableTarget_ScheduledActionPropertyValidator))(properties.scheduledActions));\n    errors.collect(cdk.propertyValidator('serviceNamespace', cdk.requiredValidator)(properties.serviceNamespace));\n    errors.collect(cdk.propertyValidator('serviceNamespace', cdk.validateString)(properties.serviceNamespace));\n    errors.collect(cdk.propertyValidator('suspendedState', CfnScalableTarget_SuspendedStatePropertyValidator)(properties.suspendedState));\n    return errors.wrap('supplied properties not correct for \"CfnScalableTargetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget` resource\n *\n * @param properties - the TypeScript properties of a `CfnScalableTargetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalableTargetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalableTargetPropsValidator(properties).assertSuccess();\n    return {\n        MaxCapacity: cdk.numberToCloudFormation(properties.maxCapacity),\n        MinCapacity: cdk.numberToCloudFormation(properties.minCapacity),\n        ResourceId: cdk.stringToCloudFormation(properties.resourceId),\n        RoleARN: cdk.stringToCloudFormation(properties.roleArn),\n        ScalableDimension: cdk.stringToCloudFormation(properties.scalableDimension),\n        ServiceNamespace: cdk.stringToCloudFormation(properties.serviceNamespace),\n        ScheduledActions: cdk.listMapper(cfnScalableTargetScheduledActionPropertyToCloudFormation)(properties.scheduledActions),\n        SuspendedState: cfnScalableTargetSuspendedStatePropertyToCloudFormation(properties.suspendedState),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalableTargetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalableTargetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalableTargetProps>();\n    ret.addPropertyResult('maxCapacity', 'MaxCapacity', cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacity));\n    ret.addPropertyResult('minCapacity', 'MinCapacity', cfn_parse.FromCloudFormation.getNumber(properties.MinCapacity));\n    ret.addPropertyResult('resourceId', 'ResourceId', cfn_parse.FromCloudFormation.getString(properties.ResourceId));\n    ret.addPropertyResult('roleArn', 'RoleARN', cfn_parse.FromCloudFormation.getString(properties.RoleARN));\n    ret.addPropertyResult('scalableDimension', 'ScalableDimension', cfn_parse.FromCloudFormation.getString(properties.ScalableDimension));\n    ret.addPropertyResult('serviceNamespace', 'ServiceNamespace', cfn_parse.FromCloudFormation.getString(properties.ServiceNamespace));\n    ret.addPropertyResult('scheduledActions', 'ScheduledActions', properties.ScheduledActions != null ? cfn_parse.FromCloudFormation.getArray(CfnScalableTargetScheduledActionPropertyFromCloudFormation)(properties.ScheduledActions) : undefined);\n    ret.addPropertyResult('suspendedState', 'SuspendedState', properties.SuspendedState != null ? CfnScalableTargetSuspendedStatePropertyFromCloudFormation(properties.SuspendedState) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnScalableTarget extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::ApplicationAutoScaling::ScalableTarget\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnScalableTarget {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnScalableTargetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnScalableTarget(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public maxCapacity: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public minCapacity: number;\n\nn    public resourceId: string;\n\nn    public roleArn: string;\n\nn    public scalableDimension: string;\n\n                                                                                                                                                                                                                                                                                                                 \n    public serviceNamespace: string;\n\nn    public scheduledActions: Array<CfnScalableTarget.ScheduledActionProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public suspendedState: CfnScalableTarget.SuspendedStateProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                 \n    constructor(scope: constructs.Construct, id: string, props: CfnScalableTargetProps) {\n        super(scope, id, { type: CfnScalableTarget.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'maxCapacity', this);\n        cdk.requireProperty(props, 'minCapacity', this);\n        cdk.requireProperty(props, 'resourceId', this);\n        cdk.requireProperty(props, 'roleArn', this);\n        cdk.requireProperty(props, 'scalableDimension', this);\n        cdk.requireProperty(props, 'serviceNamespace', this);\n\n        this.maxCapacity = props.maxCapacity;\n        this.minCapacity = props.minCapacity;\n        this.resourceId = props.resourceId;\n        this.roleArn = props.roleArn;\n        this.scalableDimension = props.scalableDimension;\n        this.serviceNamespace = props.serviceNamespace;\n        this.scheduledActions = props.scheduledActions;\n        this.suspendedState = props.suspendedState;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnScalableTarget.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            maxCapacity: this.maxCapacity,\n            minCapacity: this.minCapacity,\n            resourceId: this.resourceId,\n            roleArn: this.roleArn,\n            scalableDimension: this.scalableDimension,\n            serviceNamespace: this.serviceNamespace,\n            scheduledActions: this.scheduledActions,\n            suspendedState: this.suspendedState,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnScalableTargetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnScalableTarget {\nn    export interface ScalableTargetActionProperty {\n                                                                                                                                                                                                                                                                                                            \n        readonly maxCapacity?: number;\n                                                                                                                                                                                                                                                                                                            \n        readonly minCapacity?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScalableTargetActionProperty`\n *\n * @param properties - the TypeScript properties of a `ScalableTargetActionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalableTarget_ScalableTargetActionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('maxCapacity', cdk.validateNumber)(properties.maxCapacity));\n    errors.collect(cdk.propertyValidator('minCapacity', cdk.validateNumber)(properties.minCapacity));\n    return errors.wrap('supplied properties not correct for \"ScalableTargetActionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.ScalableTargetAction` resource\n *\n * @param properties - the TypeScript properties of a `ScalableTargetActionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.ScalableTargetAction` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalableTargetScalableTargetActionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalableTarget_ScalableTargetActionPropertyValidator(properties).assertSuccess();\n    return {\n        MaxCapacity: cdk.numberToCloudFormation(properties.maxCapacity),\n        MinCapacity: cdk.numberToCloudFormation(properties.minCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalableTargetScalableTargetActionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalableTarget.ScalableTargetActionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalableTarget.ScalableTargetActionProperty>();\n    ret.addPropertyResult('maxCapacity', 'MaxCapacity', properties.MaxCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacity) : undefined);\n    ret.addPropertyResult('minCapacity', 'MinCapacity', properties.MinCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalableTarget {\nn    export interface ScheduledActionProperty {\n                                                                                                                                                                                                                                                                                                                                       \n        readonly endTime?: Date | cdk.IResolvable;\nn        readonly scalableTargetAction?: CfnScalableTarget.ScalableTargetActionProperty | cdk.IResolvable;\nn        readonly schedule: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                   \n        readonly scheduledActionName: string;\n                                                                                                                                                                                                                                                                                                                                           \n        readonly startTime?: Date | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                \n        readonly timezone?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScheduledActionProperty`\n *\n * @param properties - the TypeScript properties of a `ScheduledActionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalableTarget_ScheduledActionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('endTime', cdk.validateDate)(properties.endTime));\n    errors.collect(cdk.propertyValidator('scalableTargetAction', CfnScalableTarget_ScalableTargetActionPropertyValidator)(properties.scalableTargetAction));\n    errors.collect(cdk.propertyValidator('schedule', cdk.requiredValidator)(properties.schedule));\n    errors.collect(cdk.propertyValidator('schedule', cdk.validateString)(properties.schedule));\n    errors.collect(cdk.propertyValidator('scheduledActionName', cdk.requiredValidator)(properties.scheduledActionName));\n    errors.collect(cdk.propertyValidator('scheduledActionName', cdk.validateString)(properties.scheduledActionName));\n    errors.collect(cdk.propertyValidator('startTime', cdk.validateDate)(properties.startTime));\n    errors.collect(cdk.propertyValidator('timezone', cdk.validateString)(properties.timezone));\n    return errors.wrap('supplied properties not correct for \"ScheduledActionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.ScheduledAction` resource\n *\n * @param properties - the TypeScript properties of a `ScheduledActionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.ScheduledAction` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalableTargetScheduledActionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalableTarget_ScheduledActionPropertyValidator(properties).assertSuccess();\n    return {\n        EndTime: cdk.dateToCloudFormation(properties.endTime),\n        ScalableTargetAction: cfnScalableTargetScalableTargetActionPropertyToCloudFormation(properties.scalableTargetAction),\n        Schedule: cdk.stringToCloudFormation(properties.schedule),\n        ScheduledActionName: cdk.stringToCloudFormation(properties.scheduledActionName),\n        StartTime: cdk.dateToCloudFormation(properties.startTime),\n        Timezone: cdk.stringToCloudFormation(properties.timezone),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalableTargetScheduledActionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalableTarget.ScheduledActionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalableTarget.ScheduledActionProperty>();\n    ret.addPropertyResult('endTime', 'EndTime', properties.EndTime != null ? cfn_parse.FromCloudFormation.getDate(properties.EndTime) : undefined);\n    ret.addPropertyResult('scalableTargetAction', 'ScalableTargetAction', properties.ScalableTargetAction != null ? CfnScalableTargetScalableTargetActionPropertyFromCloudFormation(properties.ScalableTargetAction) : undefined);\n    ret.addPropertyResult('schedule', 'Schedule', cfn_parse.FromCloudFormation.getString(properties.Schedule));\n    ret.addPropertyResult('scheduledActionName', 'ScheduledActionName', cfn_parse.FromCloudFormation.getString(properties.ScheduledActionName));\n    ret.addPropertyResult('startTime', 'StartTime', properties.StartTime != null ? cfn_parse.FromCloudFormation.getDate(properties.StartTime) : undefined);\n    ret.addPropertyResult('timezone', 'Timezone', properties.Timezone != null ? cfn_parse.FromCloudFormation.getString(properties.Timezone) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalableTarget {\nn    export interface SuspendedStateProperty {\nn        readonly dynamicScalingInSuspended?: boolean | cdk.IResolvable;\nn        readonly dynamicScalingOutSuspended?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n        readonly scheduledScalingSuspended?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SuspendedStateProperty`\n *\n * @param properties - the TypeScript properties of a `SuspendedStateProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalableTarget_SuspendedStatePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dynamicScalingInSuspended', cdk.validateBoolean)(properties.dynamicScalingInSuspended));\n    errors.collect(cdk.propertyValidator('dynamicScalingOutSuspended', cdk.validateBoolean)(properties.dynamicScalingOutSuspended));\n    errors.collect(cdk.propertyValidator('scheduledScalingSuspended', cdk.validateBoolean)(properties.scheduledScalingSuspended));\n    return errors.wrap('supplied properties not correct for \"SuspendedStateProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.SuspendedState` resource\n *\n * @param properties - the TypeScript properties of a `SuspendedStateProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalableTarget.SuspendedState` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalableTargetSuspendedStatePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalableTarget_SuspendedStatePropertyValidator(properties).assertSuccess();\n    return {\n        DynamicScalingInSuspended: cdk.booleanToCloudFormation(properties.dynamicScalingInSuspended),\n        DynamicScalingOutSuspended: cdk.booleanToCloudFormation(properties.dynamicScalingOutSuspended),\n        ScheduledScalingSuspended: cdk.booleanToCloudFormation(properties.scheduledScalingSuspended),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalableTargetSuspendedStatePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalableTarget.SuspendedStateProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalableTarget.SuspendedStateProperty>();\n    ret.addPropertyResult('dynamicScalingInSuspended', 'DynamicScalingInSuspended', properties.DynamicScalingInSuspended != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DynamicScalingInSuspended) : undefined);\n    ret.addPropertyResult('dynamicScalingOutSuspended', 'DynamicScalingOutSuspended', properties.DynamicScalingOutSuspended != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DynamicScalingOutSuspended) : undefined);\n    ret.addPropertyResult('scheduledScalingSuspended', 'ScheduledScalingSuspended', properties.ScheduledScalingSuspended != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ScheduledScalingSuspended) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                             \nexport interface CfnScalingPolicyProps {\n\n                                                                                                                                                                                                                                                   \n    readonly policyName: string;\n\nn    readonly policyType: string;\n\nn    readonly resourceId?: string;\n\nn    readonly scalableDimension?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    readonly scalingTargetId?: string;\n\n                                                                                                                                                                                                                                                                                                               \n    readonly serviceNamespace?: string;\n\n                                                                                                                                                                                                                                                              \n    readonly stepScalingPolicyConfiguration?: CfnScalingPolicy.StepScalingPolicyConfigurationProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                   \n    readonly targetTrackingScalingPolicyConfiguration?: CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnScalingPolicyProps`\n *\n * @param properties - the TypeScript properties of a `CfnScalingPolicyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('policyName', cdk.requiredValidator)(properties.policyName));\n    errors.collect(cdk.propertyValidator('policyName', cdk.validateString)(properties.policyName));\n    errors.collect(cdk.propertyValidator('policyType', cdk.requiredValidator)(properties.policyType));\n    errors.collect(cdk.propertyValidator('policyType', cdk.validateString)(properties.policyType));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.validateString)(properties.resourceId));\n    errors.collect(cdk.propertyValidator('scalableDimension', cdk.validateString)(properties.scalableDimension));\n    errors.collect(cdk.propertyValidator('scalingTargetId', cdk.validateString)(properties.scalingTargetId));\n    errors.collect(cdk.propertyValidator('serviceNamespace', cdk.validateString)(properties.serviceNamespace));\n    errors.collect(cdk.propertyValidator('stepScalingPolicyConfiguration', CfnScalingPolicy_StepScalingPolicyConfigurationPropertyValidator)(properties.stepScalingPolicyConfiguration));\n    errors.collect(cdk.propertyValidator('targetTrackingScalingPolicyConfiguration', CfnScalingPolicy_TargetTrackingScalingPolicyConfigurationPropertyValidator)(properties.targetTrackingScalingPolicyConfiguration));\n    return errors.wrap('supplied properties not correct for \"CfnScalingPolicyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy` resource\n *\n * @param properties - the TypeScript properties of a `CfnScalingPolicyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicyPropsValidator(properties).assertSuccess();\n    return {\n        PolicyName: cdk.stringToCloudFormation(properties.policyName),\n        PolicyType: cdk.stringToCloudFormation(properties.policyType),\n        ResourceId: cdk.stringToCloudFormation(properties.resourceId),\n        ScalableDimension: cdk.stringToCloudFormation(properties.scalableDimension),\n        ScalingTargetId: cdk.stringToCloudFormation(properties.scalingTargetId),\n        ServiceNamespace: cdk.stringToCloudFormation(properties.serviceNamespace),\n        StepScalingPolicyConfiguration: cfnScalingPolicyStepScalingPolicyConfigurationPropertyToCloudFormation(properties.stepScalingPolicyConfiguration),\n        TargetTrackingScalingPolicyConfiguration: cfnScalingPolicyTargetTrackingScalingPolicyConfigurationPropertyToCloudFormation(properties.targetTrackingScalingPolicyConfiguration),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicyProps>();\n    ret.addPropertyResult('policyName', 'PolicyName', cfn_parse.FromCloudFormation.getString(properties.PolicyName));\n    ret.addPropertyResult('policyType', 'PolicyType', cfn_parse.FromCloudFormation.getString(properties.PolicyType));\n    ret.addPropertyResult('resourceId', 'ResourceId', properties.ResourceId != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceId) : undefined);\n    ret.addPropertyResult('scalableDimension', 'ScalableDimension', properties.ScalableDimension != null ? cfn_parse.FromCloudFormation.getString(properties.ScalableDimension) : undefined);\n    ret.addPropertyResult('scalingTargetId', 'ScalingTargetId', properties.ScalingTargetId != null ? cfn_parse.FromCloudFormation.getString(properties.ScalingTargetId) : undefined);\n    ret.addPropertyResult('serviceNamespace', 'ServiceNamespace', properties.ServiceNamespace != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceNamespace) : undefined);\n    ret.addPropertyResult('stepScalingPolicyConfiguration', 'StepScalingPolicyConfiguration', properties.StepScalingPolicyConfiguration != null ? CfnScalingPolicyStepScalingPolicyConfigurationPropertyFromCloudFormation(properties.StepScalingPolicyConfiguration) : undefined);\n    ret.addPropertyResult('targetTrackingScalingPolicyConfiguration', 'TargetTrackingScalingPolicyConfiguration', properties.TargetTrackingScalingPolicyConfiguration != null ? CfnScalingPolicyTargetTrackingScalingPolicyConfigurationPropertyFromCloudFormation(properties.TargetTrackingScalingPolicyConfiguration) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnScalingPolicy extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::ApplicationAutoScaling::ScalingPolicy\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnScalingPolicy {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnScalingPolicyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnScalingPolicy(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                   \n    public policyName: string;\n\nn    public policyType: string;\n\nn    public resourceId: string | undefined;\n\nn    public scalableDimension: string | undefined;\n\nn    public scalingTargetId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                               \n    public serviceNamespace: string | undefined;\n\n                                                                                                                                                                                                                                                              \n    public stepScalingPolicyConfiguration: CfnScalingPolicy.StepScalingPolicyConfigurationProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                   \n    public targetTrackingScalingPolicyConfiguration: CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                \n    constructor(scope: constructs.Construct, id: string, props: CfnScalingPolicyProps) {\n        super(scope, id, { type: CfnScalingPolicy.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'policyName', this);\n        cdk.requireProperty(props, 'policyType', this);\n\n        this.policyName = props.policyName;\n        this.policyType = props.policyType;\n        this.resourceId = props.resourceId;\n        this.scalableDimension = props.scalableDimension;\n        this.scalingTargetId = props.scalingTargetId;\n        this.serviceNamespace = props.serviceNamespace;\n        this.stepScalingPolicyConfiguration = props.stepScalingPolicyConfiguration;\n        this.targetTrackingScalingPolicyConfiguration = props.targetTrackingScalingPolicyConfiguration;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnScalingPolicy.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            policyName: this.policyName,\n            policyType: this.policyType,\n            resourceId: this.resourceId,\n            scalableDimension: this.scalableDimension,\n            scalingTargetId: this.scalingTargetId,\n            serviceNamespace: this.serviceNamespace,\n            stepScalingPolicyConfiguration: this.stepScalingPolicyConfiguration,\n            targetTrackingScalingPolicyConfiguration: this.targetTrackingScalingPolicyConfiguration,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnScalingPolicyPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface CustomizedMetricSpecificationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly dimensions?: Array<CfnScalingPolicy.MetricDimensionProperty | cdk.IResolvable> | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                             \n        readonly metricName: string;\n                                                                                                                                                                                                                                                                                                                                 \n        readonly namespace: string;\n                                                                                                                                                                                                                                                                                                                                 \n        readonly statistic: string;\n                                                                                                                                                                                                                                                                                                                       \n        readonly unit?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CustomizedMetricSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `CustomizedMetricSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dimensions', cdk.listValidator(CfnScalingPolicy_MetricDimensionPropertyValidator))(properties.dimensions));\n    errors.collect(cdk.propertyValidator('metricName', cdk.requiredValidator)(properties.metricName));\n    errors.collect(cdk.propertyValidator('metricName', cdk.validateString)(properties.metricName));\n    errors.collect(cdk.propertyValidator('namespace', cdk.requiredValidator)(properties.namespace));\n    errors.collect(cdk.propertyValidator('namespace', cdk.validateString)(properties.namespace));\n    errors.collect(cdk.propertyValidator('statistic', cdk.requiredValidator)(properties.statistic));\n    errors.collect(cdk.propertyValidator('statistic', cdk.validateString)(properties.statistic));\n    errors.collect(cdk.propertyValidator('unit', cdk.validateString)(properties.unit));\n    return errors.wrap('supplied properties not correct for \"CustomizedMetricSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.CustomizedMetricSpecification` resource\n *\n * @param properties - the TypeScript properties of a `CustomizedMetricSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.CustomizedMetricSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyCustomizedMetricSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Dimensions: cdk.listMapper(cfnScalingPolicyMetricDimensionPropertyToCloudFormation)(properties.dimensions),\n        MetricName: cdk.stringToCloudFormation(properties.metricName),\n        Namespace: cdk.stringToCloudFormation(properties.namespace),\n        Statistic: cdk.stringToCloudFormation(properties.statistic),\n        Unit: cdk.stringToCloudFormation(properties.unit),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyCustomizedMetricSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.CustomizedMetricSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.CustomizedMetricSpecificationProperty>();\n    ret.addPropertyResult('dimensions', 'Dimensions', properties.Dimensions != null ? cfn_parse.FromCloudFormation.getArray(CfnScalingPolicyMetricDimensionPropertyFromCloudFormation)(properties.Dimensions) : undefined);\n    ret.addPropertyResult('metricName', 'MetricName', cfn_parse.FromCloudFormation.getString(properties.MetricName));\n    ret.addPropertyResult('namespace', 'Namespace', cfn_parse.FromCloudFormation.getString(properties.Namespace));\n    ret.addPropertyResult('statistic', 'Statistic', cfn_parse.FromCloudFormation.getString(properties.Statistic));\n    ret.addPropertyResult('unit', 'Unit', properties.Unit != null ? cfn_parse.FromCloudFormation.getString(properties.Unit) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    export interface MetricDimensionProperty {\n                                                                                                                                                                                                                                                                                              \n        readonly name: string;\n                                                                                                                                                                                                                                                                                                \n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MetricDimensionProperty`\n *\n * @param properties - the TypeScript properties of a `MetricDimensionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_MetricDimensionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"MetricDimensionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.MetricDimension` resource\n *\n * @param properties - the TypeScript properties of a `MetricDimensionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.MetricDimension` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyMetricDimensionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_MetricDimensionPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyMetricDimensionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.MetricDimensionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.MetricDimensionProperty>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredefinedMetricSpecificationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly predefinedMetricType: string;\nn        readonly resourceLabel?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredefinedMetricSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PredefinedMetricSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.requiredValidator)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.validateString)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('resourceLabel', cdk.validateString)(properties.resourceLabel));\n    return errors.wrap('supplied properties not correct for \"PredefinedMetricSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PredefinedMetricSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredefinedMetricSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedMetricType: cdk.stringToCloudFormation(properties.predefinedMetricType),\n        ResourceLabel: cdk.stringToCloudFormation(properties.resourceLabel),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredefinedMetricSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredefinedMetricSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredefinedMetricSpecificationProperty>();\n    ret.addPropertyResult('predefinedMetricType', 'PredefinedMetricType', cfn_parse.FromCloudFormation.getString(properties.PredefinedMetricType));\n    ret.addPropertyResult('resourceLabel', 'ResourceLabel', properties.ResourceLabel != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceLabel) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface StepAdjustmentProperty {\nn        readonly metricIntervalLowerBound?: number;\nn        readonly metricIntervalUpperBound?: number;\nn        readonly scalingAdjustment: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StepAdjustmentProperty`\n *\n * @param properties - the TypeScript properties of a `StepAdjustmentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_StepAdjustmentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('metricIntervalLowerBound', cdk.validateNumber)(properties.metricIntervalLowerBound));\n    errors.collect(cdk.propertyValidator('metricIntervalUpperBound', cdk.validateNumber)(properties.metricIntervalUpperBound));\n    errors.collect(cdk.propertyValidator('scalingAdjustment', cdk.requiredValidator)(properties.scalingAdjustment));\n    errors.collect(cdk.propertyValidator('scalingAdjustment', cdk.validateNumber)(properties.scalingAdjustment));\n    return errors.wrap('supplied properties not correct for \"StepAdjustmentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.StepAdjustment` resource\n *\n * @param properties - the TypeScript properties of a `StepAdjustmentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.StepAdjustment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyStepAdjustmentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_StepAdjustmentPropertyValidator(properties).assertSuccess();\n    return {\n        MetricIntervalLowerBound: cdk.numberToCloudFormation(properties.metricIntervalLowerBound),\n        MetricIntervalUpperBound: cdk.numberToCloudFormation(properties.metricIntervalUpperBound),\n        ScalingAdjustment: cdk.numberToCloudFormation(properties.scalingAdjustment),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyStepAdjustmentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.StepAdjustmentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.StepAdjustmentProperty>();\n    ret.addPropertyResult('metricIntervalLowerBound', 'MetricIntervalLowerBound', properties.MetricIntervalLowerBound != null ? cfn_parse.FromCloudFormation.getNumber(properties.MetricIntervalLowerBound) : undefined);\n    ret.addPropertyResult('metricIntervalUpperBound', 'MetricIntervalUpperBound', properties.MetricIntervalUpperBound != null ? cfn_parse.FromCloudFormation.getNumber(properties.MetricIntervalUpperBound) : undefined);\n    ret.addPropertyResult('scalingAdjustment', 'ScalingAdjustment', cfn_parse.FromCloudFormation.getNumber(properties.ScalingAdjustment));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface StepScalingPolicyConfigurationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly adjustmentType?: string;\nn        readonly cooldown?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly metricAggregationType?: string;\nn        readonly minAdjustmentMagnitude?: number;\nn        readonly stepAdjustments?: Array<CfnScalingPolicy.StepAdjustmentProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StepScalingPolicyConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `StepScalingPolicyConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_StepScalingPolicyConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('adjustmentType', cdk.validateString)(properties.adjustmentType));\n    errors.collect(cdk.propertyValidator('cooldown', cdk.validateNumber)(properties.cooldown));\n    errors.collect(cdk.propertyValidator('metricAggregationType', cdk.validateString)(properties.metricAggregationType));\n    errors.collect(cdk.propertyValidator('minAdjustmentMagnitude', cdk.validateNumber)(properties.minAdjustmentMagnitude));\n    errors.collect(cdk.propertyValidator('stepAdjustments', cdk.listValidator(CfnScalingPolicy_StepAdjustmentPropertyValidator))(properties.stepAdjustments));\n    return errors.wrap('supplied properties not correct for \"StepScalingPolicyConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `StepScalingPolicyConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyStepScalingPolicyConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_StepScalingPolicyConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AdjustmentType: cdk.stringToCloudFormation(properties.adjustmentType),\n        Cooldown: cdk.numberToCloudFormation(properties.cooldown),\n        MetricAggregationType: cdk.stringToCloudFormation(properties.metricAggregationType),\n        MinAdjustmentMagnitude: cdk.numberToCloudFormation(properties.minAdjustmentMagnitude),\n        StepAdjustments: cdk.listMapper(cfnScalingPolicyStepAdjustmentPropertyToCloudFormation)(properties.stepAdjustments),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyStepScalingPolicyConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.StepScalingPolicyConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.StepScalingPolicyConfigurationProperty>();\n    ret.addPropertyResult('adjustmentType', 'AdjustmentType', properties.AdjustmentType != null ? cfn_parse.FromCloudFormation.getString(properties.AdjustmentType) : undefined);\n    ret.addPropertyResult('cooldown', 'Cooldown', properties.Cooldown != null ? cfn_parse.FromCloudFormation.getNumber(properties.Cooldown) : undefined);\n    ret.addPropertyResult('metricAggregationType', 'MetricAggregationType', properties.MetricAggregationType != null ? cfn_parse.FromCloudFormation.getString(properties.MetricAggregationType) : undefined);\n    ret.addPropertyResult('minAdjustmentMagnitude', 'MinAdjustmentMagnitude', properties.MinAdjustmentMagnitude != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinAdjustmentMagnitude) : undefined);\n    ret.addPropertyResult('stepAdjustments', 'StepAdjustments', properties.StepAdjustments != null ? cfn_parse.FromCloudFormation.getArray(CfnScalingPolicyStepAdjustmentPropertyFromCloudFormation)(properties.StepAdjustments) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface TargetTrackingScalingPolicyConfigurationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                      \n        readonly customizedMetricSpecification?: CfnScalingPolicy.CustomizedMetricSpecificationProperty | cdk.IResolvable;\nn        readonly disableScaleIn?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                      \n        readonly predefinedMetricSpecification?: CfnScalingPolicy.PredefinedMetricSpecificationProperty | cdk.IResolvable;\nn        readonly scaleInCooldown?: number;\nn        readonly scaleOutCooldown?: number;\nn        readonly targetValue: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetTrackingScalingPolicyConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `TargetTrackingScalingPolicyConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_TargetTrackingScalingPolicyConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('customizedMetricSpecification', CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator)(properties.customizedMetricSpecification));\n    errors.collect(cdk.propertyValidator('disableScaleIn', cdk.validateBoolean)(properties.disableScaleIn));\n    errors.collect(cdk.propertyValidator('predefinedMetricSpecification', CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator)(properties.predefinedMetricSpecification));\n    errors.collect(cdk.propertyValidator('scaleInCooldown', cdk.validateNumber)(properties.scaleInCooldown));\n    errors.collect(cdk.propertyValidator('scaleOutCooldown', cdk.validateNumber)(properties.scaleOutCooldown));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.requiredValidator)(properties.targetValue));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.validateNumber)(properties.targetValue));\n    return errors.wrap('supplied properties not correct for \"TargetTrackingScalingPolicyConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `TargetTrackingScalingPolicyConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyTargetTrackingScalingPolicyConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_TargetTrackingScalingPolicyConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        CustomizedMetricSpecification: cfnScalingPolicyCustomizedMetricSpecificationPropertyToCloudFormation(properties.customizedMetricSpecification),\n        DisableScaleIn: cdk.booleanToCloudFormation(properties.disableScaleIn),\n        PredefinedMetricSpecification: cfnScalingPolicyPredefinedMetricSpecificationPropertyToCloudFormation(properties.predefinedMetricSpecification),\n        ScaleInCooldown: cdk.numberToCloudFormation(properties.scaleInCooldown),\n        ScaleOutCooldown: cdk.numberToCloudFormation(properties.scaleOutCooldown),\n        TargetValue: cdk.numberToCloudFormation(properties.targetValue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyTargetTrackingScalingPolicyConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty>();\n    ret.addPropertyResult('customizedMetricSpecification', 'CustomizedMetricSpecification', properties.CustomizedMetricSpecification != null ? CfnScalingPolicyCustomizedMetricSpecificationPropertyFromCloudFormation(properties.CustomizedMetricSpecification) : undefined);\n    ret.addPropertyResult('disableScaleIn', 'DisableScaleIn', properties.DisableScaleIn != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableScaleIn) : undefined);\n    ret.addPropertyResult('predefinedMetricSpecification', 'PredefinedMetricSpecification', properties.PredefinedMetricSpecification != null ? CfnScalingPolicyPredefinedMetricSpecificationPropertyFromCloudFormation(properties.PredefinedMetricSpecification) : undefined);\n    ret.addPropertyResult('scaleInCooldown', 'ScaleInCooldown', properties.ScaleInCooldown != null ? cfn_parse.FromCloudFormation.getNumber(properties.ScaleInCooldown) : undefined);\n    ret.addPropertyResult('scaleOutCooldown', 'ScaleOutCooldown', properties.ScaleOutCooldown != null ? cfn_parse.FromCloudFormation.getNumber(properties.ScaleOutCooldown) : undefined);\n    ret.addPropertyResult('targetValue', 'TargetValue', cfn_parse.FromCloudFormation.getNumber(properties.TargetValue));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
