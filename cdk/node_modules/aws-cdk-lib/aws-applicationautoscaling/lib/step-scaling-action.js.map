{
  "version": 3,
  "sources": ["step-scaling-action.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnScalingPolicy } from './applicationautoscaling.generated';\nimport { IScalableTarget } from './scalable-target';\n\n                                          \nexport interface StepScalingActionProps {\n                                    \n  readonly scalingTarget: IScalableTarget;\n\n                                                                                              \n  readonly policyName?: string;\n\n                                                                                               \n  readonly adjustmentType?: AdjustmentType;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n  readonly cooldown?: cdk.Duration;\n\n                                                                                                                                                                                                                                                                              \n  readonly minAdjustmentMagnitude?: number;\n\n                                                                                            \n  readonly metricAggregationType?: MetricAggregationType;\n}\n\n                                                                                                                                                                                                                                                                                                                 \nexport class StepScalingAction extends Construct {\n                                          \n  public readonly scalingPolicyArn: string;\n\n  private readonly adjustments = new Array<CfnScalingPolicy.StepAdjustmentProperty>();\n\n  constructor(scope: Construct, id: string, props: StepScalingActionProps) {\n    super(scope, id);\n\n    // Cloudformation requires either the ResourceId, ScalableDimension, and ServiceNamespace\n    // properties, or the ScalingTargetId property, but not both.\n    // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html\n    const resource = new CfnScalingPolicy(this, 'Resource', {\n      policyName: props.policyName || cdk.Names.uniqueId(this),\n      policyType: 'StepScaling',\n      scalingTargetId: props.scalingTarget.scalableTargetId,\n      stepScalingPolicyConfiguration: {\n        adjustmentType: props.adjustmentType,\n        cooldown: props.cooldown && props.cooldown.toSeconds(),\n        minAdjustmentMagnitude: props.minAdjustmentMagnitude,\n        metricAggregationType: props.metricAggregationType,\n        stepAdjustments: cdk.Lazy.any({ produce: () => this.adjustments }),\n      } as CfnScalingPolicy.StepScalingPolicyConfigurationProperty,\n    });\n\n    this.scalingPolicyArn = resource.ref;\n  }\n\n                                                               \n  public addAdjustment(adjustment: AdjustmentTier) {\n    if (adjustment.lowerBound === undefined && adjustment.upperBound === undefined) {\n      throw new Error('At least one of lowerBound or upperBound is required');\n    }\n    this.adjustments.push({\n      metricIntervalLowerBound: adjustment.lowerBound,\n      metricIntervalUpperBound: adjustment.upperBound,\n      scalingAdjustment: adjustment.adjustment,\n    });\n  }\n}\n\n                                                 \nexport enum AdjustmentType {\n                                                                                                                                                         \n  CHANGE_IN_CAPACITY = 'ChangeInCapacity',\n\n                                                                                                                                                                                                        \n  PERCENT_CHANGE_IN_CAPACITY = 'PercentChangeInCapacity',\n\n                                                                   \n  EXACT_CAPACITY = 'ExactCapacity',\n}\n\n                                                           \nexport enum MetricAggregationType {\n                        \n  AVERAGE = 'Average',\n\n                        \n  MINIMUM = 'Minimum',\n\n                        \n  MAXIMUM = 'Maximum'\n}\n\n                        \nexport interface AdjustmentTier {\n                                                                                                                                                                                                                                                                              \n  readonly adjustment: number;\n\n                                                                                                                                                                                                                                                                                                         \n  readonly lowerBound?: number;\n\n                                                                                                                                                                                                                              \n  readonly upperBound?: number;\n}\n"],
  "mappings": "6QAAA,IAAA,QAAA,cACA,aAAA,QAAA,cACA,mCAAA,QAAA,sCAyBA,+BAAuC,cAAA,SAAS,CAM9C,YAAY,MAAkB,GAAY,MAA6B,CACrE,MAAM,MAAO,IAHE,KAAA,YAAc,GAAI,oGAQjC,KAAM,UAAW,GAAI,oCAAA,iBAAiB,KAAM,WAAY,CACtD,WAAY,MAAM,YAAc,IAAI,MAAM,SAAS,MACnD,WAAY,cACZ,gBAAiB,MAAM,cAAc,iBACrC,+BAAgC,CAC9B,eAAgB,MAAM,eACtB,SAAU,MAAM,UAAY,MAAM,SAAS,YAC3C,uBAAwB,MAAM,uBAC9B,sBAAuB,MAAM,sBAC7B,gBAAiB,IAAI,KAAK,IAAI,CAAE,QAAS,IAAM,KAAK,iBAIxD,KAAK,iBAAmB,SAAS,IAI5B,cAAc,WAA0B,CAC7C,6FAAI,WAAW,aAAe,QAAa,WAAW,aAAe,OACnE,KAAM,IAAI,OAAM,wDAElB,KAAK,YAAY,KAAK,CACpB,yBAA0B,WAAW,WACrC,yBAA0B,WAAW,WACrC,kBAAmB,WAAW,cApCpC,QAAA,kBAAA,gJA0CA,GAAY,gBAAZ,AAAA,UAAY,gBAAc,CAExB,gBAAA,mBAAA,mBAGA,gBAAA,2BAAA,0BAGA,gBAAA,eAAA,kBARU,eAAA,QAAA,gBAAA,SAAA,eAAc,KAY1B,GAAY,uBAAZ,AAAA,UAAY,uBAAqB,CAE/B,uBAAA,QAAA,UAGA,uBAAA,QAAA,UAGA,uBAAA,QAAA,YARU,sBAAA,QAAA,uBAAA,SAAA,sBAAqB",
  "names": []
}
