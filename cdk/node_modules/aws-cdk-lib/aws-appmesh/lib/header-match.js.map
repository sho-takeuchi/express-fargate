{
  "version": 3,
  "sources": ["header-match.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnRoute } from './index';\n\n                                          \nexport interface HeaderMatchConfig {\n                                                                    \n  readonly headerMatch: CfnRoute.HttpRouteHeaderProperty;\n}\n\n                                                    \nexport abstract class HeaderMatch {\n                                                                                                                                                                                                                                                    \n  public static valueIs(headerName: string, headerValue: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, false, { exact: headerValue });\n  }\n\n                                                                                                                                                                                                                                                        \n  public static valueIsNot(headerName: string, headerValue: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, true, { exact: headerValue });\n  }\n\n                                                                                                                                                                                                                                            \n  public static valueStartsWith(headerName: string, prefix: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, false, { prefix });\n  }\n\n                                                                                                                                                                                                                                                \n  public static valueDoesNotStartWith(headerName: string, prefix: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, true, { prefix });\n  }\n\n                                                                                                                                                                                                                                          \n  public static valueEndsWith(headerName: string, suffix: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, false, { suffix });\n  }\n\n                                                                                                                                                                                                                                              \n  public static valueDoesNotEndWith(headerName: string, suffix: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, true, { suffix });\n  }\n\n                                                                                                                                                                                                                                       \n  public static valueMatchesRegex(headerName: string, regex: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, false, { regex });\n  }\n\n                                                                                                                                                                                                                                           \n  public static valueDoesNotMatchRegex(headerName: string, regex: string): HeaderMatch {\n    return new HeaderMatchImpl(headerName, true, { regex });\n  }\n\n                                                                                                                                                                                                                                                                                                                            \n  public static valuesIsInRange(headerName: string, start: number, end: number): HeaderMatch {\n    return new HeaderMatchImpl(headerName, false, {\n      range: {\n        start,\n        end,\n      },\n    });\n  }\n\n                                                                                                                                                                                                                                                                                                                                \n  public static valuesIsNotInRange(headerName: string, start: number, end: number): HeaderMatch {\n    return new HeaderMatchImpl(headerName, true, {\n      range: {\n        start,\n        end,\n      },\n    });\n  }\n\n                                                        \n  public abstract bind(scope: Construct): HeaderMatchConfig;\n}\n\nclass HeaderMatchImpl extends HeaderMatch {\n  constructor(\n    private readonly headerName: string,\n    private readonly invert: boolean,\n    private readonly matchProperty: CfnRoute.HeaderMatchMethodProperty,\n  ) {\n    super();\n  }\n\n  bind(_scope: Construct): HeaderMatchConfig {\n    return {\n      headerMatch: {\n        name: this.headerName,\n        invert: this.invert,\n        match: this.matchProperty,\n      },\n    };\n  }\n}\n"],
  "mappings": "uJAUA,iBAAiC,OAEjB,SAAQ,WAAoB,YAAmB,CAC3D,MAAO,IAAI,iBAAgB,WAAY,GAAO,CAAE,MAAO,oBAI3C,YAAW,WAAoB,YAAmB,CAC9D,MAAO,IAAI,iBAAgB,WAAY,GAAM,CAAE,MAAO,oBAI1C,iBAAgB,WAAoB,OAAc,CAC9D,MAAO,IAAI,iBAAgB,WAAY,GAAO,CAAE,eAIpC,uBAAsB,WAAoB,OAAc,CACpE,MAAO,IAAI,iBAAgB,WAAY,GAAM,CAAE,eAInC,eAAc,WAAoB,OAAc,CAC5D,MAAO,IAAI,iBAAgB,WAAY,GAAO,CAAE,eAIpC,qBAAoB,WAAoB,OAAc,CAClE,MAAO,IAAI,iBAAgB,WAAY,GAAM,CAAE,eAInC,mBAAkB,WAAoB,MAAa,CAC/D,MAAO,IAAI,iBAAgB,WAAY,GAAO,CAAE,cAIpC,wBAAuB,WAAoB,MAAa,CACpE,MAAO,IAAI,iBAAgB,WAAY,GAAM,CAAE,cAInC,iBAAgB,WAAoB,MAAe,IAAW,CAC1E,MAAO,IAAI,iBAAgB,WAAY,GAAO,CAC5C,MAAO,CACL,MACA,aAMQ,oBAAmB,WAAoB,MAAe,IAAW,CAC7E,MAAO,IAAI,iBAAgB,WAAY,GAAM,CAC3C,MAAO,CACL,MACA,QAxDR,QAAA,YAAA,+GAiEA,6BAA8B,YAAW,CACvC,YACmB,WACA,OACA,cAAiD,CAElE,QAJiB,KAAA,WAAA,WACA,KAAA,OAAA,OACA,KAAA,cAAA,cAKnB,KAAK,OAAiB,CACpB,MAAO,CACL,YAAa,CACX,KAAM,KAAK,WACX,OAAQ,KAAK,OACb,MAAO,KAAK",
  "names": []
}
