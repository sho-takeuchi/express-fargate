{
  "version": 3,
  "sources": ["virtual-router-listener.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnVirtualRouter } from './appmesh.generated';\nimport { Protocol } from './shared-interfaces';\n\n                                                  \nexport interface VirtualRouterListenerConfig {\n                                                           \n  readonly listener: CfnVirtualRouter.VirtualRouterListenerProperty;\n}\n\n                                                                                   \nexport abstract class VirtualRouterListener {\n                                                                                                                                      \n  public static http(port?: number): VirtualRouterListener {\n    return new VirtualRouterListenerImpl(Protocol.HTTP, port);\n  }\n\n                                                                                                                                       \n  public static http2(port?: number): VirtualRouterListener {\n    return new VirtualRouterListenerImpl(Protocol.HTTP2, port);\n  }\n\n                                                                                                                                     \n  public static grpc(port?: number): VirtualRouterListener {\n    return new VirtualRouterListenerImpl(Protocol.GRPC, port);\n  }\n\n                                                                                                                                    \n  public static tcp(port?: number): VirtualRouterListener {\n    return new VirtualRouterListenerImpl(Protocol.TCP, port);\n  }\n\n                                                                                                                          \n  public abstract bind(scope: Construct): VirtualRouterListenerConfig;\n}\n\nclass VirtualRouterListenerImpl extends VirtualRouterListener {\n  private readonly protocol: Protocol;\n  private readonly port: number;\n\n  constructor(protocol: Protocol, port?: number) {\n    super();\n    this.protocol = protocol;\n    this.port = port ?? 8080;\n  }\n\n  bind(_scope: Construct): VirtualRouterListenerConfig {\n    return {\n      listener: {\n        portMapping: {\n          port: this.port,\n          protocol: this.protocol,\n        },\n      },\n    };\n  }\n}\n"],
  "mappings": "iKAEA,oBAAA,QAAA,uBASA,2BAA2C,OAE3B,MAAK,KAAa,CAC9B,MAAO,IAAI,2BAA0B,oBAAA,SAAS,KAAM,YAIxC,OAAM,KAAa,CAC/B,MAAO,IAAI,2BAA0B,oBAAA,SAAS,MAAO,YAIzC,MAAK,KAAa,CAC9B,MAAO,IAAI,2BAA0B,oBAAA,SAAS,KAAM,YAIxC,KAAI,KAAa,CAC7B,MAAO,IAAI,2BAA0B,oBAAA,SAAS,IAAK,OAlBvD,QAAA,sBAAA,6IAyBA,uCAAwC,sBAAqB,CAI3D,YAAY,SAAoB,KAAa,CAC3C,QACA,KAAK,SAAW,SAChB,KAAK,KAAO,MAAI,KAAJ,KAAQ,KAGtB,KAAK,OAAiB,CACpB,MAAO,CACL,SAAU,CACR,YAAa,CACX,KAAM,KAAK,KACX,SAAU,KAAK",
  "names": []
}
