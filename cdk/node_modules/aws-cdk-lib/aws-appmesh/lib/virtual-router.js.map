{
  "version": 3,
  "sources": ["virtual-router.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnVirtualRouter } from './appmesh.generated';\nimport { IMesh, Mesh } from './mesh';\nimport { renderMeshOwner } from './private/utils';\nimport { Route, RouteBaseProps } from './route';\nimport { VirtualRouterListener } from './virtual-router-listener';\n\n                                                                         \nexport interface IVirtualRouter extends cdk.IResource {\n                                                                   \n  readonly virtualRouterName: string;\n\n                                                                                          \n  readonly virtualRouterArn: string;\n\n                                                            \n  readonly mesh: IMesh;\n\n                                                 \n  addRoute(id: string, props: RouteBaseProps): Route;\n}\n\n                                                                   \nexport interface VirtualRouterBaseProps {\n                                                                                                               \n  readonly listeners?: VirtualRouterListener[];\n\n                                                                                                      \n  readonly virtualRouterName?: string;\n}\n\nabstract class VirtualRouterBase extends cdk.Resource implements IVirtualRouter {\n  /**\n   * The name of the VirtualRouter\n   */\n  public abstract readonly virtualRouterName: string;\n\n  /**\n   * The Amazon Resource Name (ARN) for the VirtualRouter\n   */\n  public abstract readonly virtualRouterArn: string;\n\n  /**\n   * The Mesh which the VirtualRouter belongs to\n   */\n  public abstract readonly mesh: IMesh;\n\n                                                 \n  public addRoute(id: string, props: RouteBaseProps): Route {\n    const route = new Route(this, id, {\n      ...props,\n      routeName: id,\n      mesh: this.mesh,\n      virtualRouter: this,\n    });\n\n    return route;\n  }\n}\n\n                                                                \nexport interface VirtualRouterProps extends VirtualRouterBaseProps {\n                                                            \n  readonly mesh: IMesh;\n}\n\nexport class VirtualRouter extends VirtualRouterBase {\n                                                              \n  public static fromVirtualRouterArn(scope: Construct, id: string, virtualRouterArn: string): IVirtualRouter {\n    return new class extends VirtualRouterBase {\n      readonly virtualRouterArn = virtualRouterArn;\n      private readonly parsedArn = cdk.Fn.split('/', cdk.Stack.of(scope).splitArn(virtualRouterArn, cdk.ArnFormat.SLASH_RESOURCE_NAME).resourceName!);\n      readonly virtualRouterName = cdk.Fn.select(2, this.parsedArn);\n      readonly mesh = Mesh.fromMeshName(this, 'Mesh', cdk.Fn.select(0, this.parsedArn));\n    }(scope, id);\n  }\n\n                                                                  \n  public static fromVirtualRouterAttributes(scope: Construct, id: string, attrs: VirtualRouterAttributes): IVirtualRouter {\n    return new class extends VirtualRouterBase {\n      readonly virtualRouterName = attrs.virtualRouterName;\n      readonly mesh = attrs.mesh;\n      readonly virtualRouterArn = cdk.Stack.of(this).formatArn({\n        service: 'appmesh',\n        resource: `mesh/${attrs.mesh.meshName}/virtualRouter`,\n        resourceName: this.virtualRouterName,\n      });\n    }(scope, id);\n  }\n\n                                              \n  public readonly virtualRouterName: string;\n\n                                                                     \n  public readonly virtualRouterArn: string;\n\n                                                            \n  public readonly mesh: IMesh;\n\n  private readonly listeners = new Array<CfnVirtualRouter.VirtualRouterListenerProperty>();\n\n  constructor(scope: Construct, id: string, props: VirtualRouterProps) {\n    super(scope, id, {\n      physicalName: props.virtualRouterName || cdk.Lazy.string({ produce: () => cdk.Names.uniqueId(this) }),\n    });\n\n    this.mesh = props.mesh;\n    if (props.listeners && props.listeners.length) {\n      props.listeners.forEach(listener => this.addListener(listener));\n    } else {\n      this.addListener(VirtualRouterListener.http());\n    }\n\n    const router = new CfnVirtualRouter(this, 'Resource', {\n      virtualRouterName: this.physicalName,\n      meshName: this.mesh.meshName,\n      meshOwner: renderMeshOwner(this.env.account, this.mesh.env.account),\n      spec: {\n        listeners: this.listeners,\n      },\n    });\n\n    this.virtualRouterName = this.getResourceNameAttribute(router.attrVirtualRouterName);\n    this.virtualRouterArn = this.getResourceArnAttribute(router.ref, {\n      service: 'appmesh',\n      resource: `mesh/${props.mesh.meshName}/virtualRouter`,\n      resourceName: this.physicalName,\n    });\n  }\n\n  /**\n   * Add port mappings to the router\n   */\n  private addListener(listener: VirtualRouterListener) {\n    this.listeners.push(listener.bind(this).listener);\n  }\n}\n\n                                                                                  \nexport interface VirtualRouterAttributes {\n                                              \n  readonly virtualRouterName: string;\n\n                                                            \n  readonly mesh: IMesh;\n}\n"],
  "mappings": "oNAAA,IAAA,QAAA,cAEA,oBAAA,QAAA,uBACA,OAAA,QAAA,UACA,QAAA,QAAA,mBACA,QAAA,QAAA,WACA,0BAAA,QAAA,6BA0BA,+BAAyC,KAAI,QAAQ,CAiB5C,SAAS,GAAY,MAAqB,CAQ/C,MAPc,IAAI,SAAA,MAAM,KAAM,GAAI,IAC7B,MACH,UAAW,GACX,KAAM,KAAK,KACX,cAAe,QAarB,2BAAmC,kBAAiB,CAmClD,YAAY,MAAkB,GAAY,MAAyB,CACjE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,mBAAqB,IAAI,KAAK,OAAO,CAAE,QAAS,IAAM,IAAI,MAAM,SAAS,UAJhF,KAAA,UAAY,GAAI,iFAO/B,KAAK,KAAO,MAAM,KAClB,AAAI,MAAM,WAAa,MAAM,UAAU,OACrC,MAAM,UAAU,QAAQ,UAAY,KAAK,YAAY,WAErD,KAAK,YAAY,0BAAA,sBAAsB,QAGzC,KAAM,QAAS,GAAI,qBAAA,iBAAiB,KAAM,WAAY,CACpD,kBAAmB,KAAK,aACxB,SAAU,KAAK,KAAK,SACpB,UAAW,QAAA,gBAAgB,KAAK,IAAI,QAAS,KAAK,KAAK,IAAI,SAC3D,KAAM,CACJ,UAAW,KAAK,aAIpB,KAAK,kBAAoB,KAAK,yBAAyB,OAAO,uBAC9D,KAAK,iBAAmB,KAAK,wBAAwB,OAAO,IAAK,CAC/D,QAAS,UACT,SAAU,QAAQ,MAAM,KAAK,yBAC7B,aAAc,KAAK,qBA1DT,sBAAqB,MAAkB,GAAY,iBAAwB,CACvF,MAAO,IAAI,cAAc,kBAAiB,CAA/B,aAAA,qBACA,KAAA,iBAAmB,iBACX,KAAA,UAAY,IAAI,GAAG,MAAM,IAAK,IAAI,MAAM,GAAG,OAAO,SAAS,iBAAkB,IAAI,UAAU,qBAAqB,cACxH,KAAA,kBAAoB,IAAI,GAAG,OAAO,EAAG,KAAK,WAC1C,KAAA,KAAO,OAAA,KAAK,aAAa,KAAM,OAAQ,IAAI,GAAG,OAAO,EAAG,KAAK,cACtE,MAAO,UAIG,6BAA4B,MAAkB,GAAY,MAA8B,uFAC7F,GAAI,cAAc,kBAAiB,CAA/B,aAAA,qBACA,KAAA,kBAAoB,MAAM,kBAC1B,KAAA,KAAO,MAAM,KACb,KAAA,iBAAmB,IAAI,MAAM,GAAG,MAAM,UAAU,CACvD,QAAS,UACT,SAAU,QAAQ,MAAM,KAAK,yBAC7B,aAAc,KAAK,sBAErB,MAAO,IA8CH,YAAY,SAA+B,CACjD,KAAK,UAAU,KAAK,SAAS,KAAK,MAAM,WApE5C,QAAA,cAAA",
  "names": []
}
