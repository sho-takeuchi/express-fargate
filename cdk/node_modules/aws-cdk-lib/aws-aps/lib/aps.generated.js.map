{
  "version": 3,
  "sources": ["aps.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:28.293Z\",\"fingerprint\":\"2r9u/fDD6h7kjZYtJyH34+e83vvTc7BDEskI7kaoTT8=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                      \nexport interface CfnRuleGroupsNamespaceProps {\n\n                                                                                                                                                                                                                                 \n    readonly data: string;\n\n                                                                                                                                                                                                                                                     \n    readonly name: string;\n\n                                                                                                                                                                                                                                                           \n    readonly workspace: string;\n\n                                                                                                                                                                                                                                              \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRuleGroupsNamespaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnRuleGroupsNamespaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRuleGroupsNamespacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('data', cdk.requiredValidator)(properties.data));\n    errors.collect(cdk.propertyValidator('data', cdk.validateString)(properties.data));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('workspace', cdk.requiredValidator)(properties.workspace));\n    errors.collect(cdk.propertyValidator('workspace', cdk.validateString)(properties.workspace));\n    return errors.wrap('supplied properties not correct for \"CfnRuleGroupsNamespaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::APS::RuleGroupsNamespace` resource\n *\n * @param properties - the TypeScript properties of a `CfnRuleGroupsNamespaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::APS::RuleGroupsNamespace` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRuleGroupsNamespacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRuleGroupsNamespacePropsValidator(properties).assertSuccess();\n    return {\n        Data: cdk.stringToCloudFormation(properties.data),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Workspace: cdk.stringToCloudFormation(properties.workspace),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRuleGroupsNamespacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRuleGroupsNamespaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRuleGroupsNamespaceProps>();\n    ret.addPropertyResult('data', 'Data', cfn_parse.FromCloudFormation.getString(properties.Data));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('workspace', 'Workspace', cfn_parse.FromCloudFormation.getString(properties.Workspace));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnRuleGroupsNamespace extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::APS::RuleGroupsNamespace\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRuleGroupsNamespace {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRuleGroupsNamespacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRuleGroupsNamespace(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                     \n    public readonly attrArn: string;\n\n                                                                                                                                                                                                                                 \n    public data: string;\n\n                                                                                                                                                                                                                                                     \n    public name: string;\n\n                                                                                                                                                                                                                                                           \n    public workspace: string;\n\n                                                                                                                                                                                                                                              \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                   \n    constructor(scope: constructs.Construct, id: string, props: CfnRuleGroupsNamespaceProps) {\n        super(scope, id, { type: CfnRuleGroupsNamespace.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'data', this);\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'workspace', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n\n        this.data = props.data;\n        this.name = props.name;\n        this.workspace = props.workspace;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::APS::RuleGroupsNamespace\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRuleGroupsNamespace.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            data: this.data,\n            name: this.name,\n            workspace: this.workspace,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRuleGroupsNamespacePropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                  \nexport interface CfnWorkspaceProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                         \n    readonly alertManagerDefinition?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    readonly alias?: string;\n\n                                                                                                                                                                                                                              \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnWorkspaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnWorkspacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('alertManagerDefinition', cdk.validateString)(properties.alertManagerDefinition));\n    errors.collect(cdk.propertyValidator('alias', cdk.validateString)(properties.alias));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnWorkspaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::APS::Workspace` resource\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::APS::Workspace` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWorkspacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWorkspacePropsValidator(properties).assertSuccess();\n    return {\n        AlertManagerDefinition: cdk.stringToCloudFormation(properties.alertManagerDefinition),\n        Alias: cdk.stringToCloudFormation(properties.alias),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWorkspacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWorkspaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWorkspaceProps>();\n    ret.addPropertyResult('alertManagerDefinition', 'AlertManagerDefinition', properties.AlertManagerDefinition != null ? cfn_parse.FromCloudFormation.getString(properties.AlertManagerDefinition) : undefined);\n    ret.addPropertyResult('alias', 'Alias', properties.Alias != null ? cfn_parse.FromCloudFormation.getString(properties.Alias) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnWorkspace extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::APS::Workspace\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnWorkspace {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnWorkspacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnWorkspace(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                       \n    public readonly attrArn: string;\n\n                                                                                                                                                                                                                                                                                                                          \n    public readonly attrPrometheusEndpoint: string;\n\n                                                                                                                                          \n    public readonly attrWorkspaceId: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                         \n    public alertManagerDefinition: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public alias: string | undefined;\n\n                                                                                                                                                                                                                              \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                         \n    constructor(scope: constructs.Construct, id: string, props: CfnWorkspaceProps = {}) {\n        super(scope, id, { type: CfnWorkspace.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrPrometheusEndpoint = cdk.Token.asString(this.getAtt('PrometheusEndpoint'));\n        this.attrWorkspaceId = cdk.Token.asString(this.getAtt('WorkspaceId'));\n\n        this.alertManagerDefinition = props.alertManagerDefinition;\n        this.alias = props.alias;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::APS::Workspace\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnWorkspace.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            alertManagerDefinition: this.alertManagerDefinition,\n            alias: this.alias,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnWorkspacePropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
