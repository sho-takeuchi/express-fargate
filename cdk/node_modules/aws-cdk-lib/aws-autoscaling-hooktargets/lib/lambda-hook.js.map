{
  "version": 3,
  "sources": ["lambda-hook.ts"],
  "sourcesContent": ["import * as autoscaling from '../../aws-autoscaling';\nimport * as kms from '../../aws-kms';\nimport * as lambda from '../../aws-lambda';\nimport * as sns from '../../aws-sns';\nimport * as subs from '../../aws-sns-subscriptions';\n\nimport { createRole } from './common';\nimport { TopicHook } from './topic-hook';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                                                                          \nexport class FunctionHook implements autoscaling.ILifecycleHookTarget {\n                                                                                                                                                                                \n  constructor(private readonly fn: lambda.IFunction, private readonly encryptionKey?: kms.IKey) {\n  }\n\n                                                                                                                                                                                                                                                           \n  public bind(_scope: Construct, options: autoscaling.BindHookTargetOptions): autoscaling.LifecycleHookTargetConfig {\n    const topic = new sns.Topic(_scope, 'Topic', {\n      masterKey: this.encryptionKey,\n    });\n\n    const role = createRole(_scope, options.role);\n\n    // Per: https://docs.aws.amazon.com/sns/latest/dg/sns-key-management.html#sns-what-permissions-for-sse\n    // Topic's grantPublish() is in a base class that does not know there is a kms key, and so does not\n    // grant appropriate permissions to the kms key. We do that here to ensure the correct permissions\n    // are in place.\n    this.encryptionKey?.grant(role, 'kms:Decrypt', 'kms:GenerateDataKey');\n    topic.addSubscription(new subs.LambdaSubscription(this.fn));\n    return new TopicHook(topic).bind(_scope, { lifecycleHook: options.lifecycleHook, role });\n  }\n}\n"],
  "mappings": "mNAGA,IAAA,QAAA,iBACA,KAAA,QAAA,+BAEA,SAAA,QAAA,YACA,aAAA,QAAA,gBAOA,kBAAyB,CAEvB,YAA6B,GAAuC,cAAwB,CAA/D,KAAA,GAAA,GAAuC,KAAA,cAAA,2IAI7D,KAAK,OAAmB,QAA0C,2FACvE,KAAM,OAAQ,GAAI,KAAI,MAAM,OAAQ,QAAS,CAC3C,UAAW,KAAK,gBAGZ,KAAO,SAAA,WAAW,OAAQ,QAAQ,MAMxC,MAAA,IAAA,KAAK,iBAAa,MAAA,KAAA,QAAA,GAAE,MAAM,KAAM,cAAe,uBAC/C,MAAM,gBAAgB,GAAI,MAAK,mBAAmB,KAAK,KAChD,GAAI,cAAA,UAAU,OAAO,KAAK,OAAQ,CAAE,cAAe,QAAQ,cAAe,QAnBrF,QAAA,aAAA",
  "names": []
}
