{
  "version": 3,
  "sources": ["autoscaling.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:02:33.370Z\",\"fingerprint\":\"Yrif5ywWqF1V3Ln/FXU93uPQfNsSqUuX1FGawYcCptQ=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                      \nexport interface CfnAutoScalingGroupProps {\n\nn    readonly maxSize: string;\n\n                                                                                                                                                                                         \n    readonly minSize: string;\n\n                                                                                                                                                                                                                                                                                \n    readonly autoScalingGroupName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    readonly availabilityZones?: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly capacityRebalance?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                    \n    readonly context?: string;\n\nn    readonly cooldown?: string;\n\nn    readonly desiredCapacity?: string;\n\nn    readonly desiredCapacityType?: string;\n\nn    readonly healthCheckGracePeriod?: number;\n\nn    readonly healthCheckType?: string;\n\nn    readonly instanceId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly launchConfigurationName?: string;\n\nn    readonly launchTemplate?: CfnAutoScalingGroup.LaunchTemplateSpecificationProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                \n    readonly lifecycleHookSpecificationList?: Array<CfnAutoScalingGroup.LifecycleHookSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly loadBalancerNames?: string[];\n\nn    readonly maxInstanceLifetime?: number;\n\n                                                                                                                                                                                                                                                                              \n    readonly metricsCollection?: Array<CfnAutoScalingGroup.MetricsCollectionProperty | cdk.IResolvable> | cdk.IResolvable;\n\nn    readonly mixedInstancesPolicy?: CfnAutoScalingGroup.MixedInstancesPolicyProperty | cdk.IResolvable;\n\nn    readonly newInstancesProtectedFromScaleIn?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                      \n    readonly notificationConfigurations?: Array<CfnAutoScalingGroup.NotificationConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly placementGroup?: string;\n\nn    readonly serviceLinkedRoleArn?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly tags?: CfnAutoScalingGroup.TagPropertyProperty[];\n\nn    readonly targetGroupArns?: string[];\n\nn    readonly terminationPolicies?: string[];\n\nn    readonly vpcZoneIdentifier?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnAutoScalingGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnAutoScalingGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.validateString)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('availabilityZones', cdk.listValidator(cdk.validateString))(properties.availabilityZones));\n    errors.collect(cdk.propertyValidator('capacityRebalance', cdk.validateBoolean)(properties.capacityRebalance));\n    errors.collect(cdk.propertyValidator('context', cdk.validateString)(properties.context));\n    errors.collect(cdk.propertyValidator('cooldown', cdk.validateString)(properties.cooldown));\n    errors.collect(cdk.propertyValidator('desiredCapacity', cdk.validateString)(properties.desiredCapacity));\n    errors.collect(cdk.propertyValidator('desiredCapacityType', cdk.validateString)(properties.desiredCapacityType));\n    errors.collect(cdk.propertyValidator('healthCheckGracePeriod', cdk.validateNumber)(properties.healthCheckGracePeriod));\n    errors.collect(cdk.propertyValidator('healthCheckType', cdk.validateString)(properties.healthCheckType));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('launchConfigurationName', cdk.validateString)(properties.launchConfigurationName));\n    errors.collect(cdk.propertyValidator('launchTemplate', CfnAutoScalingGroup_LaunchTemplateSpecificationPropertyValidator)(properties.launchTemplate));\n    errors.collect(cdk.propertyValidator('lifecycleHookSpecificationList', cdk.listValidator(CfnAutoScalingGroup_LifecycleHookSpecificationPropertyValidator))(properties.lifecycleHookSpecificationList));\n    errors.collect(cdk.propertyValidator('loadBalancerNames', cdk.listValidator(cdk.validateString))(properties.loadBalancerNames));\n    errors.collect(cdk.propertyValidator('maxInstanceLifetime', cdk.validateNumber)(properties.maxInstanceLifetime));\n    errors.collect(cdk.propertyValidator('maxSize', cdk.requiredValidator)(properties.maxSize));\n    errors.collect(cdk.propertyValidator('maxSize', cdk.validateString)(properties.maxSize));\n    errors.collect(cdk.propertyValidator('metricsCollection', cdk.listValidator(CfnAutoScalingGroup_MetricsCollectionPropertyValidator))(properties.metricsCollection));\n    errors.collect(cdk.propertyValidator('minSize', cdk.requiredValidator)(properties.minSize));\n    errors.collect(cdk.propertyValidator('minSize', cdk.validateString)(properties.minSize));\n    errors.collect(cdk.propertyValidator('mixedInstancesPolicy', CfnAutoScalingGroup_MixedInstancesPolicyPropertyValidator)(properties.mixedInstancesPolicy));\n    errors.collect(cdk.propertyValidator('newInstancesProtectedFromScaleIn', cdk.validateBoolean)(properties.newInstancesProtectedFromScaleIn));\n    errors.collect(cdk.propertyValidator('notificationConfigurations', cdk.listValidator(CfnAutoScalingGroup_NotificationConfigurationPropertyValidator))(properties.notificationConfigurations));\n    errors.collect(cdk.propertyValidator('placementGroup', cdk.validateString)(properties.placementGroup));\n    errors.collect(cdk.propertyValidator('serviceLinkedRoleArn', cdk.validateString)(properties.serviceLinkedRoleArn));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnAutoScalingGroup_TagPropertyPropertyValidator))(properties.tags));\n    errors.collect(cdk.propertyValidator('targetGroupArns', cdk.listValidator(cdk.validateString))(properties.targetGroupArns));\n    errors.collect(cdk.propertyValidator('terminationPolicies', cdk.listValidator(cdk.validateString))(properties.terminationPolicies));\n    errors.collect(cdk.propertyValidator('vpcZoneIdentifier', cdk.listValidator(cdk.validateString))(properties.vpcZoneIdentifier));\n    return errors.wrap('supplied properties not correct for \"CfnAutoScalingGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnAutoScalingGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroupPropsValidator(properties).assertSuccess();\n    return {\n        MaxSize: cdk.stringToCloudFormation(properties.maxSize),\n        MinSize: cdk.stringToCloudFormation(properties.minSize),\n        AutoScalingGroupName: cdk.stringToCloudFormation(properties.autoScalingGroupName),\n        AvailabilityZones: cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),\n        CapacityRebalance: cdk.booleanToCloudFormation(properties.capacityRebalance),\n        Context: cdk.stringToCloudFormation(properties.context),\n        Cooldown: cdk.stringToCloudFormation(properties.cooldown),\n        DesiredCapacity: cdk.stringToCloudFormation(properties.desiredCapacity),\n        DesiredCapacityType: cdk.stringToCloudFormation(properties.desiredCapacityType),\n        HealthCheckGracePeriod: cdk.numberToCloudFormation(properties.healthCheckGracePeriod),\n        HealthCheckType: cdk.stringToCloudFormation(properties.healthCheckType),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        LaunchConfigurationName: cdk.stringToCloudFormation(properties.launchConfigurationName),\n        LaunchTemplate: cfnAutoScalingGroupLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplate),\n        LifecycleHookSpecificationList: cdk.listMapper(cfnAutoScalingGroupLifecycleHookSpecificationPropertyToCloudFormation)(properties.lifecycleHookSpecificationList),\n        LoadBalancerNames: cdk.listMapper(cdk.stringToCloudFormation)(properties.loadBalancerNames),\n        MaxInstanceLifetime: cdk.numberToCloudFormation(properties.maxInstanceLifetime),\n        MetricsCollection: cdk.listMapper(cfnAutoScalingGroupMetricsCollectionPropertyToCloudFormation)(properties.metricsCollection),\n        MixedInstancesPolicy: cfnAutoScalingGroupMixedInstancesPolicyPropertyToCloudFormation(properties.mixedInstancesPolicy),\n        NewInstancesProtectedFromScaleIn: cdk.booleanToCloudFormation(properties.newInstancesProtectedFromScaleIn),\n        NotificationConfigurations: cdk.listMapper(cfnAutoScalingGroupNotificationConfigurationPropertyToCloudFormation)(properties.notificationConfigurations),\n        PlacementGroup: cdk.stringToCloudFormation(properties.placementGroup),\n        ServiceLinkedRoleARN: cdk.stringToCloudFormation(properties.serviceLinkedRoleArn),\n        Tags: cdk.listMapper(cfnAutoScalingGroupTagPropertyPropertyToCloudFormation)(properties.tags),\n        TargetGroupARNs: cdk.listMapper(cdk.stringToCloudFormation)(properties.targetGroupArns),\n        TerminationPolicies: cdk.listMapper(cdk.stringToCloudFormation)(properties.terminationPolicies),\n        VPCZoneIdentifier: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcZoneIdentifier),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroupProps>();\n    ret.addPropertyResult('maxSize', 'MaxSize', cfn_parse.FromCloudFormation.getString(properties.MaxSize));\n    ret.addPropertyResult('minSize', 'MinSize', cfn_parse.FromCloudFormation.getString(properties.MinSize));\n    ret.addPropertyResult('autoScalingGroupName', 'AutoScalingGroupName', properties.AutoScalingGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.AutoScalingGroupName) : undefined);\n    ret.addPropertyResult('availabilityZones', 'AvailabilityZones', properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AvailabilityZones) : undefined);\n    ret.addPropertyResult('capacityRebalance', 'CapacityRebalance', properties.CapacityRebalance != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CapacityRebalance) : undefined);\n    ret.addPropertyResult('context', 'Context', properties.Context != null ? cfn_parse.FromCloudFormation.getString(properties.Context) : undefined);\n    ret.addPropertyResult('cooldown', 'Cooldown', properties.Cooldown != null ? cfn_parse.FromCloudFormation.getString(properties.Cooldown) : undefined);\n    ret.addPropertyResult('desiredCapacity', 'DesiredCapacity', properties.DesiredCapacity != null ? cfn_parse.FromCloudFormation.getString(properties.DesiredCapacity) : undefined);\n    ret.addPropertyResult('desiredCapacityType', 'DesiredCapacityType', properties.DesiredCapacityType != null ? cfn_parse.FromCloudFormation.getString(properties.DesiredCapacityType) : undefined);\n    ret.addPropertyResult('healthCheckGracePeriod', 'HealthCheckGracePeriod', properties.HealthCheckGracePeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.HealthCheckGracePeriod) : undefined);\n    ret.addPropertyResult('healthCheckType', 'HealthCheckType', properties.HealthCheckType != null ? cfn_parse.FromCloudFormation.getString(properties.HealthCheckType) : undefined);\n    ret.addPropertyResult('instanceId', 'InstanceId', properties.InstanceId != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceId) : undefined);\n    ret.addPropertyResult('launchConfigurationName', 'LaunchConfigurationName', properties.LaunchConfigurationName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchConfigurationName) : undefined);\n    ret.addPropertyResult('launchTemplate', 'LaunchTemplate', properties.LaunchTemplate != null ? CfnAutoScalingGroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplate) : undefined);\n    ret.addPropertyResult('lifecycleHookSpecificationList', 'LifecycleHookSpecificationList', properties.LifecycleHookSpecificationList != null ? cfn_parse.FromCloudFormation.getArray(CfnAutoScalingGroupLifecycleHookSpecificationPropertyFromCloudFormation)(properties.LifecycleHookSpecificationList) : undefined);\n    ret.addPropertyResult('loadBalancerNames', 'LoadBalancerNames', properties.LoadBalancerNames != null ? cfn_parse.FromCloudFormation.getStringArray(properties.LoadBalancerNames) : undefined);\n    ret.addPropertyResult('maxInstanceLifetime', 'MaxInstanceLifetime', properties.MaxInstanceLifetime != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxInstanceLifetime) : undefined);\n    ret.addPropertyResult('metricsCollection', 'MetricsCollection', properties.MetricsCollection != null ? cfn_parse.FromCloudFormation.getArray(CfnAutoScalingGroupMetricsCollectionPropertyFromCloudFormation)(properties.MetricsCollection) : undefined);\n    ret.addPropertyResult('mixedInstancesPolicy', 'MixedInstancesPolicy', properties.MixedInstancesPolicy != null ? CfnAutoScalingGroupMixedInstancesPolicyPropertyFromCloudFormation(properties.MixedInstancesPolicy) : undefined);\n    ret.addPropertyResult('newInstancesProtectedFromScaleIn', 'NewInstancesProtectedFromScaleIn', properties.NewInstancesProtectedFromScaleIn != null ? cfn_parse.FromCloudFormation.getBoolean(properties.NewInstancesProtectedFromScaleIn) : undefined);\n    ret.addPropertyResult('notificationConfigurations', 'NotificationConfigurations', properties.NotificationConfigurations != null ? cfn_parse.FromCloudFormation.getArray(CfnAutoScalingGroupNotificationConfigurationPropertyFromCloudFormation)(properties.NotificationConfigurations) : undefined);\n    ret.addPropertyResult('placementGroup', 'PlacementGroup', properties.PlacementGroup != null ? cfn_parse.FromCloudFormation.getString(properties.PlacementGroup) : undefined);\n    ret.addPropertyResult('serviceLinkedRoleArn', 'ServiceLinkedRoleARN', properties.ServiceLinkedRoleARN != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceLinkedRoleARN) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnAutoScalingGroupTagPropertyPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('targetGroupArns', 'TargetGroupARNs', properties.TargetGroupARNs != null ? cfn_parse.FromCloudFormation.getStringArray(properties.TargetGroupARNs) : undefined);\n    ret.addPropertyResult('terminationPolicies', 'TerminationPolicies', properties.TerminationPolicies != null ? cfn_parse.FromCloudFormation.getStringArray(properties.TerminationPolicies) : undefined);\n    ret.addPropertyResult('vpcZoneIdentifier', 'VPCZoneIdentifier', properties.VPCZoneIdentifier != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VPCZoneIdentifier) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnAutoScalingGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::AutoScalingGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnAutoScalingGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnAutoScalingGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnAutoScalingGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    public maxSize: string;\n\n                                                                                                                                                                                         \n    public minSize: string;\n\n                                                                                                                                                                                                                                                                                \n    public autoScalingGroupName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    public availabilityZones: string[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    public capacityRebalance: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                    \n    public context: string | undefined;\n\nn    public cooldown: string | undefined;\n\nn    public desiredCapacity: string | undefined;\n\nn    public desiredCapacityType: string | undefined;\n\nn    public healthCheckGracePeriod: number | undefined;\n\nn    public healthCheckType: string | undefined;\n\nn    public instanceId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    public launchConfigurationName: string | undefined;\n\nn    public launchTemplate: CfnAutoScalingGroup.LaunchTemplateSpecificationProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                \n    public lifecycleHookSpecificationList: Array<CfnAutoScalingGroup.LifecycleHookSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    public loadBalancerNames: string[] | undefined;\n\nn    public maxInstanceLifetime: number | undefined;\n\n                                                                                                                                                                                                                                                                              \n    public metricsCollection: Array<CfnAutoScalingGroup.MetricsCollectionProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\nn    public mixedInstancesPolicy: CfnAutoScalingGroup.MixedInstancesPolicyProperty | cdk.IResolvable | undefined;\n\nn    public newInstancesProtectedFromScaleIn: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                      \n    public notificationConfigurations: Array<CfnAutoScalingGroup.NotificationConfigurationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    public placementGroup: string | undefined;\n\nn    public serviceLinkedRoleArn: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    public targetGroupArns: string[] | undefined;\n\nn    public terminationPolicies: string[] | undefined;\n\nn    public vpcZoneIdentifier: string[] | undefined;\n\n                                                                                                                                                                                                                                        \n    constructor(scope: constructs.Construct, id: string, props: CfnAutoScalingGroupProps) {\n        super(scope, id, { type: CfnAutoScalingGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'maxSize', this);\n        cdk.requireProperty(props, 'minSize', this);\n\n        this.maxSize = props.maxSize;\n        this.minSize = props.minSize;\n        this.autoScalingGroupName = props.autoScalingGroupName;\n        this.availabilityZones = props.availabilityZones;\n        this.capacityRebalance = props.capacityRebalance;\n        this.context = props.context;\n        this.cooldown = props.cooldown;\n        this.desiredCapacity = props.desiredCapacity;\n        this.desiredCapacityType = props.desiredCapacityType;\n        this.healthCheckGracePeriod = props.healthCheckGracePeriod;\n        this.healthCheckType = props.healthCheckType;\n        this.instanceId = props.instanceId;\n        this.launchConfigurationName = props.launchConfigurationName;\n        this.launchTemplate = props.launchTemplate;\n        this.lifecycleHookSpecificationList = props.lifecycleHookSpecificationList;\n        this.loadBalancerNames = props.loadBalancerNames;\n        this.maxInstanceLifetime = props.maxInstanceLifetime;\n        this.metricsCollection = props.metricsCollection;\n        this.mixedInstancesPolicy = props.mixedInstancesPolicy;\n        this.newInstancesProtectedFromScaleIn = props.newInstancesProtectedFromScaleIn;\n        this.notificationConfigurations = props.notificationConfigurations;\n        this.placementGroup = props.placementGroup;\n        this.serviceLinkedRoleArn = props.serviceLinkedRoleArn;\n        this.tags = new cdk.TagManager(cdk.TagType.AUTOSCALING_GROUP, \"AWS::AutoScaling::AutoScalingGroup\", props.tags, { tagPropertyName: 'tags' });\n        this.targetGroupArns = props.targetGroupArns;\n        this.terminationPolicies = props.terminationPolicies;\n        this.vpcZoneIdentifier = props.vpcZoneIdentifier;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnAutoScalingGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            maxSize: this.maxSize,\n            minSize: this.minSize,\n            autoScalingGroupName: this.autoScalingGroupName,\n            availabilityZones: this.availabilityZones,\n            capacityRebalance: this.capacityRebalance,\n            context: this.context,\n            cooldown: this.cooldown,\n            desiredCapacity: this.desiredCapacity,\n            desiredCapacityType: this.desiredCapacityType,\n            healthCheckGracePeriod: this.healthCheckGracePeriod,\n            healthCheckType: this.healthCheckType,\n            instanceId: this.instanceId,\n            launchConfigurationName: this.launchConfigurationName,\n            launchTemplate: this.launchTemplate,\n            lifecycleHookSpecificationList: this.lifecycleHookSpecificationList,\n            loadBalancerNames: this.loadBalancerNames,\n            maxInstanceLifetime: this.maxInstanceLifetime,\n            metricsCollection: this.metricsCollection,\n            mixedInstancesPolicy: this.mixedInstancesPolicy,\n            newInstancesProtectedFromScaleIn: this.newInstancesProtectedFromScaleIn,\n            notificationConfigurations: this.notificationConfigurations,\n            placementGroup: this.placementGroup,\n            serviceLinkedRoleArn: this.serviceLinkedRoleArn,\n            tags: this.tags.renderTags(),\n            targetGroupArns: this.targetGroupArns,\n            terminationPolicies: this.terminationPolicies,\n            vpcZoneIdentifier: this.vpcZoneIdentifier,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnAutoScalingGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface AcceleratorCountRequestProperty {\n                                                                                                                                                                                                                                                                                     \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                     \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_AcceleratorCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.AcceleratorCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.AcceleratorCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupAcceleratorCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_AcceleratorCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupAcceleratorCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.AcceleratorCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.AcceleratorCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface AcceleratorTotalMemoryMiBRequestProperty {\n                                                                                                                                                                                                                                                                                                               \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                                               \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorTotalMemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.AcceleratorTotalMemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.AcceleratorTotalMemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface BaselineEbsBandwidthMbpsRequestProperty {\n                                                                                                                                                                                                                                                                                                             \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                                             \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"BaselineEbsBandwidthMbpsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.BaselineEbsBandwidthMbpsRequest` resource\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.BaselineEbsBandwidthMbpsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface InstanceRequirementsProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n        readonly acceleratorCount?: CfnAutoScalingGroup.AcceleratorCountRequestProperty | cdk.IResolvable;\nn        readonly acceleratorManufacturers?: string[];\nn        readonly acceleratorNames?: string[];\n                                                                                                                                                                                                                                                                                                                                                                                                                   \n        readonly acceleratorTotalMemoryMiB?: CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable;\nn        readonly acceleratorTypes?: string[];\n                                                                                                                                                                                                                                                                                                                                                                             \n        readonly bareMetal?: string;\nn        readonly baselineEbsBandwidthMbps?: CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable;\nn        readonly burstablePerformance?: string;\nn        readonly cpuManufacturers?: string[];\nn        readonly excludedInstanceTypes?: string[];\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n        readonly instanceGenerations?: string[];\nn        readonly localStorage?: string;\nn        readonly localStorageTypes?: string[];\n                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly memoryGiBPerVCpu?: CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                             \n        readonly memoryMiB?: CfnAutoScalingGroup.MemoryMiBRequestProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly networkInterfaceCount?: CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty | cdk.IResolvable;\nn        readonly onDemandMaxPricePercentageOverLowestPrice?: number;\n                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly requireHibernateSupport?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly spotMaxPricePercentageOverLowestPrice?: number;\n                                                                                                                                                                                                                                                                                                                                                                                               \n        readonly totalLocalStorageGb?: CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                \n        readonly vCpuCount?: CfnAutoScalingGroup.VCpuCountRequestProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceRequirementsProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_InstanceRequirementsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acceleratorCount', CfnAutoScalingGroup_AcceleratorCountRequestPropertyValidator)(properties.acceleratorCount));\n    errors.collect(cdk.propertyValidator('acceleratorManufacturers', cdk.listValidator(cdk.validateString))(properties.acceleratorManufacturers));\n    errors.collect(cdk.propertyValidator('acceleratorNames', cdk.listValidator(cdk.validateString))(properties.acceleratorNames));\n    errors.collect(cdk.propertyValidator('acceleratorTotalMemoryMiB', CfnAutoScalingGroup_AcceleratorTotalMemoryMiBRequestPropertyValidator)(properties.acceleratorTotalMemoryMiB));\n    errors.collect(cdk.propertyValidator('acceleratorTypes', cdk.listValidator(cdk.validateString))(properties.acceleratorTypes));\n    errors.collect(cdk.propertyValidator('bareMetal', cdk.validateString)(properties.bareMetal));\n    errors.collect(cdk.propertyValidator('baselineEbsBandwidthMbps', CfnAutoScalingGroup_BaselineEbsBandwidthMbpsRequestPropertyValidator)(properties.baselineEbsBandwidthMbps));\n    errors.collect(cdk.propertyValidator('burstablePerformance', cdk.validateString)(properties.burstablePerformance));\n    errors.collect(cdk.propertyValidator('cpuManufacturers', cdk.listValidator(cdk.validateString))(properties.cpuManufacturers));\n    errors.collect(cdk.propertyValidator('excludedInstanceTypes', cdk.listValidator(cdk.validateString))(properties.excludedInstanceTypes));\n    errors.collect(cdk.propertyValidator('instanceGenerations', cdk.listValidator(cdk.validateString))(properties.instanceGenerations));\n    errors.collect(cdk.propertyValidator('localStorage', cdk.validateString)(properties.localStorage));\n    errors.collect(cdk.propertyValidator('localStorageTypes', cdk.listValidator(cdk.validateString))(properties.localStorageTypes));\n    errors.collect(cdk.propertyValidator('memoryGiBPerVCpu', CfnAutoScalingGroup_MemoryGiBPerVCpuRequestPropertyValidator)(properties.memoryGiBPerVCpu));\n    errors.collect(cdk.propertyValidator('memoryMiB', CfnAutoScalingGroup_MemoryMiBRequestPropertyValidator)(properties.memoryMiB));\n    errors.collect(cdk.propertyValidator('networkInterfaceCount', CfnAutoScalingGroup_NetworkInterfaceCountRequestPropertyValidator)(properties.networkInterfaceCount));\n    errors.collect(cdk.propertyValidator('onDemandMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.onDemandMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('requireHibernateSupport', cdk.validateBoolean)(properties.requireHibernateSupport));\n    errors.collect(cdk.propertyValidator('spotMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.spotMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('totalLocalStorageGb', CfnAutoScalingGroup_TotalLocalStorageGBRequestPropertyValidator)(properties.totalLocalStorageGb));\n    errors.collect(cdk.propertyValidator('vCpuCount', CfnAutoScalingGroup_VCpuCountRequestPropertyValidator)(properties.vCpuCount));\n    return errors.wrap('supplied properties not correct for \"InstanceRequirementsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.InstanceRequirements` resource\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.InstanceRequirements` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupInstanceRequirementsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_InstanceRequirementsPropertyValidator(properties).assertSuccess();\n    return {\n        AcceleratorCount: cfnAutoScalingGroupAcceleratorCountRequestPropertyToCloudFormation(properties.acceleratorCount),\n        AcceleratorManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorManufacturers),\n        AcceleratorNames: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorNames),\n        AcceleratorTotalMemoryMiB: cfnAutoScalingGroupAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties.acceleratorTotalMemoryMiB),\n        AcceleratorTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorTypes),\n        BareMetal: cdk.stringToCloudFormation(properties.bareMetal),\n        BaselineEbsBandwidthMbps: cfnAutoScalingGroupBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties.baselineEbsBandwidthMbps),\n        BurstablePerformance: cdk.stringToCloudFormation(properties.burstablePerformance),\n        CpuManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.cpuManufacturers),\n        ExcludedInstanceTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludedInstanceTypes),\n        InstanceGenerations: cdk.listMapper(cdk.stringToCloudFormation)(properties.instanceGenerations),\n        LocalStorage: cdk.stringToCloudFormation(properties.localStorage),\n        LocalStorageTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.localStorageTypes),\n        MemoryGiBPerVCpu: cfnAutoScalingGroupMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties.memoryGiBPerVCpu),\n        MemoryMiB: cfnAutoScalingGroupMemoryMiBRequestPropertyToCloudFormation(properties.memoryMiB),\n        NetworkInterfaceCount: cfnAutoScalingGroupNetworkInterfaceCountRequestPropertyToCloudFormation(properties.networkInterfaceCount),\n        OnDemandMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.onDemandMaxPricePercentageOverLowestPrice),\n        RequireHibernateSupport: cdk.booleanToCloudFormation(properties.requireHibernateSupport),\n        SpotMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.spotMaxPricePercentageOverLowestPrice),\n        TotalLocalStorageGB: cfnAutoScalingGroupTotalLocalStorageGBRequestPropertyToCloudFormation(properties.totalLocalStorageGb),\n        VCpuCount: cfnAutoScalingGroupVCpuCountRequestPropertyToCloudFormation(properties.vCpuCount),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupInstanceRequirementsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.InstanceRequirementsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.InstanceRequirementsProperty>();\n    ret.addPropertyResult('acceleratorCount', 'AcceleratorCount', properties.AcceleratorCount != null ? CfnAutoScalingGroupAcceleratorCountRequestPropertyFromCloudFormation(properties.AcceleratorCount) : undefined);\n    ret.addPropertyResult('acceleratorManufacturers', 'AcceleratorManufacturers', properties.AcceleratorManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorManufacturers) : undefined);\n    ret.addPropertyResult('acceleratorNames', 'AcceleratorNames', properties.AcceleratorNames != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorNames) : undefined);\n    ret.addPropertyResult('acceleratorTotalMemoryMiB', 'AcceleratorTotalMemoryMiB', properties.AcceleratorTotalMemoryMiB != null ? CfnAutoScalingGroupAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties.AcceleratorTotalMemoryMiB) : undefined);\n    ret.addPropertyResult('acceleratorTypes', 'AcceleratorTypes', properties.AcceleratorTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorTypes) : undefined);\n    ret.addPropertyResult('bareMetal', 'BareMetal', properties.BareMetal != null ? cfn_parse.FromCloudFormation.getString(properties.BareMetal) : undefined);\n    ret.addPropertyResult('baselineEbsBandwidthMbps', 'BaselineEbsBandwidthMbps', properties.BaselineEbsBandwidthMbps != null ? CfnAutoScalingGroupBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties.BaselineEbsBandwidthMbps) : undefined);\n    ret.addPropertyResult('burstablePerformance', 'BurstablePerformance', properties.BurstablePerformance != null ? cfn_parse.FromCloudFormation.getString(properties.BurstablePerformance) : undefined);\n    ret.addPropertyResult('cpuManufacturers', 'CpuManufacturers', properties.CpuManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.CpuManufacturers) : undefined);\n    ret.addPropertyResult('excludedInstanceTypes', 'ExcludedInstanceTypes', properties.ExcludedInstanceTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludedInstanceTypes) : undefined);\n    ret.addPropertyResult('instanceGenerations', 'InstanceGenerations', properties.InstanceGenerations != null ? cfn_parse.FromCloudFormation.getStringArray(properties.InstanceGenerations) : undefined);\n    ret.addPropertyResult('localStorage', 'LocalStorage', properties.LocalStorage != null ? cfn_parse.FromCloudFormation.getString(properties.LocalStorage) : undefined);\n    ret.addPropertyResult('localStorageTypes', 'LocalStorageTypes', properties.LocalStorageTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.LocalStorageTypes) : undefined);\n    ret.addPropertyResult('memoryGiBPerVCpu', 'MemoryGiBPerVCpu', properties.MemoryGiBPerVCpu != null ? CfnAutoScalingGroupMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties.MemoryGiBPerVCpu) : undefined);\n    ret.addPropertyResult('memoryMiB', 'MemoryMiB', properties.MemoryMiB != null ? CfnAutoScalingGroupMemoryMiBRequestPropertyFromCloudFormation(properties.MemoryMiB) : undefined);\n    ret.addPropertyResult('networkInterfaceCount', 'NetworkInterfaceCount', properties.NetworkInterfaceCount != null ? CfnAutoScalingGroupNetworkInterfaceCountRequestPropertyFromCloudFormation(properties.NetworkInterfaceCount) : undefined);\n    ret.addPropertyResult('onDemandMaxPricePercentageOverLowestPrice', 'OnDemandMaxPricePercentageOverLowestPrice', properties.OnDemandMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('requireHibernateSupport', 'RequireHibernateSupport', properties.RequireHibernateSupport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RequireHibernateSupport) : undefined);\n    ret.addPropertyResult('spotMaxPricePercentageOverLowestPrice', 'SpotMaxPricePercentageOverLowestPrice', properties.SpotMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('totalLocalStorageGb', 'TotalLocalStorageGB', properties.TotalLocalStorageGB != null ? CfnAutoScalingGroupTotalLocalStorageGBRequestPropertyFromCloudFormation(properties.TotalLocalStorageGB) : undefined);\n    ret.addPropertyResult('vCpuCount', 'VCpuCount', properties.VCpuCount != null ? CfnAutoScalingGroupVCpuCountRequestPropertyFromCloudFormation(properties.VCpuCount) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface InstancesDistributionProperty {\nn        readonly onDemandAllocationStrategy?: string;\nn        readonly onDemandBaseCapacity?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n        readonly onDemandPercentageAboveBaseCapacity?: number;\nn        readonly spotAllocationStrategy?: string;\nn        readonly spotInstancePools?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n        readonly spotMaxPrice?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstancesDistributionProperty`\n *\n * @param properties - the TypeScript properties of a `InstancesDistributionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_InstancesDistributionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('onDemandAllocationStrategy', cdk.validateString)(properties.onDemandAllocationStrategy));\n    errors.collect(cdk.propertyValidator('onDemandBaseCapacity', cdk.validateNumber)(properties.onDemandBaseCapacity));\n    errors.collect(cdk.propertyValidator('onDemandPercentageAboveBaseCapacity', cdk.validateNumber)(properties.onDemandPercentageAboveBaseCapacity));\n    errors.collect(cdk.propertyValidator('spotAllocationStrategy', cdk.validateString)(properties.spotAllocationStrategy));\n    errors.collect(cdk.propertyValidator('spotInstancePools', cdk.validateNumber)(properties.spotInstancePools));\n    errors.collect(cdk.propertyValidator('spotMaxPrice', cdk.validateString)(properties.spotMaxPrice));\n    return errors.wrap('supplied properties not correct for \"InstancesDistributionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.InstancesDistribution` resource\n *\n * @param properties - the TypeScript properties of a `InstancesDistributionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.InstancesDistribution` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupInstancesDistributionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_InstancesDistributionPropertyValidator(properties).assertSuccess();\n    return {\n        OnDemandAllocationStrategy: cdk.stringToCloudFormation(properties.onDemandAllocationStrategy),\n        OnDemandBaseCapacity: cdk.numberToCloudFormation(properties.onDemandBaseCapacity),\n        OnDemandPercentageAboveBaseCapacity: cdk.numberToCloudFormation(properties.onDemandPercentageAboveBaseCapacity),\n        SpotAllocationStrategy: cdk.stringToCloudFormation(properties.spotAllocationStrategy),\n        SpotInstancePools: cdk.numberToCloudFormation(properties.spotInstancePools),\n        SpotMaxPrice: cdk.stringToCloudFormation(properties.spotMaxPrice),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupInstancesDistributionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.InstancesDistributionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.InstancesDistributionProperty>();\n    ret.addPropertyResult('onDemandAllocationStrategy', 'OnDemandAllocationStrategy', properties.OnDemandAllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.OnDemandAllocationStrategy) : undefined);\n    ret.addPropertyResult('onDemandBaseCapacity', 'OnDemandBaseCapacity', properties.OnDemandBaseCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandBaseCapacity) : undefined);\n    ret.addPropertyResult('onDemandPercentageAboveBaseCapacity', 'OnDemandPercentageAboveBaseCapacity', properties.OnDemandPercentageAboveBaseCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandPercentageAboveBaseCapacity) : undefined);\n    ret.addPropertyResult('spotAllocationStrategy', 'SpotAllocationStrategy', properties.SpotAllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.SpotAllocationStrategy) : undefined);\n    ret.addPropertyResult('spotInstancePools', 'SpotInstancePools', properties.SpotInstancePools != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotInstancePools) : undefined);\n    ret.addPropertyResult('spotMaxPrice', 'SpotMaxPrice', properties.SpotMaxPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotMaxPrice) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface LaunchTemplateProperty {\n                                                                                                                                                                                                                                    \n        readonly launchTemplateSpecification: CfnAutoScalingGroup.LaunchTemplateSpecificationProperty | cdk.IResolvable;\nn        readonly overrides?: Array<CfnAutoScalingGroup.LaunchTemplateOverridesProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_LaunchTemplatePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateSpecification', cdk.requiredValidator)(properties.launchTemplateSpecification));\n    errors.collect(cdk.propertyValidator('launchTemplateSpecification', CfnAutoScalingGroup_LaunchTemplateSpecificationPropertyValidator)(properties.launchTemplateSpecification));\n    errors.collect(cdk.propertyValidator('overrides', cdk.listValidator(CfnAutoScalingGroup_LaunchTemplateOverridesPropertyValidator))(properties.overrides));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplate` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupLaunchTemplatePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_LaunchTemplatePropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateSpecification: cfnAutoScalingGroupLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplateSpecification),\n        Overrides: cdk.listMapper(cfnAutoScalingGroupLaunchTemplateOverridesPropertyToCloudFormation)(properties.overrides),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupLaunchTemplatePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.LaunchTemplateProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.LaunchTemplateProperty>();\n    ret.addPropertyResult('launchTemplateSpecification', 'LaunchTemplateSpecification', CfnAutoScalingGroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplateSpecification));\n    ret.addPropertyResult('overrides', 'Overrides', properties.Overrides != null ? cfn_parse.FromCloudFormation.getArray(CfnAutoScalingGroupLaunchTemplateOverridesPropertyFromCloudFormation)(properties.Overrides) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    export interface LaunchTemplateOverridesProperty {\nn        readonly instanceRequirements?: CfnAutoScalingGroup.InstanceRequirementsProperty | cdk.IResolvable;\nn        readonly instanceType?: string;\nn        readonly launchTemplateSpecification?: CfnAutoScalingGroup.LaunchTemplateSpecificationProperty | cdk.IResolvable;\nn        readonly weightedCapacity?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateOverridesProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateOverridesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_LaunchTemplateOverridesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('instanceRequirements', CfnAutoScalingGroup_InstanceRequirementsPropertyValidator)(properties.instanceRequirements));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('launchTemplateSpecification', CfnAutoScalingGroup_LaunchTemplateSpecificationPropertyValidator)(properties.launchTemplateSpecification));\n    errors.collect(cdk.propertyValidator('weightedCapacity', cdk.validateString)(properties.weightedCapacity));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateOverridesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplateOverrides` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateOverridesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplateOverrides` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupLaunchTemplateOverridesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_LaunchTemplateOverridesPropertyValidator(properties).assertSuccess();\n    return {\n        InstanceRequirements: cfnAutoScalingGroupInstanceRequirementsPropertyToCloudFormation(properties.instanceRequirements),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        LaunchTemplateSpecification: cfnAutoScalingGroupLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplateSpecification),\n        WeightedCapacity: cdk.stringToCloudFormation(properties.weightedCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupLaunchTemplateOverridesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.LaunchTemplateOverridesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.LaunchTemplateOverridesProperty>();\n    ret.addPropertyResult('instanceRequirements', 'InstanceRequirements', properties.InstanceRequirements != null ? CfnAutoScalingGroupInstanceRequirementsPropertyFromCloudFormation(properties.InstanceRequirements) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('launchTemplateSpecification', 'LaunchTemplateSpecification', properties.LaunchTemplateSpecification != null ? CfnAutoScalingGroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplateSpecification) : undefined);\n    ret.addPropertyResult('weightedCapacity', 'WeightedCapacity', properties.WeightedCapacity != null ? cfn_parse.FromCloudFormation.getString(properties.WeightedCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface LaunchTemplateSpecificationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n        readonly launchTemplateId?: string;\nn        readonly launchTemplateName?: string;\nn        readonly version: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_LaunchTemplateSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateId', cdk.validateString)(properties.launchTemplateId));\n    errors.collect(cdk.propertyValidator('launchTemplateName', cdk.validateString)(properties.launchTemplateName));\n    errors.collect(cdk.propertyValidator('version', cdk.requiredValidator)(properties.version));\n    errors.collect(cdk.propertyValidator('version', cdk.validateString)(properties.version));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplateSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LaunchTemplateSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupLaunchTemplateSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_LaunchTemplateSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateId: cdk.stringToCloudFormation(properties.launchTemplateId),\n        LaunchTemplateName: cdk.stringToCloudFormation(properties.launchTemplateName),\n        Version: cdk.stringToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.LaunchTemplateSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.LaunchTemplateSpecificationProperty>();\n    ret.addPropertyResult('launchTemplateId', 'LaunchTemplateId', properties.LaunchTemplateId != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateId) : undefined);\n    ret.addPropertyResult('launchTemplateName', 'LaunchTemplateName', properties.LaunchTemplateName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateName) : undefined);\n    ret.addPropertyResult('version', 'Version', cfn_parse.FromCloudFormation.getString(properties.Version));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface LifecycleHookSpecificationProperty {\nn        readonly defaultResult?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly heartbeatTimeout?: number;\n                                                                                                                                                                                                                                                                                                                      \n        readonly lifecycleHookName: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n        readonly lifecycleTransition: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                      \n        readonly notificationMetadata?: string;\nn        readonly notificationTargetArn?: string;\nn        readonly roleArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LifecycleHookSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LifecycleHookSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_LifecycleHookSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('defaultResult', cdk.validateString)(properties.defaultResult));\n    errors.collect(cdk.propertyValidator('heartbeatTimeout', cdk.validateNumber)(properties.heartbeatTimeout));\n    errors.collect(cdk.propertyValidator('lifecycleHookName', cdk.requiredValidator)(properties.lifecycleHookName));\n    errors.collect(cdk.propertyValidator('lifecycleHookName', cdk.validateString)(properties.lifecycleHookName));\n    errors.collect(cdk.propertyValidator('lifecycleTransition', cdk.requiredValidator)(properties.lifecycleTransition));\n    errors.collect(cdk.propertyValidator('lifecycleTransition', cdk.validateString)(properties.lifecycleTransition));\n    errors.collect(cdk.propertyValidator('notificationMetadata', cdk.validateString)(properties.notificationMetadata));\n    errors.collect(cdk.propertyValidator('notificationTargetArn', cdk.validateString)(properties.notificationTargetArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    return errors.wrap('supplied properties not correct for \"LifecycleHookSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LifecycleHookSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LifecycleHookSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.LifecycleHookSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupLifecycleHookSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_LifecycleHookSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        DefaultResult: cdk.stringToCloudFormation(properties.defaultResult),\n        HeartbeatTimeout: cdk.numberToCloudFormation(properties.heartbeatTimeout),\n        LifecycleHookName: cdk.stringToCloudFormation(properties.lifecycleHookName),\n        LifecycleTransition: cdk.stringToCloudFormation(properties.lifecycleTransition),\n        NotificationMetadata: cdk.stringToCloudFormation(properties.notificationMetadata),\n        NotificationTargetARN: cdk.stringToCloudFormation(properties.notificationTargetArn),\n        RoleARN: cdk.stringToCloudFormation(properties.roleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupLifecycleHookSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.LifecycleHookSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.LifecycleHookSpecificationProperty>();\n    ret.addPropertyResult('defaultResult', 'DefaultResult', properties.DefaultResult != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultResult) : undefined);\n    ret.addPropertyResult('heartbeatTimeout', 'HeartbeatTimeout', properties.HeartbeatTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.HeartbeatTimeout) : undefined);\n    ret.addPropertyResult('lifecycleHookName', 'LifecycleHookName', cfn_parse.FromCloudFormation.getString(properties.LifecycleHookName));\n    ret.addPropertyResult('lifecycleTransition', 'LifecycleTransition', cfn_parse.FromCloudFormation.getString(properties.LifecycleTransition));\n    ret.addPropertyResult('notificationMetadata', 'NotificationMetadata', properties.NotificationMetadata != null ? cfn_parse.FromCloudFormation.getString(properties.NotificationMetadata) : undefined);\n    ret.addPropertyResult('notificationTargetArn', 'NotificationTargetARN', properties.NotificationTargetARN != null ? cfn_parse.FromCloudFormation.getString(properties.NotificationTargetARN) : undefined);\n    ret.addPropertyResult('roleArn', 'RoleARN', properties.RoleARN != null ? cfn_parse.FromCloudFormation.getString(properties.RoleARN) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface MemoryGiBPerVCpuRequestProperty {\n                                                                                                                                                                                                                                                                                             \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                             \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_MemoryGiBPerVCpuRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryGiBPerVCpuRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MemoryGiBPerVCpuRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MemoryGiBPerVCpuRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_MemoryGiBPerVCpuRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface MemoryMiBRequestProperty {\n                                                                                                                                                                                                                                                                               \n        readonly max?: number;\n                                                                                                                                                                                                                                                                               \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_MemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_MemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.MemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.MemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface MetricsCollectionProperty {\n                                                                                                                                                                                                                                                                                                                                                 \n        readonly granularity: string;\nn        readonly metrics?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MetricsCollectionProperty`\n *\n * @param properties - the TypeScript properties of a `MetricsCollectionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_MetricsCollectionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('granularity', cdk.requiredValidator)(properties.granularity));\n    errors.collect(cdk.propertyValidator('granularity', cdk.validateString)(properties.granularity));\n    errors.collect(cdk.propertyValidator('metrics', cdk.listValidator(cdk.validateString))(properties.metrics));\n    return errors.wrap('supplied properties not correct for \"MetricsCollectionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MetricsCollection` resource\n *\n * @param properties - the TypeScript properties of a `MetricsCollectionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MetricsCollection` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupMetricsCollectionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_MetricsCollectionPropertyValidator(properties).assertSuccess();\n    return {\n        Granularity: cdk.stringToCloudFormation(properties.granularity),\n        Metrics: cdk.listMapper(cdk.stringToCloudFormation)(properties.metrics),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupMetricsCollectionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.MetricsCollectionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.MetricsCollectionProperty>();\n    ret.addPropertyResult('granularity', 'Granularity', cfn_parse.FromCloudFormation.getString(properties.Granularity));\n    ret.addPropertyResult('metrics', 'Metrics', properties.Metrics != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Metrics) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    export interface MixedInstancesPolicyProperty {\n                                                                                                                                                                                                                                                                                                                                                                             \n        readonly instancesDistribution?: CfnAutoScalingGroup.InstancesDistributionProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly launchTemplate: CfnAutoScalingGroup.LaunchTemplateProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MixedInstancesPolicyProperty`\n *\n * @param properties - the TypeScript properties of a `MixedInstancesPolicyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_MixedInstancesPolicyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('instancesDistribution', CfnAutoScalingGroup_InstancesDistributionPropertyValidator)(properties.instancesDistribution));\n    errors.collect(cdk.propertyValidator('launchTemplate', cdk.requiredValidator)(properties.launchTemplate));\n    errors.collect(cdk.propertyValidator('launchTemplate', CfnAutoScalingGroup_LaunchTemplatePropertyValidator)(properties.launchTemplate));\n    return errors.wrap('supplied properties not correct for \"MixedInstancesPolicyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MixedInstancesPolicy` resource\n *\n * @param properties - the TypeScript properties of a `MixedInstancesPolicyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.MixedInstancesPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupMixedInstancesPolicyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_MixedInstancesPolicyPropertyValidator(properties).assertSuccess();\n    return {\n        InstancesDistribution: cfnAutoScalingGroupInstancesDistributionPropertyToCloudFormation(properties.instancesDistribution),\n        LaunchTemplate: cfnAutoScalingGroupLaunchTemplatePropertyToCloudFormation(properties.launchTemplate),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupMixedInstancesPolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.MixedInstancesPolicyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.MixedInstancesPolicyProperty>();\n    ret.addPropertyResult('instancesDistribution', 'InstancesDistribution', properties.InstancesDistribution != null ? CfnAutoScalingGroupInstancesDistributionPropertyFromCloudFormation(properties.InstancesDistribution) : undefined);\n    ret.addPropertyResult('launchTemplate', 'LaunchTemplate', CfnAutoScalingGroupLaunchTemplatePropertyFromCloudFormation(properties.LaunchTemplate));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface NetworkInterfaceCountRequestProperty {\n                                                                                                                                                                                                                                                                                                                      \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                                                      \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_NetworkInterfaceCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.NetworkInterfaceCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.NetworkInterfaceCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupNetworkInterfaceCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_NetworkInterfaceCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupNetworkInterfaceCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    export interface NotificationConfigurationProperty {\nn        readonly notificationTypes?: string[];\n                                                                                                                                                                                                                                                                                                           \n        readonly topicArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NotificationConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `NotificationConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_NotificationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('notificationTypes', cdk.listValidator(cdk.validateString))(properties.notificationTypes));\n    errors.collect(cdk.propertyValidator('topicArn', cdk.requiredValidator)(properties.topicArn));\n    errors.collect(cdk.propertyValidator('topicArn', cdk.validateString)(properties.topicArn));\n    return errors.wrap('supplied properties not correct for \"NotificationConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.NotificationConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `NotificationConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.NotificationConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupNotificationConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_NotificationConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        NotificationTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.notificationTypes),\n        TopicARN: cdk.stringToCloudFormation(properties.topicArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupNotificationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.NotificationConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.NotificationConfigurationProperty>();\n    ret.addPropertyResult('notificationTypes', 'NotificationTypes', properties.NotificationTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NotificationTypes) : undefined);\n    ret.addPropertyResult('topicArn', 'TopicARN', cfn_parse.FromCloudFormation.getString(properties.TopicARN));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface TagPropertyProperty {\n                                                                                                                                                                                     \n        readonly key: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n        readonly propagateAtLaunch: boolean | cdk.IResolvable;\n                                                                                                                                                                                         \n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagPropertyProperty`\n *\n * @param properties - the TypeScript properties of a `TagPropertyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_TagPropertyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('propagateAtLaunch', cdk.requiredValidator)(properties.propagateAtLaunch));\n    errors.collect(cdk.propertyValidator('propagateAtLaunch', cdk.validateBoolean)(properties.propagateAtLaunch));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagPropertyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.TagProperty` resource\n *\n * @param properties - the TypeScript properties of a `TagPropertyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.TagProperty` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupTagPropertyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_TagPropertyPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        PropagateAtLaunch: cdk.booleanToCloudFormation(properties.propagateAtLaunch),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupTagPropertyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.TagPropertyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.TagPropertyProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('propagateAtLaunch', 'PropagateAtLaunch', cfn_parse.FromCloudFormation.getBoolean(properties.PropagateAtLaunch));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface TotalLocalStorageGBRequestProperty {\n                                                                                                                                                                                                                                                                                                   \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                                   \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TotalLocalStorageGBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_TotalLocalStorageGBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"TotalLocalStorageGBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.TotalLocalStorageGBRequest` resource\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.TotalLocalStorageGBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupTotalLocalStorageGBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_TotalLocalStorageGBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupTotalLocalStorageGBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAutoScalingGroup {\nn    export interface VCpuCountRequestProperty {\n                                                                                                                                                                                                                                                                                 \n        readonly max?: number;\n                                                                                                                                                                                                                                                                                 \n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VCpuCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `VCpuCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAutoScalingGroup_VCpuCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"VCpuCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.VCpuCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `VCpuCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::AutoScalingGroup.VCpuCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAutoScalingGroupVCpuCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAutoScalingGroup_VCpuCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAutoScalingGroupVCpuCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAutoScalingGroup.VCpuCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAutoScalingGroup.VCpuCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                \nexport interface CfnLaunchConfigurationProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly imageId: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly instanceType: string;\n\nn    readonly associatePublicIpAddress?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                              \n    readonly blockDeviceMappings?: Array<CfnLaunchConfiguration.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    readonly classicLinkVpcId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                     \n    readonly classicLinkVpcSecurityGroups?: string[];\n\nn    readonly ebsOptimized?: boolean | cdk.IResolvable;\n\nn    readonly iamInstanceProfile?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly instanceId?: string;\n\nn    readonly instanceMonitoring?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n    readonly kernelId?: string;\n\nn    readonly keyName?: string;\n\n                                                                                                                                                                                                                                                                                        \n    readonly launchConfigurationName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly metadataOptions?: CfnLaunchConfiguration.MetadataOptionsProperty | cdk.IResolvable;\n\nn    readonly placementTenancy?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    readonly ramDiskId?: string;\n\nn    readonly securityGroups?: string[];\n\nn    readonly spotPrice?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly userData?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLaunchConfigurationProps`\n *\n * @param properties - the TypeScript properties of a `CfnLaunchConfigurationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchConfigurationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associatePublicIpAddress', cdk.validateBoolean)(properties.associatePublicIpAddress));\n    errors.collect(cdk.propertyValidator('blockDeviceMappings', cdk.listValidator(CfnLaunchConfiguration_BlockDeviceMappingPropertyValidator))(properties.blockDeviceMappings));\n    errors.collect(cdk.propertyValidator('classicLinkVpcId', cdk.validateString)(properties.classicLinkVpcId));\n    errors.collect(cdk.propertyValidator('classicLinkVpcSecurityGroups', cdk.listValidator(cdk.validateString))(properties.classicLinkVpcSecurityGroups));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('iamInstanceProfile', cdk.validateString)(properties.iamInstanceProfile));\n    errors.collect(cdk.propertyValidator('imageId', cdk.requiredValidator)(properties.imageId));\n    errors.collect(cdk.propertyValidator('imageId', cdk.validateString)(properties.imageId));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('instanceMonitoring', cdk.validateBoolean)(properties.instanceMonitoring));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.requiredValidator)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('kernelId', cdk.validateString)(properties.kernelId));\n    errors.collect(cdk.propertyValidator('keyName', cdk.validateString)(properties.keyName));\n    errors.collect(cdk.propertyValidator('launchConfigurationName', cdk.validateString)(properties.launchConfigurationName));\n    errors.collect(cdk.propertyValidator('metadataOptions', CfnLaunchConfiguration_MetadataOptionsPropertyValidator)(properties.metadataOptions));\n    errors.collect(cdk.propertyValidator('placementTenancy', cdk.validateString)(properties.placementTenancy));\n    errors.collect(cdk.propertyValidator('ramDiskId', cdk.validateString)(properties.ramDiskId));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(cdk.validateString))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('spotPrice', cdk.validateString)(properties.spotPrice));\n    errors.collect(cdk.propertyValidator('userData', cdk.validateString)(properties.userData));\n    return errors.wrap('supplied properties not correct for \"CfnLaunchConfigurationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `CfnLaunchConfigurationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchConfigurationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchConfigurationPropsValidator(properties).assertSuccess();\n    return {\n        ImageId: cdk.stringToCloudFormation(properties.imageId),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        AssociatePublicIpAddress: cdk.booleanToCloudFormation(properties.associatePublicIpAddress),\n        BlockDeviceMappings: cdk.listMapper(cfnLaunchConfigurationBlockDeviceMappingPropertyToCloudFormation)(properties.blockDeviceMappings),\n        ClassicLinkVPCId: cdk.stringToCloudFormation(properties.classicLinkVpcId),\n        ClassicLinkVPCSecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.classicLinkVpcSecurityGroups),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        IamInstanceProfile: cdk.stringToCloudFormation(properties.iamInstanceProfile),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        InstanceMonitoring: cdk.booleanToCloudFormation(properties.instanceMonitoring),\n        KernelId: cdk.stringToCloudFormation(properties.kernelId),\n        KeyName: cdk.stringToCloudFormation(properties.keyName),\n        LaunchConfigurationName: cdk.stringToCloudFormation(properties.launchConfigurationName),\n        MetadataOptions: cfnLaunchConfigurationMetadataOptionsPropertyToCloudFormation(properties.metadataOptions),\n        PlacementTenancy: cdk.stringToCloudFormation(properties.placementTenancy),\n        RamDiskId: cdk.stringToCloudFormation(properties.ramDiskId),\n        SecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),\n        SpotPrice: cdk.stringToCloudFormation(properties.spotPrice),\n        UserData: cdk.stringToCloudFormation(properties.userData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchConfigurationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchConfigurationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchConfigurationProps>();\n    ret.addPropertyResult('imageId', 'ImageId', cfn_parse.FromCloudFormation.getString(properties.ImageId));\n    ret.addPropertyResult('instanceType', 'InstanceType', cfn_parse.FromCloudFormation.getString(properties.InstanceType));\n    ret.addPropertyResult('associatePublicIpAddress', 'AssociatePublicIpAddress', properties.AssociatePublicIpAddress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssociatePublicIpAddress) : undefined);\n    ret.addPropertyResult('blockDeviceMappings', 'BlockDeviceMappings', properties.BlockDeviceMappings != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchConfigurationBlockDeviceMappingPropertyFromCloudFormation)(properties.BlockDeviceMappings) : undefined);\n    ret.addPropertyResult('classicLinkVpcId', 'ClassicLinkVPCId', properties.ClassicLinkVPCId != null ? cfn_parse.FromCloudFormation.getString(properties.ClassicLinkVPCId) : undefined);\n    ret.addPropertyResult('classicLinkVpcSecurityGroups', 'ClassicLinkVPCSecurityGroups', properties.ClassicLinkVPCSecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ClassicLinkVPCSecurityGroups) : undefined);\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('iamInstanceProfile', 'IamInstanceProfile', properties.IamInstanceProfile != null ? cfn_parse.FromCloudFormation.getString(properties.IamInstanceProfile) : undefined);\n    ret.addPropertyResult('instanceId', 'InstanceId', properties.InstanceId != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceId) : undefined);\n    ret.addPropertyResult('instanceMonitoring', 'InstanceMonitoring', properties.InstanceMonitoring != null ? cfn_parse.FromCloudFormation.getBoolean(properties.InstanceMonitoring) : undefined);\n    ret.addPropertyResult('kernelId', 'KernelId', properties.KernelId != null ? cfn_parse.FromCloudFormation.getString(properties.KernelId) : undefined);\n    ret.addPropertyResult('keyName', 'KeyName', properties.KeyName != null ? cfn_parse.FromCloudFormation.getString(properties.KeyName) : undefined);\n    ret.addPropertyResult('launchConfigurationName', 'LaunchConfigurationName', properties.LaunchConfigurationName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchConfigurationName) : undefined);\n    ret.addPropertyResult('metadataOptions', 'MetadataOptions', properties.MetadataOptions != null ? CfnLaunchConfigurationMetadataOptionsPropertyFromCloudFormation(properties.MetadataOptions) : undefined);\n    ret.addPropertyResult('placementTenancy', 'PlacementTenancy', properties.PlacementTenancy != null ? cfn_parse.FromCloudFormation.getString(properties.PlacementTenancy) : undefined);\n    ret.addPropertyResult('ramDiskId', 'RamDiskId', properties.RamDiskId != null ? cfn_parse.FromCloudFormation.getString(properties.RamDiskId) : undefined);\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('spotPrice', 'SpotPrice', properties.SpotPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotPrice) : undefined);\n    ret.addPropertyResult('userData', 'UserData', properties.UserData != null ? cfn_parse.FromCloudFormation.getString(properties.UserData) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnLaunchConfiguration extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::LaunchConfiguration\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLaunchConfiguration {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLaunchConfigurationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLaunchConfiguration(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    public imageId: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n    public instanceType: string;\n\nn    public associatePublicIpAddress: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                              \n    public blockDeviceMappings: Array<CfnLaunchConfiguration.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\nn    public classicLinkVpcId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                     \n    public classicLinkVpcSecurityGroups: string[] | undefined;\n\nn    public ebsOptimized: boolean | cdk.IResolvable | undefined;\n\nn    public iamInstanceProfile: string | undefined;\n\nn    public instanceId: string | undefined;\n\nn    public instanceMonitoring: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n    public kernelId: string | undefined;\n\nn    public keyName: string | undefined;\n\n                                                                                                                                                                                                                                                                                        \n    public launchConfigurationName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public metadataOptions: CfnLaunchConfiguration.MetadataOptionsProperty | cdk.IResolvable | undefined;\n\nn    public placementTenancy: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    public ramDiskId: string | undefined;\n\nn    public securityGroups: string[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    public spotPrice: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    public userData: string | undefined;\n\n                                                                                                                                                                                                                                           \n    constructor(scope: constructs.Construct, id: string, props: CfnLaunchConfigurationProps) {\n        super(scope, id, { type: CfnLaunchConfiguration.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'imageId', this);\n        cdk.requireProperty(props, 'instanceType', this);\n\n        this.imageId = props.imageId;\n        this.instanceType = props.instanceType;\n        this.associatePublicIpAddress = props.associatePublicIpAddress;\n        this.blockDeviceMappings = props.blockDeviceMappings;\n        this.classicLinkVpcId = props.classicLinkVpcId;\n        this.classicLinkVpcSecurityGroups = props.classicLinkVpcSecurityGroups;\n        this.ebsOptimized = props.ebsOptimized;\n        this.iamInstanceProfile = props.iamInstanceProfile;\n        this.instanceId = props.instanceId;\n        this.instanceMonitoring = props.instanceMonitoring;\n        this.kernelId = props.kernelId;\n        this.keyName = props.keyName;\n        this.launchConfigurationName = props.launchConfigurationName;\n        this.metadataOptions = props.metadataOptions;\n        this.placementTenancy = props.placementTenancy;\n        this.ramDiskId = props.ramDiskId;\n        this.securityGroups = props.securityGroups;\n        this.spotPrice = props.spotPrice;\n        this.userData = props.userData;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLaunchConfiguration.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            imageId: this.imageId,\n            instanceType: this.instanceType,\n            associatePublicIpAddress: this.associatePublicIpAddress,\n            blockDeviceMappings: this.blockDeviceMappings,\n            classicLinkVpcId: this.classicLinkVpcId,\n            classicLinkVpcSecurityGroups: this.classicLinkVpcSecurityGroups,\n            ebsOptimized: this.ebsOptimized,\n            iamInstanceProfile: this.iamInstanceProfile,\n            instanceId: this.instanceId,\n            instanceMonitoring: this.instanceMonitoring,\n            kernelId: this.kernelId,\n            keyName: this.keyName,\n            launchConfigurationName: this.launchConfigurationName,\n            metadataOptions: this.metadataOptions,\n            placementTenancy: this.placementTenancy,\n            ramDiskId: this.ramDiskId,\n            securityGroups: this.securityGroups,\n            spotPrice: this.spotPrice,\n            userData: this.userData,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLaunchConfigurationPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnLaunchConfiguration {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n    export interface BlockDeviceProperty {\n                                                                                                                                                                                                                                                                                                                                                                 \n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\nn        readonly encrypted?: boolean | cdk.IResolvable;\nn        readonly iops?: number;\n                                                                                                                                                                                                                                                                                                                                                          \n        readonly snapshotId?: string;\n                                                                                                                                                                                                                                                                                           \n        readonly throughput?: number;\nn        readonly volumeSize?: number;\nn        readonly volumeType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BlockDeviceProperty`\n *\n * @param properties - the TypeScript properties of a `BlockDeviceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchConfiguration_BlockDevicePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('encrypted', cdk.validateBoolean)(properties.encrypted));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('snapshotId', cdk.validateString)(properties.snapshotId));\n    errors.collect(cdk.propertyValidator('throughput', cdk.validateNumber)(properties.throughput));\n    errors.collect(cdk.propertyValidator('volumeSize', cdk.validateNumber)(properties.volumeSize));\n    errors.collect(cdk.propertyValidator('volumeType', cdk.validateString)(properties.volumeType));\n    return errors.wrap('supplied properties not correct for \"BlockDeviceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.BlockDevice` resource\n *\n * @param properties - the TypeScript properties of a `BlockDeviceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.BlockDevice` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchConfigurationBlockDevicePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchConfiguration_BlockDevicePropertyValidator(properties).assertSuccess();\n    return {\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Encrypted: cdk.booleanToCloudFormation(properties.encrypted),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        SnapshotId: cdk.stringToCloudFormation(properties.snapshotId),\n        Throughput: cdk.numberToCloudFormation(properties.throughput),\n        VolumeSize: cdk.numberToCloudFormation(properties.volumeSize),\n        VolumeType: cdk.stringToCloudFormation(properties.volumeType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchConfigurationBlockDevicePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchConfiguration.BlockDeviceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchConfiguration.BlockDeviceProperty>();\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('encrypted', 'Encrypted', properties.Encrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('snapshotId', 'SnapshotId', properties.SnapshotId != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotId) : undefined);\n    ret.addPropertyResult('throughput', 'Throughput', properties.Throughput != null ? cfn_parse.FromCloudFormation.getNumber(properties.Throughput) : undefined);\n    ret.addPropertyResult('volumeSize', 'VolumeSize', properties.VolumeSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.VolumeSize) : undefined);\n    ret.addPropertyResult('volumeType', 'VolumeType', properties.VolumeType != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchConfiguration {\nn    export interface BlockDeviceMappingProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly deviceName: string;\n                                                                                                                                                                                                                                                                                                                                                                                                \n        readonly ebs?: CfnLaunchConfiguration.BlockDeviceProperty | cdk.IResolvable;\nn        readonly noDevice?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly virtualName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BlockDeviceMappingProperty`\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchConfiguration_BlockDeviceMappingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deviceName', cdk.requiredValidator)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('deviceName', cdk.validateString)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('ebs', CfnLaunchConfiguration_BlockDevicePropertyValidator)(properties.ebs));\n    errors.collect(cdk.propertyValidator('noDevice', cdk.validateBoolean)(properties.noDevice));\n    errors.collect(cdk.propertyValidator('virtualName', cdk.validateString)(properties.virtualName));\n    return errors.wrap('supplied properties not correct for \"BlockDeviceMappingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.BlockDeviceMapping` resource\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.BlockDeviceMapping` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchConfigurationBlockDeviceMappingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchConfiguration_BlockDeviceMappingPropertyValidator(properties).assertSuccess();\n    return {\n        DeviceName: cdk.stringToCloudFormation(properties.deviceName),\n        Ebs: cfnLaunchConfigurationBlockDevicePropertyToCloudFormation(properties.ebs),\n        NoDevice: cdk.booleanToCloudFormation(properties.noDevice),\n        VirtualName: cdk.stringToCloudFormation(properties.virtualName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchConfigurationBlockDeviceMappingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchConfiguration.BlockDeviceMappingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchConfiguration.BlockDeviceMappingProperty>();\n    ret.addPropertyResult('deviceName', 'DeviceName', cfn_parse.FromCloudFormation.getString(properties.DeviceName));\n    ret.addPropertyResult('ebs', 'Ebs', properties.Ebs != null ? CfnLaunchConfigurationBlockDevicePropertyFromCloudFormation(properties.Ebs) : undefined);\n    ret.addPropertyResult('noDevice', 'NoDevice', properties.NoDevice != null ? cfn_parse.FromCloudFormation.getBoolean(properties.NoDevice) : undefined);\n    ret.addPropertyResult('virtualName', 'VirtualName', properties.VirtualName != null ? cfn_parse.FromCloudFormation.getString(properties.VirtualName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchConfiguration {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    export interface MetadataOptionsProperty {\nn        readonly httpEndpoint?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly httpPutResponseHopLimit?: number;\nn        readonly httpTokens?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MetadataOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `MetadataOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchConfiguration_MetadataOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('httpEndpoint', cdk.validateString)(properties.httpEndpoint));\n    errors.collect(cdk.propertyValidator('httpPutResponseHopLimit', cdk.validateNumber)(properties.httpPutResponseHopLimit));\n    errors.collect(cdk.propertyValidator('httpTokens', cdk.validateString)(properties.httpTokens));\n    return errors.wrap('supplied properties not correct for \"MetadataOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.MetadataOptions` resource\n *\n * @param properties - the TypeScript properties of a `MetadataOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::LaunchConfiguration.MetadataOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchConfigurationMetadataOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchConfiguration_MetadataOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        HttpEndpoint: cdk.stringToCloudFormation(properties.httpEndpoint),\n        HttpPutResponseHopLimit: cdk.numberToCloudFormation(properties.httpPutResponseHopLimit),\n        HttpTokens: cdk.stringToCloudFormation(properties.httpTokens),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchConfigurationMetadataOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchConfiguration.MetadataOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchConfiguration.MetadataOptionsProperty>();\n    ret.addPropertyResult('httpEndpoint', 'HttpEndpoint', properties.HttpEndpoint != null ? cfn_parse.FromCloudFormation.getString(properties.HttpEndpoint) : undefined);\n    ret.addPropertyResult('httpPutResponseHopLimit', 'HttpPutResponseHopLimit', properties.HttpPutResponseHopLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.HttpPutResponseHopLimit) : undefined);\n    ret.addPropertyResult('httpTokens', 'HttpTokens', properties.HttpTokens != null ? cfn_parse.FromCloudFormation.getString(properties.HttpTokens) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                  \nexport interface CfnLifecycleHookProps {\n\n                                                                                                                                                                                                                                                                  \n    readonly autoScalingGroupName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly lifecycleTransition: string;\n\nn    readonly defaultResult?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly heartbeatTimeout?: number;\n\n                                                                                                                                                                                                                                    \n    readonly lifecycleHookName?: string;\n\n                                                                                                                                                                                                                                                                                                                            \n    readonly notificationMetadata?: string;\n\nn    readonly notificationTargetArn?: string;\n\nn    readonly roleArn?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLifecycleHookProps`\n *\n * @param properties - the TypeScript properties of a `CfnLifecycleHookProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLifecycleHookPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.requiredValidator)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.validateString)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('defaultResult', cdk.validateString)(properties.defaultResult));\n    errors.collect(cdk.propertyValidator('heartbeatTimeout', cdk.validateNumber)(properties.heartbeatTimeout));\n    errors.collect(cdk.propertyValidator('lifecycleHookName', cdk.validateString)(properties.lifecycleHookName));\n    errors.collect(cdk.propertyValidator('lifecycleTransition', cdk.requiredValidator)(properties.lifecycleTransition));\n    errors.collect(cdk.propertyValidator('lifecycleTransition', cdk.validateString)(properties.lifecycleTransition));\n    errors.collect(cdk.propertyValidator('notificationMetadata', cdk.validateString)(properties.notificationMetadata));\n    errors.collect(cdk.propertyValidator('notificationTargetArn', cdk.validateString)(properties.notificationTargetArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    return errors.wrap('supplied properties not correct for \"CfnLifecycleHookProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::LifecycleHook` resource\n *\n * @param properties - the TypeScript properties of a `CfnLifecycleHookProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::LifecycleHook` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLifecycleHookPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLifecycleHookPropsValidator(properties).assertSuccess();\n    return {\n        AutoScalingGroupName: cdk.stringToCloudFormation(properties.autoScalingGroupName),\n        LifecycleTransition: cdk.stringToCloudFormation(properties.lifecycleTransition),\n        DefaultResult: cdk.stringToCloudFormation(properties.defaultResult),\n        HeartbeatTimeout: cdk.numberToCloudFormation(properties.heartbeatTimeout),\n        LifecycleHookName: cdk.stringToCloudFormation(properties.lifecycleHookName),\n        NotificationMetadata: cdk.stringToCloudFormation(properties.notificationMetadata),\n        NotificationTargetARN: cdk.stringToCloudFormation(properties.notificationTargetArn),\n        RoleARN: cdk.stringToCloudFormation(properties.roleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLifecycleHookPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLifecycleHookProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLifecycleHookProps>();\n    ret.addPropertyResult('autoScalingGroupName', 'AutoScalingGroupName', cfn_parse.FromCloudFormation.getString(properties.AutoScalingGroupName));\n    ret.addPropertyResult('lifecycleTransition', 'LifecycleTransition', cfn_parse.FromCloudFormation.getString(properties.LifecycleTransition));\n    ret.addPropertyResult('defaultResult', 'DefaultResult', properties.DefaultResult != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultResult) : undefined);\n    ret.addPropertyResult('heartbeatTimeout', 'HeartbeatTimeout', properties.HeartbeatTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.HeartbeatTimeout) : undefined);\n    ret.addPropertyResult('lifecycleHookName', 'LifecycleHookName', properties.LifecycleHookName != null ? cfn_parse.FromCloudFormation.getString(properties.LifecycleHookName) : undefined);\n    ret.addPropertyResult('notificationMetadata', 'NotificationMetadata', properties.NotificationMetadata != null ? cfn_parse.FromCloudFormation.getString(properties.NotificationMetadata) : undefined);\n    ret.addPropertyResult('notificationTargetArn', 'NotificationTargetARN', properties.NotificationTargetARN != null ? cfn_parse.FromCloudFormation.getString(properties.NotificationTargetARN) : undefined);\n    ret.addPropertyResult('roleArn', 'RoleARN', properties.RoleARN != null ? cfn_parse.FromCloudFormation.getString(properties.RoleARN) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnLifecycleHook extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::LifecycleHook\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLifecycleHook {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLifecycleHookPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLifecycleHook(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                  \n    public autoScalingGroupName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    public lifecycleTransition: string;\n\nn    public defaultResult: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public heartbeatTimeout: number | undefined;\n\n                                                                                                                                                                                                                                    \n    public lifecycleHookName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                            \n    public notificationMetadata: string | undefined;\n\nn    public notificationTargetArn: string | undefined;\n\nn    public roleArn: string | undefined;\n\n                                                                                                                                                                                                                                     \n    constructor(scope: constructs.Construct, id: string, props: CfnLifecycleHookProps) {\n        super(scope, id, { type: CfnLifecycleHook.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'autoScalingGroupName', this);\n        cdk.requireProperty(props, 'lifecycleTransition', this);\n\n        this.autoScalingGroupName = props.autoScalingGroupName;\n        this.lifecycleTransition = props.lifecycleTransition;\n        this.defaultResult = props.defaultResult;\n        this.heartbeatTimeout = props.heartbeatTimeout;\n        this.lifecycleHookName = props.lifecycleHookName;\n        this.notificationMetadata = props.notificationMetadata;\n        this.notificationTargetArn = props.notificationTargetArn;\n        this.roleArn = props.roleArn;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLifecycleHook.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            autoScalingGroupName: this.autoScalingGroupName,\n            lifecycleTransition: this.lifecycleTransition,\n            defaultResult: this.defaultResult,\n            heartbeatTimeout: this.heartbeatTimeout,\n            lifecycleHookName: this.lifecycleHookName,\n            notificationMetadata: this.notificationMetadata,\n            notificationTargetArn: this.notificationTargetArn,\n            roleArn: this.roleArn,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLifecycleHookPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                    \nexport interface CfnScalingPolicyProps {\n\n                                                                                                                                                                                                                    \n    readonly autoScalingGroupName: string;\n\nn    readonly adjustmentType?: string;\n\nn    readonly cooldown?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    readonly estimatedInstanceWarmup?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly metricAggregationType?: string;\n\nn    readonly minAdjustmentMagnitude?: number;\n\nn    readonly policyType?: string;\n\n                                                                                                                                                                                                                                                                              \n    readonly predictiveScalingConfiguration?: CfnScalingPolicy.PredictiveScalingConfigurationProperty | cdk.IResolvable;\n\nn    readonly scalingAdjustment?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    readonly stepAdjustments?: Array<CfnScalingPolicy.StepAdjustmentProperty | cdk.IResolvable> | cdk.IResolvable;\n\nn    readonly targetTrackingConfiguration?: CfnScalingPolicy.TargetTrackingConfigurationProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnScalingPolicyProps`\n *\n * @param properties - the TypeScript properties of a `CfnScalingPolicyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('adjustmentType', cdk.validateString)(properties.adjustmentType));\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.requiredValidator)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.validateString)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('cooldown', cdk.validateString)(properties.cooldown));\n    errors.collect(cdk.propertyValidator('estimatedInstanceWarmup', cdk.validateNumber)(properties.estimatedInstanceWarmup));\n    errors.collect(cdk.propertyValidator('metricAggregationType', cdk.validateString)(properties.metricAggregationType));\n    errors.collect(cdk.propertyValidator('minAdjustmentMagnitude', cdk.validateNumber)(properties.minAdjustmentMagnitude));\n    errors.collect(cdk.propertyValidator('policyType', cdk.validateString)(properties.policyType));\n    errors.collect(cdk.propertyValidator('predictiveScalingConfiguration', CfnScalingPolicy_PredictiveScalingConfigurationPropertyValidator)(properties.predictiveScalingConfiguration));\n    errors.collect(cdk.propertyValidator('scalingAdjustment', cdk.validateNumber)(properties.scalingAdjustment));\n    errors.collect(cdk.propertyValidator('stepAdjustments', cdk.listValidator(CfnScalingPolicy_StepAdjustmentPropertyValidator))(properties.stepAdjustments));\n    errors.collect(cdk.propertyValidator('targetTrackingConfiguration', CfnScalingPolicy_TargetTrackingConfigurationPropertyValidator)(properties.targetTrackingConfiguration));\n    return errors.wrap('supplied properties not correct for \"CfnScalingPolicyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy` resource\n *\n * @param properties - the TypeScript properties of a `CfnScalingPolicyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicyPropsValidator(properties).assertSuccess();\n    return {\n        AutoScalingGroupName: cdk.stringToCloudFormation(properties.autoScalingGroupName),\n        AdjustmentType: cdk.stringToCloudFormation(properties.adjustmentType),\n        Cooldown: cdk.stringToCloudFormation(properties.cooldown),\n        EstimatedInstanceWarmup: cdk.numberToCloudFormation(properties.estimatedInstanceWarmup),\n        MetricAggregationType: cdk.stringToCloudFormation(properties.metricAggregationType),\n        MinAdjustmentMagnitude: cdk.numberToCloudFormation(properties.minAdjustmentMagnitude),\n        PolicyType: cdk.stringToCloudFormation(properties.policyType),\n        PredictiveScalingConfiguration: cfnScalingPolicyPredictiveScalingConfigurationPropertyToCloudFormation(properties.predictiveScalingConfiguration),\n        ScalingAdjustment: cdk.numberToCloudFormation(properties.scalingAdjustment),\n        StepAdjustments: cdk.listMapper(cfnScalingPolicyStepAdjustmentPropertyToCloudFormation)(properties.stepAdjustments),\n        TargetTrackingConfiguration: cfnScalingPolicyTargetTrackingConfigurationPropertyToCloudFormation(properties.targetTrackingConfiguration),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicyProps>();\n    ret.addPropertyResult('autoScalingGroupName', 'AutoScalingGroupName', cfn_parse.FromCloudFormation.getString(properties.AutoScalingGroupName));\n    ret.addPropertyResult('adjustmentType', 'AdjustmentType', properties.AdjustmentType != null ? cfn_parse.FromCloudFormation.getString(properties.AdjustmentType) : undefined);\n    ret.addPropertyResult('cooldown', 'Cooldown', properties.Cooldown != null ? cfn_parse.FromCloudFormation.getString(properties.Cooldown) : undefined);\n    ret.addPropertyResult('estimatedInstanceWarmup', 'EstimatedInstanceWarmup', properties.EstimatedInstanceWarmup != null ? cfn_parse.FromCloudFormation.getNumber(properties.EstimatedInstanceWarmup) : undefined);\n    ret.addPropertyResult('metricAggregationType', 'MetricAggregationType', properties.MetricAggregationType != null ? cfn_parse.FromCloudFormation.getString(properties.MetricAggregationType) : undefined);\n    ret.addPropertyResult('minAdjustmentMagnitude', 'MinAdjustmentMagnitude', properties.MinAdjustmentMagnitude != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinAdjustmentMagnitude) : undefined);\n    ret.addPropertyResult('policyType', 'PolicyType', properties.PolicyType != null ? cfn_parse.FromCloudFormation.getString(properties.PolicyType) : undefined);\n    ret.addPropertyResult('predictiveScalingConfiguration', 'PredictiveScalingConfiguration', properties.PredictiveScalingConfiguration != null ? CfnScalingPolicyPredictiveScalingConfigurationPropertyFromCloudFormation(properties.PredictiveScalingConfiguration) : undefined);\n    ret.addPropertyResult('scalingAdjustment', 'ScalingAdjustment', properties.ScalingAdjustment != null ? cfn_parse.FromCloudFormation.getNumber(properties.ScalingAdjustment) : undefined);\n    ret.addPropertyResult('stepAdjustments', 'StepAdjustments', properties.StepAdjustments != null ? cfn_parse.FromCloudFormation.getArray(CfnScalingPolicyStepAdjustmentPropertyFromCloudFormation)(properties.StepAdjustments) : undefined);\n    ret.addPropertyResult('targetTrackingConfiguration', 'TargetTrackingConfiguration', properties.TargetTrackingConfiguration != null ? CfnScalingPolicyTargetTrackingConfigurationPropertyFromCloudFormation(properties.TargetTrackingConfiguration) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnScalingPolicy extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::ScalingPolicy\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnScalingPolicy {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnScalingPolicyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnScalingPolicy(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                    \n    public autoScalingGroupName: string;\n\nn    public adjustmentType: string | undefined;\n\nn    public cooldown: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    public estimatedInstanceWarmup: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public metricAggregationType: string | undefined;\n\nn    public minAdjustmentMagnitude: number | undefined;\n\nn    public policyType: string | undefined;\n\n                                                                                                                                                                                                                                                                              \n    public predictiveScalingConfiguration: CfnScalingPolicy.PredictiveScalingConfigurationProperty | cdk.IResolvable | undefined;\n\nn    public scalingAdjustment: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    public stepAdjustments: Array<CfnScalingPolicy.StepAdjustmentProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    public targetTrackingConfiguration: CfnScalingPolicy.TargetTrackingConfigurationProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                     \n    constructor(scope: constructs.Construct, id: string, props: CfnScalingPolicyProps) {\n        super(scope, id, { type: CfnScalingPolicy.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'autoScalingGroupName', this);\n\n        this.autoScalingGroupName = props.autoScalingGroupName;\n        this.adjustmentType = props.adjustmentType;\n        this.cooldown = props.cooldown;\n        this.estimatedInstanceWarmup = props.estimatedInstanceWarmup;\n        this.metricAggregationType = props.metricAggregationType;\n        this.minAdjustmentMagnitude = props.minAdjustmentMagnitude;\n        this.policyType = props.policyType;\n        this.predictiveScalingConfiguration = props.predictiveScalingConfiguration;\n        this.scalingAdjustment = props.scalingAdjustment;\n        this.stepAdjustments = props.stepAdjustments;\n        this.targetTrackingConfiguration = props.targetTrackingConfiguration;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnScalingPolicy.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            autoScalingGroupName: this.autoScalingGroupName,\n            adjustmentType: this.adjustmentType,\n            cooldown: this.cooldown,\n            estimatedInstanceWarmup: this.estimatedInstanceWarmup,\n            metricAggregationType: this.metricAggregationType,\n            minAdjustmentMagnitude: this.minAdjustmentMagnitude,\n            policyType: this.policyType,\n            predictiveScalingConfiguration: this.predictiveScalingConfiguration,\n            scalingAdjustment: this.scalingAdjustment,\n            stepAdjustments: this.stepAdjustments,\n            targetTrackingConfiguration: this.targetTrackingConfiguration,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnScalingPolicyPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnScalingPolicy {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    export interface CustomizedMetricSpecificationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly dimensions?: Array<CfnScalingPolicy.MetricDimensionProperty | cdk.IResolvable> | cdk.IResolvable;\nn        readonly metricName: string;\n                                                                                                                                                                                                                                                                                                           \n        readonly namespace: string;\n                                                                                                                                                                                                                                                                                                           \n        readonly statistic: string;\nn        readonly unit?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CustomizedMetricSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `CustomizedMetricSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dimensions', cdk.listValidator(CfnScalingPolicy_MetricDimensionPropertyValidator))(properties.dimensions));\n    errors.collect(cdk.propertyValidator('metricName', cdk.requiredValidator)(properties.metricName));\n    errors.collect(cdk.propertyValidator('metricName', cdk.validateString)(properties.metricName));\n    errors.collect(cdk.propertyValidator('namespace', cdk.requiredValidator)(properties.namespace));\n    errors.collect(cdk.propertyValidator('namespace', cdk.validateString)(properties.namespace));\n    errors.collect(cdk.propertyValidator('statistic', cdk.requiredValidator)(properties.statistic));\n    errors.collect(cdk.propertyValidator('statistic', cdk.validateString)(properties.statistic));\n    errors.collect(cdk.propertyValidator('unit', cdk.validateString)(properties.unit));\n    return errors.wrap('supplied properties not correct for \"CustomizedMetricSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.CustomizedMetricSpecification` resource\n *\n * @param properties - the TypeScript properties of a `CustomizedMetricSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.CustomizedMetricSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyCustomizedMetricSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Dimensions: cdk.listMapper(cfnScalingPolicyMetricDimensionPropertyToCloudFormation)(properties.dimensions),\n        MetricName: cdk.stringToCloudFormation(properties.metricName),\n        Namespace: cdk.stringToCloudFormation(properties.namespace),\n        Statistic: cdk.stringToCloudFormation(properties.statistic),\n        Unit: cdk.stringToCloudFormation(properties.unit),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyCustomizedMetricSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.CustomizedMetricSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.CustomizedMetricSpecificationProperty>();\n    ret.addPropertyResult('dimensions', 'Dimensions', properties.Dimensions != null ? cfn_parse.FromCloudFormation.getArray(CfnScalingPolicyMetricDimensionPropertyFromCloudFormation)(properties.Dimensions) : undefined);\n    ret.addPropertyResult('metricName', 'MetricName', cfn_parse.FromCloudFormation.getString(properties.MetricName));\n    ret.addPropertyResult('namespace', 'Namespace', cfn_parse.FromCloudFormation.getString(properties.Namespace));\n    ret.addPropertyResult('statistic', 'Statistic', cfn_parse.FromCloudFormation.getString(properties.Statistic));\n    ret.addPropertyResult('unit', 'Unit', properties.Unit != null ? cfn_parse.FromCloudFormation.getString(properties.Unit) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface MetricDimensionProperty {\n                                                                                                                                                                                                                                                                        \n        readonly name: string;\n                                                                                                                                                                                                                                                                          \n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MetricDimensionProperty`\n *\n * @param properties - the TypeScript properties of a `MetricDimensionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_MetricDimensionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"MetricDimensionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.MetricDimension` resource\n *\n * @param properties - the TypeScript properties of a `MetricDimensionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.MetricDimension` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyMetricDimensionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_MetricDimensionPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyMetricDimensionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.MetricDimensionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.MetricDimensionProperty>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredefinedMetricSpecificationProperty {\nn        readonly predefinedMetricType: string;\nn        readonly resourceLabel?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredefinedMetricSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PredefinedMetricSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.requiredValidator)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.validateString)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('resourceLabel', cdk.validateString)(properties.resourceLabel));\n    return errors.wrap('supplied properties not correct for \"PredefinedMetricSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredefinedMetricSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PredefinedMetricSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredefinedMetricSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredefinedMetricSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedMetricType: cdk.stringToCloudFormation(properties.predefinedMetricType),\n        ResourceLabel: cdk.stringToCloudFormation(properties.resourceLabel),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredefinedMetricSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredefinedMetricSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredefinedMetricSpecificationProperty>();\n    ret.addPropertyResult('predefinedMetricType', 'PredefinedMetricType', cfn_parse.FromCloudFormation.getString(properties.PredefinedMetricType));\n    ret.addPropertyResult('resourceLabel', 'ResourceLabel', properties.ResourceLabel != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceLabel) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredictiveScalingConfigurationProperty {\nn        readonly maxCapacityBreachBehavior?: string;\nn        readonly maxCapacityBuffer?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly metricSpecifications: Array<CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                     \n        readonly mode?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly schedulingBufferTime?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredictiveScalingConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredictiveScalingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('maxCapacityBreachBehavior', cdk.validateString)(properties.maxCapacityBreachBehavior));\n    errors.collect(cdk.propertyValidator('maxCapacityBuffer', cdk.validateNumber)(properties.maxCapacityBuffer));\n    errors.collect(cdk.propertyValidator('metricSpecifications', cdk.requiredValidator)(properties.metricSpecifications));\n    errors.collect(cdk.propertyValidator('metricSpecifications', cdk.listValidator(CfnScalingPolicy_PredictiveScalingMetricSpecificationPropertyValidator))(properties.metricSpecifications));\n    errors.collect(cdk.propertyValidator('mode', cdk.validateString)(properties.mode));\n    errors.collect(cdk.propertyValidator('schedulingBufferTime', cdk.validateNumber)(properties.schedulingBufferTime));\n    return errors.wrap('supplied properties not correct for \"PredictiveScalingConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredictiveScalingConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredictiveScalingConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        MaxCapacityBreachBehavior: cdk.stringToCloudFormation(properties.maxCapacityBreachBehavior),\n        MaxCapacityBuffer: cdk.numberToCloudFormation(properties.maxCapacityBuffer),\n        MetricSpecifications: cdk.listMapper(cfnScalingPolicyPredictiveScalingMetricSpecificationPropertyToCloudFormation)(properties.metricSpecifications),\n        Mode: cdk.stringToCloudFormation(properties.mode),\n        SchedulingBufferTime: cdk.numberToCloudFormation(properties.schedulingBufferTime),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredictiveScalingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredictiveScalingConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredictiveScalingConfigurationProperty>();\n    ret.addPropertyResult('maxCapacityBreachBehavior', 'MaxCapacityBreachBehavior', properties.MaxCapacityBreachBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.MaxCapacityBreachBehavior) : undefined);\n    ret.addPropertyResult('maxCapacityBuffer', 'MaxCapacityBuffer', properties.MaxCapacityBuffer != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacityBuffer) : undefined);\n    ret.addPropertyResult('metricSpecifications', 'MetricSpecifications', cfn_parse.FromCloudFormation.getArray(CfnScalingPolicyPredictiveScalingMetricSpecificationPropertyFromCloudFormation)(properties.MetricSpecifications));\n    ret.addPropertyResult('mode', 'Mode', properties.Mode != null ? cfn_parse.FromCloudFormation.getString(properties.Mode) : undefined);\n    ret.addPropertyResult('schedulingBufferTime', 'SchedulingBufferTime', properties.SchedulingBufferTime != null ? cfn_parse.FromCloudFormation.getNumber(properties.SchedulingBufferTime) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredictiveScalingMetricSpecificationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly predefinedLoadMetricSpecification?: CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty | cdk.IResolvable;\nn        readonly predefinedMetricPairSpecification?: CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly predefinedScalingMetricSpecification?: CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty | cdk.IResolvable;\nn        readonly targetValue: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredictiveScalingMetricSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingMetricSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredictiveScalingMetricSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedLoadMetricSpecification', CfnScalingPolicy_PredictiveScalingPredefinedLoadMetricPropertyValidator)(properties.predefinedLoadMetricSpecification));\n    errors.collect(cdk.propertyValidator('predefinedMetricPairSpecification', CfnScalingPolicy_PredictiveScalingPredefinedMetricPairPropertyValidator)(properties.predefinedMetricPairSpecification));\n    errors.collect(cdk.propertyValidator('predefinedScalingMetricSpecification', CfnScalingPolicy_PredictiveScalingPredefinedScalingMetricPropertyValidator)(properties.predefinedScalingMetricSpecification));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.requiredValidator)(properties.targetValue));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.validateNumber)(properties.targetValue));\n    return errors.wrap('supplied properties not correct for \"PredictiveScalingMetricSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingMetricSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingMetricSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingMetricSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredictiveScalingMetricSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredictiveScalingMetricSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedLoadMetricSpecification: cfnScalingPolicyPredictiveScalingPredefinedLoadMetricPropertyToCloudFormation(properties.predefinedLoadMetricSpecification),\n        PredefinedMetricPairSpecification: cfnScalingPolicyPredictiveScalingPredefinedMetricPairPropertyToCloudFormation(properties.predefinedMetricPairSpecification),\n        PredefinedScalingMetricSpecification: cfnScalingPolicyPredictiveScalingPredefinedScalingMetricPropertyToCloudFormation(properties.predefinedScalingMetricSpecification),\n        TargetValue: cdk.numberToCloudFormation(properties.targetValue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredictiveScalingMetricSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty>();\n    ret.addPropertyResult('predefinedLoadMetricSpecification', 'PredefinedLoadMetricSpecification', properties.PredefinedLoadMetricSpecification != null ? CfnScalingPolicyPredictiveScalingPredefinedLoadMetricPropertyFromCloudFormation(properties.PredefinedLoadMetricSpecification) : undefined);\n    ret.addPropertyResult('predefinedMetricPairSpecification', 'PredefinedMetricPairSpecification', properties.PredefinedMetricPairSpecification != null ? CfnScalingPolicyPredictiveScalingPredefinedMetricPairPropertyFromCloudFormation(properties.PredefinedMetricPairSpecification) : undefined);\n    ret.addPropertyResult('predefinedScalingMetricSpecification', 'PredefinedScalingMetricSpecification', properties.PredefinedScalingMetricSpecification != null ? CfnScalingPolicyPredictiveScalingPredefinedScalingMetricPropertyFromCloudFormation(properties.PredefinedScalingMetricSpecification) : undefined);\n    ret.addPropertyResult('targetValue', 'TargetValue', cfn_parse.FromCloudFormation.getNumber(properties.TargetValue));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    export interface PredictiveScalingPredefinedLoadMetricProperty {\n                                                                                                                                                                                                                                                                                                                          \n        readonly predefinedMetricType: string;\nn        readonly resourceLabel?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredictiveScalingPredefinedLoadMetricProperty`\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedLoadMetricProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredictiveScalingPredefinedLoadMetricPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.requiredValidator)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.validateString)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('resourceLabel', cdk.validateString)(properties.resourceLabel));\n    return errors.wrap('supplied properties not correct for \"PredictiveScalingPredefinedLoadMetricProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedLoadMetric` resource\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedLoadMetricProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedLoadMetric` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredictiveScalingPredefinedLoadMetricPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredictiveScalingPredefinedLoadMetricPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedMetricType: cdk.stringToCloudFormation(properties.predefinedMetricType),\n        ResourceLabel: cdk.stringToCloudFormation(properties.resourceLabel),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredictiveScalingPredefinedLoadMetricPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty>();\n    ret.addPropertyResult('predefinedMetricType', 'PredefinedMetricType', cfn_parse.FromCloudFormation.getString(properties.PredefinedMetricType));\n    ret.addPropertyResult('resourceLabel', 'ResourceLabel', properties.ResourceLabel != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceLabel) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredictiveScalingPredefinedMetricPairProperty {\nn        readonly predefinedMetricType: string;\nn        readonly resourceLabel?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredictiveScalingPredefinedMetricPairProperty`\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedMetricPairProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredictiveScalingPredefinedMetricPairPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.requiredValidator)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.validateString)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('resourceLabel', cdk.validateString)(properties.resourceLabel));\n    return errors.wrap('supplied properties not correct for \"PredictiveScalingPredefinedMetricPairProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedMetricPair` resource\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedMetricPairProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedMetricPair` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredictiveScalingPredefinedMetricPairPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredictiveScalingPredefinedMetricPairPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedMetricType: cdk.stringToCloudFormation(properties.predefinedMetricType),\n        ResourceLabel: cdk.stringToCloudFormation(properties.resourceLabel),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredictiveScalingPredefinedMetricPairPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty>();\n    ret.addPropertyResult('predefinedMetricType', 'PredefinedMetricType', cfn_parse.FromCloudFormation.getString(properties.PredefinedMetricType));\n    ret.addPropertyResult('resourceLabel', 'ResourceLabel', properties.ResourceLabel != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceLabel) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface PredictiveScalingPredefinedScalingMetricProperty {\n                                                                                                                                                                                                                                                                                                                                \n        readonly predefinedMetricType: string;\nn        readonly resourceLabel?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PredictiveScalingPredefinedScalingMetricProperty`\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedScalingMetricProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_PredictiveScalingPredefinedScalingMetricPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.requiredValidator)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('predefinedMetricType', cdk.validateString)(properties.predefinedMetricType));\n    errors.collect(cdk.propertyValidator('resourceLabel', cdk.validateString)(properties.resourceLabel));\n    return errors.wrap('supplied properties not correct for \"PredictiveScalingPredefinedScalingMetricProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedScalingMetric` resource\n *\n * @param properties - the TypeScript properties of a `PredictiveScalingPredefinedScalingMetricProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedScalingMetric` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyPredictiveScalingPredefinedScalingMetricPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_PredictiveScalingPredefinedScalingMetricPropertyValidator(properties).assertSuccess();\n    return {\n        PredefinedMetricType: cdk.stringToCloudFormation(properties.predefinedMetricType),\n        ResourceLabel: cdk.stringToCloudFormation(properties.resourceLabel),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyPredictiveScalingPredefinedScalingMetricPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty>();\n    ret.addPropertyResult('predefinedMetricType', 'PredefinedMetricType', cfn_parse.FromCloudFormation.getString(properties.PredefinedMetricType));\n    ret.addPropertyResult('resourceLabel', 'ResourceLabel', properties.ResourceLabel != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceLabel) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface StepAdjustmentProperty {\nn        readonly metricIntervalLowerBound?: number;\nn        readonly metricIntervalUpperBound?: number;\nn        readonly scalingAdjustment: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StepAdjustmentProperty`\n *\n * @param properties - the TypeScript properties of a `StepAdjustmentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_StepAdjustmentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('metricIntervalLowerBound', cdk.validateNumber)(properties.metricIntervalLowerBound));\n    errors.collect(cdk.propertyValidator('metricIntervalUpperBound', cdk.validateNumber)(properties.metricIntervalUpperBound));\n    errors.collect(cdk.propertyValidator('scalingAdjustment', cdk.requiredValidator)(properties.scalingAdjustment));\n    errors.collect(cdk.propertyValidator('scalingAdjustment', cdk.validateNumber)(properties.scalingAdjustment));\n    return errors.wrap('supplied properties not correct for \"StepAdjustmentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.StepAdjustment` resource\n *\n * @param properties - the TypeScript properties of a `StepAdjustmentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.StepAdjustment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyStepAdjustmentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_StepAdjustmentPropertyValidator(properties).assertSuccess();\n    return {\n        MetricIntervalLowerBound: cdk.numberToCloudFormation(properties.metricIntervalLowerBound),\n        MetricIntervalUpperBound: cdk.numberToCloudFormation(properties.metricIntervalUpperBound),\n        ScalingAdjustment: cdk.numberToCloudFormation(properties.scalingAdjustment),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyStepAdjustmentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.StepAdjustmentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.StepAdjustmentProperty>();\n    ret.addPropertyResult('metricIntervalLowerBound', 'MetricIntervalLowerBound', properties.MetricIntervalLowerBound != null ? cfn_parse.FromCloudFormation.getNumber(properties.MetricIntervalLowerBound) : undefined);\n    ret.addPropertyResult('metricIntervalUpperBound', 'MetricIntervalUpperBound', properties.MetricIntervalUpperBound != null ? cfn_parse.FromCloudFormation.getNumber(properties.MetricIntervalUpperBound) : undefined);\n    ret.addPropertyResult('scalingAdjustment', 'ScalingAdjustment', cfn_parse.FromCloudFormation.getNumber(properties.ScalingAdjustment));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnScalingPolicy {\nn    export interface TargetTrackingConfigurationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                       \n        readonly customizedMetricSpecification?: CfnScalingPolicy.CustomizedMetricSpecificationProperty | cdk.IResolvable;\nn        readonly disableScaleIn?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                       \n        readonly predefinedMetricSpecification?: CfnScalingPolicy.PredefinedMetricSpecificationProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                             \n        readonly targetValue: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetTrackingConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `TargetTrackingConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnScalingPolicy_TargetTrackingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('customizedMetricSpecification', CfnScalingPolicy_CustomizedMetricSpecificationPropertyValidator)(properties.customizedMetricSpecification));\n    errors.collect(cdk.propertyValidator('disableScaleIn', cdk.validateBoolean)(properties.disableScaleIn));\n    errors.collect(cdk.propertyValidator('predefinedMetricSpecification', CfnScalingPolicy_PredefinedMetricSpecificationPropertyValidator)(properties.predefinedMetricSpecification));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.requiredValidator)(properties.targetValue));\n    errors.collect(cdk.propertyValidator('targetValue', cdk.validateNumber)(properties.targetValue));\n    return errors.wrap('supplied properties not correct for \"TargetTrackingConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.TargetTrackingConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `TargetTrackingConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScalingPolicy.TargetTrackingConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScalingPolicyTargetTrackingConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScalingPolicy_TargetTrackingConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        CustomizedMetricSpecification: cfnScalingPolicyCustomizedMetricSpecificationPropertyToCloudFormation(properties.customizedMetricSpecification),\n        DisableScaleIn: cdk.booleanToCloudFormation(properties.disableScaleIn),\n        PredefinedMetricSpecification: cfnScalingPolicyPredefinedMetricSpecificationPropertyToCloudFormation(properties.predefinedMetricSpecification),\n        TargetValue: cdk.numberToCloudFormation(properties.targetValue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScalingPolicyTargetTrackingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScalingPolicy.TargetTrackingConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScalingPolicy.TargetTrackingConfigurationProperty>();\n    ret.addPropertyResult('customizedMetricSpecification', 'CustomizedMetricSpecification', properties.CustomizedMetricSpecification != null ? CfnScalingPolicyCustomizedMetricSpecificationPropertyFromCloudFormation(properties.CustomizedMetricSpecification) : undefined);\n    ret.addPropertyResult('disableScaleIn', 'DisableScaleIn', properties.DisableScaleIn != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableScaleIn) : undefined);\n    ret.addPropertyResult('predefinedMetricSpecification', 'PredefinedMetricSpecification', properties.PredefinedMetricSpecification != null ? CfnScalingPolicyPredefinedMetricSpecificationPropertyFromCloudFormation(properties.PredefinedMetricSpecification) : undefined);\n    ret.addPropertyResult('targetValue', 'TargetValue', cfn_parse.FromCloudFormation.getNumber(properties.TargetValue));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                             \nexport interface CfnScheduledActionProps {\n\n                                                                                                                                                                                                                \n    readonly autoScalingGroupName: string;\n\nn    readonly desiredCapacity?: number;\n\n                                                                                                                                                                                                                                                                                 \n    readonly endTime?: string;\n\n                                                                                                                                                                                                                                                                                                                                                \n    readonly maxSize?: number;\n\n                                                                                                                                                                                                                                                                                                                                                \n    readonly minSize?: number;\n\nn    readonly recurrence?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    readonly startTime?: string;\n\nn    readonly timeZone?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnScheduledActionProps`\n *\n * @param properties - the TypeScript properties of a `CfnScheduledActionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnScheduledActionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.requiredValidator)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.validateString)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('desiredCapacity', cdk.validateNumber)(properties.desiredCapacity));\n    errors.collect(cdk.propertyValidator('endTime', cdk.validateString)(properties.endTime));\n    errors.collect(cdk.propertyValidator('maxSize', cdk.validateNumber)(properties.maxSize));\n    errors.collect(cdk.propertyValidator('minSize', cdk.validateNumber)(properties.minSize));\n    errors.collect(cdk.propertyValidator('recurrence', cdk.validateString)(properties.recurrence));\n    errors.collect(cdk.propertyValidator('startTime', cdk.validateString)(properties.startTime));\n    errors.collect(cdk.propertyValidator('timeZone', cdk.validateString)(properties.timeZone));\n    return errors.wrap('supplied properties not correct for \"CfnScheduledActionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::ScheduledAction` resource\n *\n * @param properties - the TypeScript properties of a `CfnScheduledActionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::ScheduledAction` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScheduledActionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScheduledActionPropsValidator(properties).assertSuccess();\n    return {\n        AutoScalingGroupName: cdk.stringToCloudFormation(properties.autoScalingGroupName),\n        DesiredCapacity: cdk.numberToCloudFormation(properties.desiredCapacity),\n        EndTime: cdk.stringToCloudFormation(properties.endTime),\n        MaxSize: cdk.numberToCloudFormation(properties.maxSize),\n        MinSize: cdk.numberToCloudFormation(properties.minSize),\n        Recurrence: cdk.stringToCloudFormation(properties.recurrence),\n        StartTime: cdk.stringToCloudFormation(properties.startTime),\n        TimeZone: cdk.stringToCloudFormation(properties.timeZone),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScheduledActionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnScheduledActionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnScheduledActionProps>();\n    ret.addPropertyResult('autoScalingGroupName', 'AutoScalingGroupName', cfn_parse.FromCloudFormation.getString(properties.AutoScalingGroupName));\n    ret.addPropertyResult('desiredCapacity', 'DesiredCapacity', properties.DesiredCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.DesiredCapacity) : undefined);\n    ret.addPropertyResult('endTime', 'EndTime', properties.EndTime != null ? cfn_parse.FromCloudFormation.getString(properties.EndTime) : undefined);\n    ret.addPropertyResult('maxSize', 'MaxSize', properties.MaxSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxSize) : undefined);\n    ret.addPropertyResult('minSize', 'MinSize', properties.MinSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinSize) : undefined);\n    ret.addPropertyResult('recurrence', 'Recurrence', properties.Recurrence != null ? cfn_parse.FromCloudFormation.getString(properties.Recurrence) : undefined);\n    ret.addPropertyResult('startTime', 'StartTime', properties.StartTime != null ? cfn_parse.FromCloudFormation.getString(properties.StartTime) : undefined);\n    ret.addPropertyResult('timeZone', 'TimeZone', properties.TimeZone != null ? cfn_parse.FromCloudFormation.getString(properties.TimeZone) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnScheduledAction extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::ScheduledAction\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnScheduledAction {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnScheduledActionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnScheduledAction(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                \n    public autoScalingGroupName: string;\n\nn    public desiredCapacity: number | undefined;\n\n                                                                                                                                                                                                                                                                                 \n    public endTime: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                \n    public maxSize: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                \n    public minSize: number | undefined;\n\nn    public recurrence: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    public startTime: string | undefined;\n\nn    public timeZone: string | undefined;\n\n                                                                                                                                                                                                                                       \n    constructor(scope: constructs.Construct, id: string, props: CfnScheduledActionProps) {\n        super(scope, id, { type: CfnScheduledAction.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'autoScalingGroupName', this);\n\n        this.autoScalingGroupName = props.autoScalingGroupName;\n        this.desiredCapacity = props.desiredCapacity;\n        this.endTime = props.endTime;\n        this.maxSize = props.maxSize;\n        this.minSize = props.minSize;\n        this.recurrence = props.recurrence;\n        this.startTime = props.startTime;\n        this.timeZone = props.timeZone;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnScheduledAction.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            autoScalingGroupName: this.autoScalingGroupName,\n            desiredCapacity: this.desiredCapacity,\n            endTime: this.endTime,\n            maxSize: this.maxSize,\n            minSize: this.minSize,\n            recurrence: this.recurrence,\n            startTime: this.startTime,\n            timeZone: this.timeZone,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnScheduledActionPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                        \nexport interface CfnWarmPoolProps {\n\n                                                                                                                                                                                                                                 \n    readonly autoScalingGroupName: string;\n\n                                                                                                                                                                                                                                             \n    readonly instanceReusePolicy?: CfnWarmPool.InstanceReusePolicyProperty | cdk.IResolvable;\n\nn    readonly maxGroupPreparedCapacity?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly minSize?: number;\n\n                                                                                                                                                                                                                                                                                            \n    readonly poolState?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnWarmPoolProps`\n *\n * @param properties - the TypeScript properties of a `CfnWarmPoolProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnWarmPoolPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.requiredValidator)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('autoScalingGroupName', cdk.validateString)(properties.autoScalingGroupName));\n    errors.collect(cdk.propertyValidator('instanceReusePolicy', CfnWarmPool_InstanceReusePolicyPropertyValidator)(properties.instanceReusePolicy));\n    errors.collect(cdk.propertyValidator('maxGroupPreparedCapacity', cdk.validateNumber)(properties.maxGroupPreparedCapacity));\n    errors.collect(cdk.propertyValidator('minSize', cdk.validateNumber)(properties.minSize));\n    errors.collect(cdk.propertyValidator('poolState', cdk.validateString)(properties.poolState));\n    return errors.wrap('supplied properties not correct for \"CfnWarmPoolProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::WarmPool` resource\n *\n * @param properties - the TypeScript properties of a `CfnWarmPoolProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::WarmPool` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWarmPoolPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWarmPoolPropsValidator(properties).assertSuccess();\n    return {\n        AutoScalingGroupName: cdk.stringToCloudFormation(properties.autoScalingGroupName),\n        InstanceReusePolicy: cfnWarmPoolInstanceReusePolicyPropertyToCloudFormation(properties.instanceReusePolicy),\n        MaxGroupPreparedCapacity: cdk.numberToCloudFormation(properties.maxGroupPreparedCapacity),\n        MinSize: cdk.numberToCloudFormation(properties.minSize),\n        PoolState: cdk.stringToCloudFormation(properties.poolState),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWarmPoolPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWarmPoolProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWarmPoolProps>();\n    ret.addPropertyResult('autoScalingGroupName', 'AutoScalingGroupName', cfn_parse.FromCloudFormation.getString(properties.AutoScalingGroupName));\n    ret.addPropertyResult('instanceReusePolicy', 'InstanceReusePolicy', properties.InstanceReusePolicy != null ? CfnWarmPoolInstanceReusePolicyPropertyFromCloudFormation(properties.InstanceReusePolicy) : undefined);\n    ret.addPropertyResult('maxGroupPreparedCapacity', 'MaxGroupPreparedCapacity', properties.MaxGroupPreparedCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxGroupPreparedCapacity) : undefined);\n    ret.addPropertyResult('minSize', 'MinSize', properties.MinSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinSize) : undefined);\n    ret.addPropertyResult('poolState', 'PoolState', properties.PoolState != null ? cfn_parse.FromCloudFormation.getString(properties.PoolState) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnWarmPool extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AutoScaling::WarmPool\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnWarmPool {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnWarmPoolPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnWarmPool(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                 \n    public autoScalingGroupName: string;\n\n                                                                                                                                                                                                                                             \n    public instanceReusePolicy: CfnWarmPool.InstanceReusePolicyProperty | cdk.IResolvable | undefined;\n\nn    public maxGroupPreparedCapacity: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                               \n    public minSize: number | undefined;\n\n                                                                                                                                                                                                                                                                                            \n    public poolState: string | undefined;\n\n                                                                                                                                                                                                                                \n    constructor(scope: constructs.Construct, id: string, props: CfnWarmPoolProps) {\n        super(scope, id, { type: CfnWarmPool.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'autoScalingGroupName', this);\n\n        this.autoScalingGroupName = props.autoScalingGroupName;\n        this.instanceReusePolicy = props.instanceReusePolicy;\n        this.maxGroupPreparedCapacity = props.maxGroupPreparedCapacity;\n        this.minSize = props.minSize;\n        this.poolState = props.poolState;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnWarmPool.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            autoScalingGroupName: this.autoScalingGroupName,\n            instanceReusePolicy: this.instanceReusePolicy,\n            maxGroupPreparedCapacity: this.maxGroupPreparedCapacity,\n            minSize: this.minSize,\n            poolState: this.poolState,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnWarmPoolPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnWarmPool {\n                                                                                                                                                                                                                      \n    export interface InstanceReusePolicyProperty {\n                                                                                                                                                                                                                                                                                                              \n        readonly reuseOnScaleIn?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceReusePolicyProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceReusePolicyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnWarmPool_InstanceReusePolicyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('reuseOnScaleIn', cdk.validateBoolean)(properties.reuseOnScaleIn));\n    return errors.wrap('supplied properties not correct for \"InstanceReusePolicyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AutoScaling::WarmPool.InstanceReusePolicy` resource\n *\n * @param properties - the TypeScript properties of a `InstanceReusePolicyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AutoScaling::WarmPool.InstanceReusePolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWarmPoolInstanceReusePolicyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWarmPool_InstanceReusePolicyPropertyValidator(properties).assertSuccess();\n    return {\n        ReuseOnScaleIn: cdk.booleanToCloudFormation(properties.reuseOnScaleIn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWarmPoolInstanceReusePolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWarmPool.InstanceReusePolicyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWarmPool.InstanceReusePolicyProperty>();\n    ret.addPropertyResult('reuseOnScaleIn', 'ReuseOnScaleIn', properties.ReuseOnScaleIn != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ReuseOnScaleIn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
