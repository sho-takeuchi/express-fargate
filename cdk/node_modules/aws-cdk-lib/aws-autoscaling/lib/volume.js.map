{
  "version": 3,
  "sources": ["volume.ts"],
  "sourcesContent": ["// Unfortunately a mostly-literal copy from ec2/volume.ts because this feature\n// existed first in the \"autoscaling\" module before it existed in the \"ec2\"\n// module so we couldn't standardize the structs in the right way.\n\n                       \nexport interface BlockDevice {\n                                                                                                                                                                                                    \n  readonly deviceName: string;\n\n                                                                                                                                                                                                                      \n  readonly volume: BlockDeviceVolume;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly mappingEnabled?: boolean;\n}\n\n                                                      \nexport interface EbsDeviceOptionsBase {\n                                                                                                                                                                          \n  readonly deleteOnTermination?: boolean;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n  readonly iops?: number;\n\n                                                                                                                                                                         \n  readonly volumeType?: EbsDeviceVolumeType;\n}\n\n                                                 \nexport interface EbsDeviceOptions extends EbsDeviceOptionsBase {\n                                                                                                                                                                                                                                                                                                                \n  readonly encrypted?: boolean;\n}\n\n                                                                         \nexport interface EbsDeviceSnapshotOptions extends EbsDeviceOptionsBase {\n                                                                                                                                                                                           \n  readonly volumeSize?: number;\n}\n\n                                            \nexport interface EbsDeviceProps extends EbsDeviceSnapshotOptions {\n                                                                                                   \n  readonly snapshotId?: string;\n}\n\n                                                                                      \nexport class BlockDeviceVolume {\n  /**\n   * @internal\n   */\n  public static _NO_DEVICE = new BlockDeviceVolume();\n\n                                                                                                                                                                         \n  public static ebs(volumeSize: number, options: EbsDeviceOptions = {}): BlockDeviceVolume {\n    return new this({ ...options, volumeSize });\n  }\n\n                                                                                                                                                                                                    \n  public static ebsFromSnapshot(snapshotId: string, options: EbsDeviceSnapshotOptions = {}): BlockDeviceVolume {\n    return new this({ ...options, snapshotId });\n  }\n\n                                                                                                                                                                                              \n  public static ephemeral(volumeIndex: number) {\n    if (volumeIndex < 0) {\n      throw new Error(`volumeIndex must be a number starting from 0, got \"${volumeIndex}\"`);\n    }\n\n    return new this(undefined, `ephemeral${volumeIndex}`);\n  }\n\n                                           \n  public static noDevice() {\n    return this._NO_DEVICE;\n  }\n\n                                                                                             \n  protected constructor(public readonly ebsDevice?: EbsDeviceProps, public readonly virtualName?: string) {\n  }\n}\n\n                                                      \nexport enum EbsDeviceVolumeType {\n                         \n  STANDARD = 'standard',\n\n                                            \n  IO1 = 'io1',\n\n                                          \n  GP2 = 'gp2',\n\n                                          \n  GP3 = 'gp3',\n\n                                         \n  ST1 = 'st1',\n\n                         \n  SC1 = 'sc1',\n}\n"],
  "mappings": "oPA+CA,uBAA8B,CA+B5B,YAAsC,UAA4C,YAAoB,CAAhE,KAAA,UAAA,UAA4C,KAAA,YAAA,gGAxBpE,KAAI,WAAoB,QAA4B,GAAE,sFAC3D,GAAI,MAAK,IAAK,QAAS,mBAIlB,iBAAgB,WAAoB,QAAoC,GAAE,8FAC/E,GAAI,MAAK,IAAK,QAAS,mBAIlB,WAAU,YAAmB,CACzC,GAAI,YAAc,EAChB,KAAM,IAAI,OAAM,sDAAsD,gBAGxE,MAAO,IAAI,MAAK,OAAW,YAAY,qBAI3B,WAAQ,CACpB,MAAO,MAAK,YA3BhB,QAAA,kBAAA,qIAIgB,kBAAA,WAAa,GAAI,mBAgCjC,GAAY,qBAAZ,AAAA,UAAY,qBAAmB,CAE7B,qBAAA,SAAA,WAGA,qBAAA,IAAA,MAGA,qBAAA,IAAA,MAGA,qBAAA,IAAA,MAGA,qBAAA,IAAA,MAGA,qBAAA,IAAA,QAjBU,oBAAA,QAAA,qBAAA,SAAA,oBAAmB",
  "names": []
}
