{
  "version": 3,
  "sources": ["rule.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport { Duration } from '../../core';\nimport { IBackupVault } from './vault';\n\n                                          \nexport interface BackupPlanRuleProps {\n                                                                                                                                                                       \n  readonly completionWindow?: Duration;\n\n                                                                                                                                                                                                 \n  readonly deleteAfter?: Duration;\n\n                                                                                                                                                                              \n  readonly moveToColdStorageAfter?: Duration;\n\n                                                                                              \n  readonly ruleName?: string;\n\n                                                                                                                      \n  readonly scheduleExpression?: events.Schedule;\n\n                                                                                                                                                 \n  readonly startWindow?: Duration;\n\n                                                                                                                                                                                     \n  readonly backupVault?: IBackupVault;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  readonly enableContinuousBackup?: boolean;\n}\n\n                             \nexport class BackupPlanRule {\n                                             \n  public static daily(backupVault?: IBackupVault) {\n    return new BackupPlanRule({\n      backupVault,\n      ruleName: 'Daily',\n      scheduleExpression: events.Schedule.cron({\n        hour: '5',\n        minute: '0',\n      }),\n      deleteAfter: Duration.days(35),\n    });\n  }\n\n                                               \n  public static weekly(backupVault?: IBackupVault) {\n    return new BackupPlanRule({\n      backupVault,\n      ruleName: 'Weekly',\n      scheduleExpression: events.Schedule.cron({\n        hour: '5',\n        minute: '0',\n        weekDay: 'SAT',\n      }),\n      deleteAfter: Duration.days(30 * 3),\n    });\n  }\n\n                                                                             \n  public static monthly1Year(backupVault?: IBackupVault) {\n    return new BackupPlanRule({\n      backupVault,\n      ruleName: 'Monthly1Year',\n      scheduleExpression: events.Schedule.cron({\n        day: '1',\n        hour: '5',\n        minute: '0',\n      }),\n      moveToColdStorageAfter: Duration.days(30),\n      deleteAfter: Duration.days(365),\n    });\n  }\n\n                                                                              \n  public static monthly5Year(backupVault?: IBackupVault) {\n    return new BackupPlanRule({\n      backupVault,\n      ruleName: 'Monthly5Year',\n      scheduleExpression: events.Schedule.cron({\n        day: '1',\n        hour: '5',\n        minute: '0',\n      }),\n      moveToColdStorageAfter: Duration.days(30 * 3),\n      deleteAfter: Duration.days(365 * 5),\n    });\n  }\n\n                                                                              \n  public static monthly7Year(backupVault?: IBackupVault) {\n    return new BackupPlanRule({\n      backupVault,\n      ruleName: 'Monthly7Year',\n      scheduleExpression: events.Schedule.cron({\n        day: '1',\n        hour: '5',\n        minute: '0',\n      }),\n      moveToColdStorageAfter: Duration.days(30 * 3),\n      deleteAfter: Duration.days(365 * 7),\n    });\n  }\n\n                                             \n  public readonly props: BackupPlanRuleProps\n\n                                     \n  constructor(props: BackupPlanRuleProps) {\n    if (props.deleteAfter && props.moveToColdStorageAfter &&\n      props.deleteAfter.toDays() < props.moveToColdStorageAfter.toDays()) {\n      throw new Error('`deleteAfter` must be greater than `moveToColdStorageAfter`');\n    }\n\n    if (props.scheduleExpression && !/^cron/.test(props.scheduleExpression.expressionString)) {\n      throw new Error('`scheduleExpression` must be of type `cron`');\n    }\n\n    const deleteAfter = (props.enableContinuousBackup && !props.deleteAfter) ? Duration.days(35) : props.deleteAfter;\n\n    if (props.enableContinuousBackup && props.moveToColdStorageAfter) {\n      throw new Error('`moveToColdStorageAfter` must not be specified if `enableContinuousBackup` is enabled');\n    }\n\n    if (props.enableContinuousBackup && props.deleteAfter &&\n      (props.deleteAfter?.toDays() < 1 || props.deleteAfter?.toDays() > 35)) {\n      throw new Error(`'deleteAfter' must be between 1 and 35 days if 'enableContinuousBackup' is enabled, but got ${props.deleteAfter.toHumanString()}`);\n    }\n\n    this.props = {\n      ...props,\n      deleteAfter,\n    };\n\n  }\n}\n"],
  "mappings": "qNAAA,OAAA,QAAA,oBACA,OAAA,QAAA,cA+BA,oBAA2B,CA6EzB,YAAY,MAA0B,WACpC,6EAAI,MAAM,aAAe,MAAM,wBAC7B,MAAM,YAAY,SAAW,MAAM,uBAAuB,SAC1D,KAAM,IAAI,OAAM,+DAGlB,GAAI,MAAM,oBAAsB,CAAC,QAAQ,KAAK,MAAM,mBAAmB,kBACrE,KAAM,IAAI,OAAM,+CAGlB,KAAM,aAAe,MAAM,wBAA0B,CAAC,MAAM,YAAe,OAAA,SAAS,KAAK,IAAM,MAAM,YAErG,GAAI,MAAM,wBAA0B,MAAM,uBACxC,KAAM,IAAI,OAAM,yFAGlB,GAAI,MAAM,wBAA0B,MAAM,aACvC,MAAA,MAAM,eAAW,MAAA,KAAA,OAAA,OAAA,GAAE,UAAW,GAAK,KAAA,MAAM,eAAW,MAAA,KAAA,OAAA,OAAA,GAAE,UAAW,IAClE,KAAM,IAAI,OAAM,+FAA+F,MAAM,YAAY,mBAGnI,KAAK,MAAQ,IACR,MACH,mBAlGU,OAAM,YAA0B,iFACrC,GAAI,gBAAe,CACxB,YACA,SAAU,QACV,mBAAoB,OAAO,SAAS,KAAK,CACvC,KAAM,IACN,OAAQ,MAEV,YAAa,OAAA,SAAS,KAAK,YAKjB,QAAO,YAA0B,iFACtC,GAAI,gBAAe,CACxB,YACA,SAAU,SACV,mBAAoB,OAAO,SAAS,KAAK,CACvC,KAAM,IACN,OAAQ,IACR,QAAS,QAEX,YAAa,OAAA,SAAS,KAAK,GAAK,WAKtB,cAAa,YAA0B,iFAC5C,GAAI,gBAAe,CACxB,YACA,SAAU,eACV,mBAAoB,OAAO,SAAS,KAAK,CACvC,IAAK,IACL,KAAM,IACN,OAAQ,MAEV,uBAAwB,OAAA,SAAS,KAAK,IACtC,YAAa,OAAA,SAAS,KAAK,aAKjB,cAAa,YAA0B,iFAC5C,GAAI,gBAAe,CACxB,YACA,SAAU,eACV,mBAAoB,OAAO,SAAS,KAAK,CACvC,IAAK,IACL,KAAM,IACN,OAAQ,MAEV,uBAAwB,OAAA,SAAS,KAAK,GAAK,GAC3C,YAAa,OAAA,SAAS,KAAK,IAAM,WAKvB,cAAa,YAA0B,iFAC5C,GAAI,gBAAe,CACxB,YACA,SAAU,eACV,mBAAoB,OAAO,SAAS,KAAK,CACvC,IAAK,IACL,KAAM,IACN,OAAQ,MAEV,uBAAwB,OAAA,SAAS,KAAK,GAAK,GAC3C,YAAa,OAAA,SAAS,KAAK,IAAM,MArEvC,QAAA,eAAA",
  "names": []
}
