{
  "version": 3,
  "sources": ["custom-resource.ts"],
  "sourcesContent": ["import * as lambda from '../../aws-lambda';\nimport * as sns from '../../aws-sns';\nimport * as core from '../../core';\nimport { Construct } from 'constructs';\n\n/**\n * Collection of arbitrary properties\n *\n * @deprecated this type has been deprecated in favor of using a key-value type directly\n */\nexport type Properties = {[key: string]: any};\n\n                                                                                                                                                 \nexport interface CustomResourceProviderConfig {\n                                                                                                         \n  readonly serviceToken: string;\n}\n\n                                                                                                                              \nexport interface ICustomResourceProvider {\n                                                                                                                                                                      \n  bind(scope: Construct): CustomResourceProviderConfig;\n}\n\n                                                                                                                              \nexport class CustomResourceProvider implements ICustomResourceProvider {\n                                                                                                                                            \n  public static fromLambda(handler: lambda.IFunction): CustomResourceProvider {\n    return new CustomResourceProvider(handler.functionArn);\n  }\n\n                                                                                     \n  public static fromTopic(topic: sns.ITopic): CustomResourceProvider {\n    return new CustomResourceProvider(topic.topicArn);\n  }\n\n                                                                                \n  public static lambda(handler: lambda.IFunction) { return this.fromLambda(handler); }\n\n                                                                                   \n  public static topic(topic: sns.ITopic) { return this.fromTopic(topic); }\n\n  /**\n   * @param serviceToken the ServiceToken which contains the ARN for this provider.\n   */\n  private constructor(public readonly serviceToken: string) { }\n\n  public bind(_: Construct): CustomResourceProviderConfig {\n    return { serviceToken: this.serviceToken };\n  }\n}\n\n                                                                                                              \nexport interface CustomResourceProps {\nn  readonly provider: ICustomResourceProvider;\n\n                                                                                     \n  readonly properties?: Properties;\n\nn  readonly resourceType?: string;\n\n                                                                                                                                     \n  readonly removalPolicy?: core.RemovalPolicy;\n}\n\n                                                               \nexport class CustomResource extends core.CustomResource {\n  constructor(scope: Construct, id: string, props: CustomResourceProps) {\n    super(scope, id, {\n      pascalCaseProperties: true,\n      properties: props.properties,\n      removalPolicy: props.removalPolicy,\n      resourceType: props.resourceType,\n      serviceToken: core.Lazy.string({ produce: () => props.provider.bind(this).serviceToken }),\n    });\n  }\n}\n"],
  "mappings": "4LAEA,KAAA,QAAA,cAuBA,4BAAmC,CAoBjC,YAAoC,aAAoB,CAApB,KAAA,aAAA,mBAlBtB,YAAW,QAAyB,CAChD,MAAO,IAAI,wBAAuB,QAAQ,mBAI9B,WAAU,MAAiB,CACvC,MAAO,IAAI,wBAAuB,MAAM,gBAI5B,QAAO,QAAyB,CAAI,MAAO,MAAK,WAAW,eAG3D,OAAM,MAAiB,CAAI,MAAO,MAAK,UAAU,OAOxD,KAAK,EAAY,CACtB,MAAO,CAAE,aAAc,KAAK,eAvBhC,QAAA,uBAAA,uJA2CA,4BAAoC,MAAK,cAAc,CACrD,YAAY,MAAkB,GAAY,MAA0B,CAClE,MAAM,MAAO,GAAI,CACf,qBAAsB,GACtB,WAAY,MAAM,WAClB,cAAe,MAAM,cACrB,aAAc,MAAM,aACpB,aAAc,KAAK,KAAK,OAAO,CAAE,QAAS,IAAM,MAAM,SAAS,KAAK,MAAM,kBAPhF,QAAA,eAAA",
  "names": []
}
