{
  "version": 3,
  "sources": ["cloudtrail.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T03:59:07.173Z\",\"fingerprint\":\"ZANme88MGvtoxwUdX7a0Gbq6EaPdP09tKsp4ici2lw0=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                 \nexport interface CfnTrailProps {\n\n                                                                                                                                                                                                                                           \n    readonly isLogging: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly s3BucketName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                              \n    readonly cloudWatchLogsLogGroupArn?: string;\n\n                                                                                                                                                                                                                                                                                    \n    readonly cloudWatchLogsRoleArn?: string;\n\nn    readonly enableLogFileValidation?: boolean | cdk.IResolvable;\n\nn    readonly eventSelectors?: Array<CfnTrail.EventSelectorProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                               \n    readonly includeGlobalServiceEvents?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                     \n    readonly insightSelectors?: Array<CfnTrail.InsightSelectorProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    readonly isMultiRegionTrail?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly isOrganizationTrail?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    readonly kmsKeyId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly s3KeyPrefix?: string;\n\n                                                                                                                                                                                                                                                                                                             \n    readonly snsTopicName?: string;\n\n                                                                                                                                                                                                                            \n    readonly tags?: cdk.CfnTag[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    readonly trailName?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTrailProps`\n *\n * @param properties - the TypeScript properties of a `CfnTrailProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrailPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cloudWatchLogsLogGroupArn', cdk.validateString)(properties.cloudWatchLogsLogGroupArn));\n    errors.collect(cdk.propertyValidator('cloudWatchLogsRoleArn', cdk.validateString)(properties.cloudWatchLogsRoleArn));\n    errors.collect(cdk.propertyValidator('enableLogFileValidation', cdk.validateBoolean)(properties.enableLogFileValidation));\n    errors.collect(cdk.propertyValidator('eventSelectors', cdk.listValidator(CfnTrail_EventSelectorPropertyValidator))(properties.eventSelectors));\n    errors.collect(cdk.propertyValidator('includeGlobalServiceEvents', cdk.validateBoolean)(properties.includeGlobalServiceEvents));\n    errors.collect(cdk.propertyValidator('insightSelectors', cdk.listValidator(CfnTrail_InsightSelectorPropertyValidator))(properties.insightSelectors));\n    errors.collect(cdk.propertyValidator('isLogging', cdk.requiredValidator)(properties.isLogging));\n    errors.collect(cdk.propertyValidator('isLogging', cdk.validateBoolean)(properties.isLogging));\n    errors.collect(cdk.propertyValidator('isMultiRegionTrail', cdk.validateBoolean)(properties.isMultiRegionTrail));\n    errors.collect(cdk.propertyValidator('isOrganizationTrail', cdk.validateBoolean)(properties.isOrganizationTrail));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('s3BucketName', cdk.requiredValidator)(properties.s3BucketName));\n    errors.collect(cdk.propertyValidator('s3BucketName', cdk.validateString)(properties.s3BucketName));\n    errors.collect(cdk.propertyValidator('s3KeyPrefix', cdk.validateString)(properties.s3KeyPrefix));\n    errors.collect(cdk.propertyValidator('snsTopicName', cdk.validateString)(properties.snsTopicName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('trailName', cdk.validateString)(properties.trailName));\n    return errors.wrap('supplied properties not correct for \"CfnTrailProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CloudTrail::Trail` resource\n *\n * @param properties - the TypeScript properties of a `CfnTrailProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CloudTrail::Trail` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrailPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrailPropsValidator(properties).assertSuccess();\n    return {\n        IsLogging: cdk.booleanToCloudFormation(properties.isLogging),\n        S3BucketName: cdk.stringToCloudFormation(properties.s3BucketName),\n        CloudWatchLogsLogGroupArn: cdk.stringToCloudFormation(properties.cloudWatchLogsLogGroupArn),\n        CloudWatchLogsRoleArn: cdk.stringToCloudFormation(properties.cloudWatchLogsRoleArn),\n        EnableLogFileValidation: cdk.booleanToCloudFormation(properties.enableLogFileValidation),\n        EventSelectors: cdk.listMapper(cfnTrailEventSelectorPropertyToCloudFormation)(properties.eventSelectors),\n        IncludeGlobalServiceEvents: cdk.booleanToCloudFormation(properties.includeGlobalServiceEvents),\n        InsightSelectors: cdk.listMapper(cfnTrailInsightSelectorPropertyToCloudFormation)(properties.insightSelectors),\n        IsMultiRegionTrail: cdk.booleanToCloudFormation(properties.isMultiRegionTrail),\n        IsOrganizationTrail: cdk.booleanToCloudFormation(properties.isOrganizationTrail),\n        KMSKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        S3KeyPrefix: cdk.stringToCloudFormation(properties.s3KeyPrefix),\n        SnsTopicName: cdk.stringToCloudFormation(properties.snsTopicName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        TrailName: cdk.stringToCloudFormation(properties.trailName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrailPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrailProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrailProps>();\n    ret.addPropertyResult('isLogging', 'IsLogging', cfn_parse.FromCloudFormation.getBoolean(properties.IsLogging));\n    ret.addPropertyResult('s3BucketName', 'S3BucketName', cfn_parse.FromCloudFormation.getString(properties.S3BucketName));\n    ret.addPropertyResult('cloudWatchLogsLogGroupArn', 'CloudWatchLogsLogGroupArn', properties.CloudWatchLogsLogGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsLogGroupArn) : undefined);\n    ret.addPropertyResult('cloudWatchLogsRoleArn', 'CloudWatchLogsRoleArn', properties.CloudWatchLogsRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsRoleArn) : undefined);\n    ret.addPropertyResult('enableLogFileValidation', 'EnableLogFileValidation', properties.EnableLogFileValidation != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableLogFileValidation) : undefined);\n    ret.addPropertyResult('eventSelectors', 'EventSelectors', properties.EventSelectors != null ? cfn_parse.FromCloudFormation.getArray(CfnTrailEventSelectorPropertyFromCloudFormation)(properties.EventSelectors) : undefined);\n    ret.addPropertyResult('includeGlobalServiceEvents', 'IncludeGlobalServiceEvents', properties.IncludeGlobalServiceEvents != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeGlobalServiceEvents) : undefined);\n    ret.addPropertyResult('insightSelectors', 'InsightSelectors', properties.InsightSelectors != null ? cfn_parse.FromCloudFormation.getArray(CfnTrailInsightSelectorPropertyFromCloudFormation)(properties.InsightSelectors) : undefined);\n    ret.addPropertyResult('isMultiRegionTrail', 'IsMultiRegionTrail', properties.IsMultiRegionTrail != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsMultiRegionTrail) : undefined);\n    ret.addPropertyResult('isOrganizationTrail', 'IsOrganizationTrail', properties.IsOrganizationTrail != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsOrganizationTrail) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KMSKeyId', properties.KMSKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KMSKeyId) : undefined);\n    ret.addPropertyResult('s3KeyPrefix', 'S3KeyPrefix', properties.S3KeyPrefix != null ? cfn_parse.FromCloudFormation.getString(properties.S3KeyPrefix) : undefined);\n    ret.addPropertyResult('snsTopicName', 'SnsTopicName', properties.SnsTopicName != null ? cfn_parse.FromCloudFormation.getString(properties.SnsTopicName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('trailName', 'TrailName', properties.TrailName != null ? cfn_parse.FromCloudFormation.getString(properties.TrailName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                \nexport class CfnTrail extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::CloudTrail::Trail\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTrail {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTrailPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTrail(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                  \n    public readonly attrArn: string;\n\n                                                                                                                                                                                                                       \n    public readonly attrSnsTopicArn: string;\n\n                                                                                                                                                                                                                                           \n    public isLogging: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                      \n    public s3BucketName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                              \n    public cloudWatchLogsLogGroupArn: string | undefined;\n\n                                                                                                                                                                                                                                                                                    \n    public cloudWatchLogsRoleArn: string | undefined;\n\nn    public enableLogFileValidation: boolean | cdk.IResolvable | undefined;\n\nn    public eventSelectors: Array<CfnTrail.EventSelectorProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                               \n    public includeGlobalServiceEvents: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                     \n    public insightSelectors: Array<CfnTrail.InsightSelectorProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\nn    public isMultiRegionTrail: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public isOrganizationTrail: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    public kmsKeyId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public s3KeyPrefix: string | undefined;\n\n                                                                                                                                                                                                                                                                                                             \n    public snsTopicName: string | undefined;\n\n                                                                                                                                                                                                                            \n    public readonly tags: cdk.TagManager;\n\nn    public trailName: string | undefined;\n\n                                                                                                                                                                                                                            \n    constructor(scope: constructs.Construct, id: string, props: CfnTrailProps) {\n        super(scope, id, { type: CfnTrail.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'isLogging', this);\n        cdk.requireProperty(props, 's3BucketName', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrSnsTopicArn = cdk.Token.asString(this.getAtt('SnsTopicArn'));\n\n        this.isLogging = props.isLogging;\n        this.s3BucketName = props.s3BucketName;\n        this.cloudWatchLogsLogGroupArn = props.cloudWatchLogsLogGroupArn;\n        this.cloudWatchLogsRoleArn = props.cloudWatchLogsRoleArn;\n        this.enableLogFileValidation = props.enableLogFileValidation;\n        this.eventSelectors = props.eventSelectors;\n        this.includeGlobalServiceEvents = props.includeGlobalServiceEvents;\n        this.insightSelectors = props.insightSelectors;\n        this.isMultiRegionTrail = props.isMultiRegionTrail;\n        this.isOrganizationTrail = props.isOrganizationTrail;\n        this.kmsKeyId = props.kmsKeyId;\n        this.s3KeyPrefix = props.s3KeyPrefix;\n        this.snsTopicName = props.snsTopicName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::CloudTrail::Trail\", props.tags, { tagPropertyName: 'tags' });\n        this.trailName = props.trailName;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTrail.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            isLogging: this.isLogging,\n            s3BucketName: this.s3BucketName,\n            cloudWatchLogsLogGroupArn: this.cloudWatchLogsLogGroupArn,\n            cloudWatchLogsRoleArn: this.cloudWatchLogsRoleArn,\n            enableLogFileValidation: this.enableLogFileValidation,\n            eventSelectors: this.eventSelectors,\n            includeGlobalServiceEvents: this.includeGlobalServiceEvents,\n            insightSelectors: this.insightSelectors,\n            isMultiRegionTrail: this.isMultiRegionTrail,\n            isOrganizationTrail: this.isOrganizationTrail,\n            kmsKeyId: this.kmsKeyId,\n            s3KeyPrefix: this.s3KeyPrefix,\n            snsTopicName: this.snsTopicName,\n            tags: this.tags.renderTags(),\n            trailName: this.trailName,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTrailPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnTrail {\nn    export interface DataResourceProperty {\nn        readonly type: string;\nn        readonly values?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DataResourceProperty`\n *\n * @param properties - the TypeScript properties of a `DataResourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrail_DataResourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('values', cdk.listValidator(cdk.validateString))(properties.values));\n    return errors.wrap('supplied properties not correct for \"DataResourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.DataResource` resource\n *\n * @param properties - the TypeScript properties of a `DataResourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.DataResource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrailDataResourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrail_DataResourcePropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n        Values: cdk.listMapper(cdk.stringToCloudFormation)(properties.values),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrailDataResourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrail.DataResourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrail.DataResourceProperty>();\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('values', 'Values', properties.Values != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Values) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTrail {\nn    export interface EventSelectorProperty {\nn        readonly dataResources?: Array<CfnTrail.DataResourceProperty | cdk.IResolvable> | cdk.IResolvable;\nn        readonly excludeManagementEventSources?: string[];\nn        readonly includeManagementEvents?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly readWriteType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventSelectorProperty`\n *\n * @param properties - the TypeScript properties of a `EventSelectorProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrail_EventSelectorPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dataResources', cdk.listValidator(CfnTrail_DataResourcePropertyValidator))(properties.dataResources));\n    errors.collect(cdk.propertyValidator('excludeManagementEventSources', cdk.listValidator(cdk.validateString))(properties.excludeManagementEventSources));\n    errors.collect(cdk.propertyValidator('includeManagementEvents', cdk.validateBoolean)(properties.includeManagementEvents));\n    errors.collect(cdk.propertyValidator('readWriteType', cdk.validateString)(properties.readWriteType));\n    return errors.wrap('supplied properties not correct for \"EventSelectorProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.EventSelector` resource\n *\n * @param properties - the TypeScript properties of a `EventSelectorProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.EventSelector` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrailEventSelectorPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrail_EventSelectorPropertyValidator(properties).assertSuccess();\n    return {\n        DataResources: cdk.listMapper(cfnTrailDataResourcePropertyToCloudFormation)(properties.dataResources),\n        ExcludeManagementEventSources: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludeManagementEventSources),\n        IncludeManagementEvents: cdk.booleanToCloudFormation(properties.includeManagementEvents),\n        ReadWriteType: cdk.stringToCloudFormation(properties.readWriteType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrailEventSelectorPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrail.EventSelectorProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrail.EventSelectorProperty>();\n    ret.addPropertyResult('dataResources', 'DataResources', properties.DataResources != null ? cfn_parse.FromCloudFormation.getArray(CfnTrailDataResourcePropertyFromCloudFormation)(properties.DataResources) : undefined);\n    ret.addPropertyResult('excludeManagementEventSources', 'ExcludeManagementEventSources', properties.ExcludeManagementEventSources != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludeManagementEventSources) : undefined);\n    ret.addPropertyResult('includeManagementEvents', 'IncludeManagementEvents', properties.IncludeManagementEvents != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeManagementEvents) : undefined);\n    ret.addPropertyResult('readWriteType', 'ReadWriteType', properties.ReadWriteType != null ? cfn_parse.FromCloudFormation.getString(properties.ReadWriteType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTrail {\n                                                                                                                                                                                                                                                                                              \n    export interface InsightSelectorProperty {\n                                                                                                                                                                                                                                                                                                                                                  \n        readonly insightType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InsightSelectorProperty`\n *\n * @param properties - the TypeScript properties of a `InsightSelectorProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrail_InsightSelectorPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('insightType', cdk.validateString)(properties.insightType));\n    return errors.wrap('supplied properties not correct for \"InsightSelectorProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.InsightSelector` resource\n *\n * @param properties - the TypeScript properties of a `InsightSelectorProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CloudTrail::Trail.InsightSelector` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrailInsightSelectorPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrail_InsightSelectorPropertyValidator(properties).assertSuccess();\n    return {\n        InsightType: cdk.stringToCloudFormation(properties.insightType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrailInsightSelectorPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrail.InsightSelectorProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrail.InsightSelectorProperty>();\n    ret.addPropertyResult('insightType', 'InsightType', properties.InsightType != null ? cfn_parse.FromCloudFormation.getString(properties.InsightType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
