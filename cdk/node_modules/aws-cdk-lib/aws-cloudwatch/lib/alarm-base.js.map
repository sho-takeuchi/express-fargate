{
  "version": 3,
  "sources": ["alarm-base.ts"],
  "sourcesContent": ["import { IResource, Resource } from '../../core';\nimport { IAlarmAction } from './alarm-action';\n\n                                    \nexport interface IAlarmRule {\n\n                                                                                                               \n  renderAlarmRule(): string;\n\n}\n\n                                        \nexport interface IAlarm extends IAlarmRule, IResource {\n                                                                                                         \n  readonly alarmArn: string;\n\n                                                       \n  readonly alarmName: string;\n}\n\n                                                                 \nexport abstract class AlarmBase extends Resource implements IAlarm {\n\n                           \n  public abstract readonly alarmArn: string;\n  public abstract readonly alarmName: string;\n\n  protected alarmActionArns?: string[];\n  protected insufficientDataActionArns?: string[];\n  protected okActionArns?: string[];\n\n                                                            \n  public renderAlarmRule(): string {\n    return `ALARM(\"${this.alarmArn}\")`;\n  }\n\n                                                                                                                                    \n  public addAlarmAction(...actions: IAlarmAction[]) {\n    if (this.alarmActionArns === undefined) {\n      this.alarmActionArns = [];\n    }\n\n    this.alarmActionArns.push(...actions.map(a => a.bind(this, this).alarmActionArn));\n  }\n\n                                                                                                                                                                     \n  public addInsufficientDataAction(...actions: IAlarmAction[]) {\n    if (this.insufficientDataActionArns === undefined) {\n      this.insufficientDataActionArns = [];\n    }\n\n    this.insufficientDataActionArns.push(...actions.map(a => a.bind(this, this).alarmActionArn));\n  }\n\n                                                                                                                                                                         \n  public addOkAction(...actions: IAlarmAction[]) {\n    if (this.okActionArns === undefined) {\n      this.okActionArns = [];\n    }\n\n    this.okActionArns.push(...actions.map(a => a.bind(this, this).alarmActionArn));\n  }\n\n}\n"],
  "mappings": "gNAAA,OAAA,QAAA,cAqBA,uBAAwC,QAAA,QAAQ,CAWvC,iBAAe,CACpB,MAAO,UAAU,KAAK,aAIjB,kBAAkB,QAAuB,0EAC1C,KAAK,kBAAoB,QAC3B,MAAK,gBAAkB,IAGzB,KAAK,gBAAgB,KAAK,GAAG,QAAQ,IAAI,GAAK,EAAE,KAAK,KAAM,MAAM,iBAI5D,6BAA6B,QAAuB,0EACrD,KAAK,6BAA+B,QACtC,MAAK,2BAA6B,IAGpC,KAAK,2BAA2B,KAAK,GAAG,QAAQ,IAAI,GAAK,EAAE,KAAK,KAAM,MAAM,iBAIvE,eAAe,QAAuB,0EACvC,KAAK,eAAiB,QACxB,MAAK,aAAe,IAGtB,KAAK,aAAa,KAAK,GAAG,QAAQ,IAAI,GAAK,EAAE,KAAK,KAAM,MAAM,kBAvClE,QAAA,UAAA",
  "names": []
}
