{
  "version": 3,
  "sources": ["composite-alarm.ts"],
  "sourcesContent": ["import { ArnFormat, Lazy, Names, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { AlarmBase, IAlarm, IAlarmRule } from './alarm-base';\nimport { CfnCompositeAlarm } from './cloudwatch.generated';\n\n                                                    \nexport interface CompositeAlarmProps {\n\n                                                                                       \n  readonly actionsEnabled?: boolean;\n\n                                                                            \n  readonly alarmDescription?: string;\n\n                                                                                  \n  readonly compositeAlarmName?: string;\n\n                                                                                                                            \n  readonly alarmRule: IAlarmRule;\n\n}\n\n                                                 \nexport class CompositeAlarm extends AlarmBase {\n\n                                                                                                                                                                                                                                              \n  public static fromCompositeAlarmName(scope: Construct, id: string, compositeAlarmName: string): IAlarm {\n    const stack = Stack.of(scope);\n\n    return this.fromCompositeAlarmArn(scope, id, stack.formatArn({\n      service: 'cloudwatch',\n      resource: 'alarm',\n      resourceName: compositeAlarmName,\n    }));\n  }\n\n                                                                                                                                                                                                                                                                                                                    \n  public static fromCompositeAlarmArn(scope: Construct, id: string, compositeAlarmArn: string): IAlarm {\n    class Import extends AlarmBase implements IAlarm {\n      public readonly alarmArn = compositeAlarmArn;\n      public readonly alarmName = Stack.of(scope).splitArn(compositeAlarmArn, ArnFormat.SLASH_RESOURCE_NAME).resourceName!;\n    }\n    return new Import(scope, id);\n  }\n\n                                                       \n  public readonly alarmArn: string;\n\n                                                         \n  public readonly alarmName: string;\n\n  private readonly alarmRule: string;\n\n  constructor(scope: Construct, id: string, props: CompositeAlarmProps) {\n    super(scope, id, {\n      physicalName: props.compositeAlarmName ?? Lazy.string({ produce: () => this.generateUniqueId() }),\n    });\n\n    if (props.alarmRule.renderAlarmRule().length > 10240) {\n      throw new Error('Alarm Rule expression cannot be greater than 10240 characters, please reduce the conditions in the Alarm Rule');\n    }\n\n    this.alarmRule = props.alarmRule.renderAlarmRule();\n\n    const alarm = new CfnCompositeAlarm(this, 'Resource', {\n      alarmName: this.physicalName,\n      alarmRule: this.alarmRule,\n      alarmDescription: props.alarmDescription,\n      actionsEnabled: props.actionsEnabled,\n      alarmActions: Lazy.list({ produce: () => this.alarmActionArns }),\n      insufficientDataActions: Lazy.list({ produce: (() => this.insufficientDataActionArns) }),\n      okActions: Lazy.list({ produce: () => this.okActionArns }),\n    });\n\n    this.alarmName = this.getResourceNameAttribute(alarm.ref);\n    this.alarmArn = this.getResourceArnAttribute(alarm.attrArn, {\n      service: 'cloudwatch',\n      resource: 'alarm',\n      resourceName: this.physicalName,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n\n  }\n\n  private generateUniqueId(): string {\n    const name = Names.uniqueId(this);\n    if (name.length > 240) {\n      return name.substring(0, 120) + name.substring(name.length - 120);\n    }\n    return name;\n  }\n\n}\n"],
  "mappings": "qNAAA,OAAA,QAAA,cAEA,aAAA,QAAA,gBACA,uBAAA,QAAA,0BAoBA,4BAAoC,cAAA,SAAS,CA8B3C,YAAY,MAAkB,GAAY,MAA0B,QAClE,MAAM,MAAO,GAAI,CACf,aAAY,IAAE,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,OAAA,KAAK,OAAO,CAAE,QAAS,IAAM,KAAK,uBAG9E,iFAAI,MAAM,UAAU,kBAAkB,OAAS,MAC7C,KAAM,IAAI,OAAM,iHAGlB,KAAK,UAAY,MAAM,UAAU,kBAEjC,KAAM,OAAQ,GAAI,wBAAA,kBAAkB,KAAM,WAAY,CACpD,UAAW,KAAK,aAChB,UAAW,KAAK,UAChB,iBAAkB,MAAM,iBACxB,eAAgB,MAAM,eACtB,aAAc,OAAA,KAAK,KAAK,CAAE,QAAS,IAAM,KAAK,kBAC9C,wBAAyB,OAAA,KAAK,KAAK,CAAE,QAAU,IAAM,KAAK,6BAC1D,UAAW,OAAA,KAAK,KAAK,CAAE,QAAS,IAAM,KAAK,iBAG7C,KAAK,UAAY,KAAK,yBAAyB,MAAM,KACrD,KAAK,SAAW,KAAK,wBAAwB,MAAM,QAAS,CAC1D,QAAS,aACT,SAAU,QACV,aAAc,KAAK,aACnB,UAAW,OAAA,UAAU,4BArDX,wBAAuB,MAAkB,GAAY,mBAA0B,CAC3F,KAAM,OAAQ,OAAA,MAAM,GAAG,OAEvB,MAAO,MAAK,sBAAsB,MAAO,GAAI,MAAM,UAAU,CAC3D,QAAS,aACT,SAAU,QACV,aAAc,4BAKJ,uBAAsB,MAAkB,GAAY,kBAAyB,CACzF,oBAAqB,cAAA,SAAS,CAA9B,aAAA,qBACkB,KAAA,SAAW,kBACX,KAAA,UAAY,OAAA,MAAM,GAAG,OAAO,SAAS,kBAAmB,OAAA,UAAU,qBAAqB,cAEzG,MAAO,IAAI,QAAO,MAAO,IA0CnB,kBAAgB,CACtB,KAAM,MAAO,OAAA,MAAM,SAAS,MAC5B,MAAI,MAAK,OAAS,IACT,KAAK,UAAU,EAAG,KAAO,KAAK,UAAU,KAAK,OAAS,KAExD,MAlEX,QAAA,eAAA",
  "names": []
}
