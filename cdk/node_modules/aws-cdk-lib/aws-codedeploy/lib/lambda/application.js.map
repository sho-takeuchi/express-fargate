{
  "version": 3,
  "sources": ["application.ts"],
  "sourcesContent": ["import { ArnFormat, IResource, Resource } from '../../../core';\nimport { Construct } from 'constructs';\nimport { CfnApplication } from '../codedeploy.generated';\nimport { arnForApplication } from '../utils';\n\n                                                                                                                                                                                                                                                                                                                                                                                                        \nexport interface ILambdaApplication extends IResource {\n                   \n  readonly applicationArn: string;\n\n                   \n  readonly applicationName: string;\n}\n\n                                                                 \nexport interface LambdaApplicationProps {\n                                                                                                                                        \n  readonly applicationName?: string;\n}\n\n                                                                                                                        \nexport class LambdaApplication extends Resource implements ILambdaApplication {\n                                                                                                                                                                                                                                                                                                                                                                                \n  public static fromLambdaApplicationName(scope: Construct, id: string, lambdaApplicationName: string): ILambdaApplication {\n    class Import extends Resource implements ILambdaApplication {\n      public applicationArn = arnForApplication(lambdaApplicationName);\n      public applicationName = lambdaApplicationName;\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly applicationArn: string;\n  public readonly applicationName: string;\n\n  constructor(scope: Construct, id: string, props: LambdaApplicationProps = {}) {\n    super(scope, id, {\n      physicalName: props.applicationName,\n    });\n\n    const resource = new CfnApplication(this, 'Resource', {\n      applicationName: this.physicalName,\n      computePlatform: 'Lambda',\n    });\n\n    this.applicationName = this.getResourceNameAttribute(resource.ref);\n    this.applicationArn = this.getResourceArnAttribute(arnForApplication(resource.ref), {\n      service: 'codedeploy',\n      resource: 'application',\n      resourceName: this.physicalName,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n  }\n}\n"],
  "mappings": "2NAAA,OAAA,QAAA,iBAEA,uBAAA,QAAA,2BACA,QAAA,QAAA,YAkBA,+BAAuC,QAAA,QAAQ,CAc7C,YAAY,MAAkB,GAAY,MAAgC,GAAE,CAC1E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,mGAGtB,KAAM,UAAW,GAAI,wBAAA,eAAe,KAAM,WAAY,CACpD,gBAAiB,KAAK,aACtB,gBAAiB,WAGnB,KAAK,gBAAkB,KAAK,yBAAyB,SAAS,KAC9D,KAAK,eAAiB,KAAK,wBAAwB,QAAA,kBAAkB,SAAS,KAAM,CAClF,QAAS,aACT,SAAU,cACV,aAAc,KAAK,aACnB,UAAW,OAAA,UAAU,4BA3BX,2BAA0B,MAAkB,GAAY,sBAA6B,CACjG,oBAAqB,QAAA,QAAQ,CAA7B,aAAA,qBACS,KAAA,eAAiB,QAAA,kBAAkB,uBACnC,KAAA,gBAAkB,uBAG3B,MAAO,IAAI,QAAO,MAAO,KAR7B,QAAA,kBAAA",
  "names": []
}
