{
  "version": 3,
  "sources": ["codegurureviewer.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:29.123Z\",\"fingerprint\":\"pDL2/FQJ48+8sWZE51iN5JwrEUPBxOQTGjfeB3WB6bA=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                                       \nexport interface CfnRepositoryAssociationProps {\n\n                                                                                                                                                                                                                                             \n    readonly name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly type: string;\n\n                                                                                                                                                                                                                                                                                                                                                         \n    readonly bucketName?: string;\n\nn    readonly connectionArn?: string;\n\nn    readonly owner?: string;\n\nn    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRepositoryAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnRepositoryAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRepositoryAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucketName', cdk.validateString)(properties.bucketName));\n    errors.collect(cdk.propertyValidator('connectionArn', cdk.validateString)(properties.connectionArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('owner', cdk.validateString)(properties.owner));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnRepositoryAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CodeGuruReviewer::RepositoryAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnRepositoryAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CodeGuruReviewer::RepositoryAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRepositoryAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRepositoryAssociationPropsValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Type: cdk.stringToCloudFormation(properties.type),\n        BucketName: cdk.stringToCloudFormation(properties.bucketName),\n        ConnectionArn: cdk.stringToCloudFormation(properties.connectionArn),\n        Owner: cdk.stringToCloudFormation(properties.owner),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRepositoryAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRepositoryAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRepositoryAssociationProps>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('bucketName', 'BucketName', properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined);\n    ret.addPropertyResult('connectionArn', 'ConnectionArn', properties.ConnectionArn != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectionArn) : undefined);\n    ret.addPropertyResult('owner', 'Owner', properties.Owner != null ? cfn_parse.FromCloudFormation.getString(properties.Owner) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \nexport class CfnRepositoryAssociation extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::CodeGuruReviewer::RepositoryAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRepositoryAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRepositoryAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRepositoryAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                \n    public readonly attrAssociationArn: string;\n\n                                                                                                                                                                                                                                             \n    public name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                    \n    public type: string;\n\n                                                                                                                                                                                                                                                                                                                                                         \n    public bucketName: string | undefined;\n\nn    public connectionArn: string | undefined;\n\nn    public owner: string | undefined;\n\nn    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                                  \n    constructor(scope: constructs.Construct, id: string, props: CfnRepositoryAssociationProps) {\n        super(scope, id, { type: CfnRepositoryAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'type', this);\n        this.attrAssociationArn = cdk.Token.asString(this.getAtt('AssociationArn'));\n\n        this.name = props.name;\n        this.type = props.type;\n        this.bucketName = props.bucketName;\n        this.connectionArn = props.connectionArn;\n        this.owner = props.owner;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::CodeGuruReviewer::RepositoryAssociation\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRepositoryAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            name: this.name,\n            type: this.type,\n            bucketName: this.bucketName,\n            connectionArn: this.connectionArn,\n            owner: this.owner,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRepositoryAssociationPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
