{
  "version": 3,
  "sources": ["ecs-deploy-action.ts"],
  "sourcesContent": ["import * as codedeploy from '../../../aws-codedeploy';\nimport * as codepipeline from '../../../aws-codepipeline';\nimport * as iam from '../../../aws-iam';\nimport { Lazy } from '../../../core';\nimport { Action } from '../action';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                                                                                          \nexport interface CodeDeployEcsContainerImageInput {\n                                                                                                                                                                                                                                                                                                                        \n  readonly input: codepipeline.Artifact;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n  readonly taskDefinitionPlaceholder?: string;\n}\n\n                                                                                                                      \nexport interface CodeDeployEcsDeployActionProps extends codepipeline.CommonAwsActionProps {\n                                                                  \n  readonly deploymentGroup: codedeploy.IEcsDeploymentGroup;\n\nn  readonly taskDefinitionTemplateInput?: codepipeline.Artifact;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n  readonly taskDefinitionTemplateFile?: codepipeline.ArtifactPath;\n\nn  readonly appSpecTemplateInput?: codepipeline.Artifact;\n\nn  readonly appSpecTemplateFile?: codepipeline.ArtifactPath;\n\n                                                                                                                                                                                                                                                                                                                          \n  readonly containerImageInputs?: CodeDeployEcsContainerImageInput[];\n}\n\nexport class CodeDeployEcsDeployAction extends Action {\n  private readonly actionProps: CodeDeployEcsDeployActionProps;\n\n  constructor(props: CodeDeployEcsDeployActionProps) {\n    const inputs: codepipeline.Artifact[] = [];\n    inputs.push(determineTaskDefinitionArtifact(props));\n    inputs.push(determineAppSpecArtifact(props));\n\n    if (props.containerImageInputs) {\n      if (props.containerImageInputs.length > 4) {\n        throw new Error(`Action cannot have more than 4 container image inputs, got: ${props.containerImageInputs.length}`);\n      }\n\n      for (const imageInput of props.containerImageInputs) {\n        inputs.push(imageInput.input);\n      }\n    }\n\n    super({\n      ...props,\n      resource: props.deploymentGroup,\n      category: codepipeline.ActionCategory.DEPLOY,\n      provider: 'CodeDeployToECS',\n      artifactBounds: { minInputs: 1, maxInputs: 5, minOutputs: 0, maxOutputs: 0 },\n      inputs,\n    });\n\n    this.actionProps = props;\n  }\n\n  protected bound(_scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // permissions, based on:\n    // https://docs.aws.amazon.com/codedeploy/latest/userguide/auth-and-access-control-permissions-reference.html\n\n    options.role.addToPolicy(new iam.PolicyStatement({\n      resources: [this.actionProps.deploymentGroup.application.applicationArn],\n      actions: ['codedeploy:GetApplication', 'codedeploy:GetApplicationRevision', 'codedeploy:RegisterApplicationRevision'],\n    }));\n\n    options.role.addToPolicy(new iam.PolicyStatement({\n      resources: [this.actionProps.deploymentGroup.deploymentGroupArn],\n      actions: ['codedeploy:CreateDeployment', 'codedeploy:GetDeployment'],\n    }));\n\n    options.role.addToPolicy(new iam.PolicyStatement({\n      resources: [this.actionProps.deploymentGroup.deploymentConfig.deploymentConfigArn],\n      actions: ['codedeploy:GetDeploymentConfig'],\n    }));\n\n    // Allow action to register the task definition template file with ECS\n    options.role.addToPolicy(new iam.PolicyStatement({\n      resources: ['*'],\n      actions: ['ecs:RegisterTaskDefinition'],\n    }));\n\n    // Allow passing any roles specified in the task definition template file to ECS\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['iam:PassRole'],\n      resources: ['*'],\n      conditions: {\n        StringEqualsIfExists: {\n          'iam:PassedToService': [\n            'ecs-tasks.amazonaws.com',\n          ],\n        },\n      },\n    }));\n\n    // the Action's Role needs to read from the Bucket to get artifacts\n    options.bucket.grantRead(options.role);\n\n    const taskDefinitionTemplateArtifact = determineTaskDefinitionArtifact(this.actionProps);\n    const appSpecTemplateArtifact = determineAppSpecArtifact(this.actionProps);\n    const actionConfig: codepipeline.ActionConfig = {\n      configuration: {\n        ApplicationName: this.actionProps.deploymentGroup.application.applicationName,\n        DeploymentGroupName: this.actionProps.deploymentGroup.deploymentGroupName,\n\n        TaskDefinitionTemplateArtifact: Lazy.string({ produce: () => taskDefinitionTemplateArtifact.artifactName }),\n        TaskDefinitionTemplatePath: this.actionProps.taskDefinitionTemplateFile\n          ? this.actionProps.taskDefinitionTemplateFile.fileName\n          : 'taskdef.json',\n\n        AppSpecTemplateArtifact: Lazy.string({ produce: () => appSpecTemplateArtifact.artifactName }),\n        AppSpecTemplatePath: this.actionProps.appSpecTemplateFile\n          ? this.actionProps.appSpecTemplateFile.fileName\n          : 'appspec.yaml',\n      },\n    };\n\n    if (this.actionProps.containerImageInputs) {\n      for (let i = 1; i <= this.actionProps.containerImageInputs.length; i++) {\n        const imageInput = this.actionProps.containerImageInputs[i - 1];\n        actionConfig.configuration[`Image${i}ArtifactName`] = Lazy.string({ produce: () => imageInput.input.artifactName });\n        actionConfig.configuration[`Image${i}ContainerName`] = imageInput.taskDefinitionPlaceholder\n          ? imageInput.taskDefinitionPlaceholder\n          : 'IMAGE';\n      }\n    }\n\n    return actionConfig;\n  }\n}\n\nfunction determineTaskDefinitionArtifact(props: CodeDeployEcsDeployActionProps): codepipeline.Artifact {\n  if (props.taskDefinitionTemplateFile && props.taskDefinitionTemplateInput) {\n    throw new Error(\"Exactly one of 'taskDefinitionTemplateInput' or 'taskDefinitionTemplateFile' can be provided in the ECS CodeDeploy Action\");\n  }\n  if (props.taskDefinitionTemplateFile) {\n    return props.taskDefinitionTemplateFile.artifact;\n  }\n  if (props.taskDefinitionTemplateInput) {\n    return props.taskDefinitionTemplateInput;\n  }\n  throw new Error(\"Specifying one of 'taskDefinitionTemplateInput' or 'taskDefinitionTemplateFile' is required for the ECS CodeDeploy Action\");\n}\n\nfunction determineAppSpecArtifact(props: CodeDeployEcsDeployActionProps): codepipeline.Artifact {\n  if (props.appSpecTemplateFile && props.appSpecTemplateInput) {\n    throw new Error(\"Exactly one of 'appSpecTemplateInput' or 'appSpecTemplateFile' can be provided in the ECS CodeDeploy Action\");\n  }\n  if (props.appSpecTemplateFile) {\n    return props.appSpecTemplateFile.artifact;\n  }\n  if (props.appSpecTemplateInput) {\n    return props.appSpecTemplateInput;\n  }\n  throw new Error(\"Specifying one of 'appSpecTemplateInput' or 'appSpecTemplateFile' is required for the ECS CodeDeploy Action\");\n}\n"],
  "mappings": "mOACA,aAAA,QAAA,6BACA,IAAA,QAAA,oBACA,OAAA,QAAA,iBACA,SAAA,QAAA,aAoCA,uCAA+C,UAAA,MAAM,CAGnD,YAAY,MAAqC,oGAC/C,KAAM,QAAkC,GAIxC,GAHA,OAAO,KAAK,gCAAgC,QAC5C,OAAO,KAAK,yBAAyB,QAEjC,MAAM,qBAAsB,CAC9B,GAAI,MAAM,qBAAqB,OAAS,EACtC,KAAM,IAAI,OAAM,+DAA+D,MAAM,qBAAqB,UAG5G,SAAW,cAAc,OAAM,qBAC7B,OAAO,KAAK,WAAW,OAI3B,MAAM,IACD,MACH,SAAU,MAAM,gBAChB,SAAU,aAAa,eAAe,OACtC,SAAU,kBACV,eAAgB,CAAE,UAAW,EAAG,UAAW,EAAG,WAAY,EAAG,WAAY,GACzE,SAGF,KAAK,YAAc,MAGX,MAAM,OAAmB,OAA6B,QAAuC,qJAKrG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,UAAW,CAAC,KAAK,YAAY,gBAAgB,YAAY,gBACzD,QAAS,CAAC,4BAA6B,oCAAqC,6CAG9E,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,UAAW,CAAC,KAAK,YAAY,gBAAgB,oBAC7C,QAAS,CAAC,8BAA+B,+BAG3C,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,UAAW,CAAC,KAAK,YAAY,gBAAgB,iBAAiB,qBAC9D,QAAS,CAAC,qCAIZ,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,UAAW,CAAC,KACZ,QAAS,CAAC,iCAIZ,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,gBACV,UAAW,CAAC,KACZ,WAAY,CACV,qBAAsB,CACpB,sBAAuB,CACrB,gCAOR,QAAQ,OAAO,UAAU,QAAQ,MAEjC,KAAM,gCAAiC,gCAAgC,KAAK,aACtE,wBAA0B,yBAAyB,KAAK,aACxD,aAA0C,CAC9C,cAAe,CACb,gBAAiB,KAAK,YAAY,gBAAgB,YAAY,gBAC9D,oBAAqB,KAAK,YAAY,gBAAgB,oBAEtD,+BAAgC,OAAA,KAAK,OAAO,CAAE,QAAS,IAAM,+BAA+B,eAC5F,2BAA4B,KAAK,YAAY,2BACzC,KAAK,YAAY,2BAA2B,SAC5C,eAEJ,wBAAyB,OAAA,KAAK,OAAO,CAAE,QAAS,IAAM,wBAAwB,eAC9E,oBAAqB,KAAK,YAAY,oBAClC,KAAK,YAAY,oBAAoB,SACrC,iBAIR,GAAI,KAAK,YAAY,qBACnB,OAAS,GAAI,EAAG,GAAK,KAAK,YAAY,qBAAqB,OAAQ,IAAK,CACtE,KAAM,YAAa,KAAK,YAAY,qBAAqB,EAAI,GAC7D,aAAa,cAAc,QAAQ,iBAAmB,OAAA,KAAK,OAAO,CAAE,QAAS,IAAM,WAAW,MAAM,eACpG,aAAa,cAAc,QAAQ,kBAAoB,WAAW,0BAC9D,WAAW,0BACX,QAIR,MAAO,eArGX,QAAA,0BAAA,sKAyGA,yCAAyC,MAAqC,CAC5E,GAAI,MAAM,4BAA8B,MAAM,4BAC5C,KAAM,IAAI,OAAM,6HAElB,GAAI,MAAM,2BACR,MAAO,OAAM,2BAA2B,SAE1C,GAAI,MAAM,4BACR,MAAO,OAAM,4BAEf,KAAM,IAAI,OAAM,6HAGlB,kCAAkC,MAAqC,CACrE,GAAI,MAAM,qBAAuB,MAAM,qBACrC,KAAM,IAAI,OAAM,+GAElB,GAAI,MAAM,oBACR,MAAO,OAAM,oBAAoB,SAEnC,GAAI,MAAM,qBACR,MAAO,OAAM,qBAEf,KAAM,IAAI,OAAM",
  "names": []
}
