{
  "version": 3,
  "sources": ["source-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as ecr from '../../../aws-ecr';\nimport * as targets from '../../../aws-events-targets';\nimport * as iam from '../../../aws-iam';\nimport { Names } from '../../../core';\nimport { Action } from '../action';\nimport { sourceArtifactBounds } from '../common';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                                       \nexport interface EcrSourceVariables {\n                                                                                                     \n  readonly registryId: string;\n\n                                                                     \n  readonly repositoryName: string;\n\n                                                                                     \n  readonly imageDigest: string;\n\n                                             \n  readonly imageTag: string;\n\n                                                      \n  readonly imageUri: string;\n}\n\n                                                              \nexport interface EcrSourceActionProps extends codepipeline.CommonAwsActionProps {\n                                                                                                                                                           \n  readonly imageTag?: string;\n\n                \n  readonly output: codepipeline.Artifact;\n\n                                                                 \n  readonly repository: ecr.IRepository;\n}\n\n                                                                                                                                                                                                                                        \nexport class EcrSourceAction extends Action {\n  private readonly props: EcrSourceActionProps;\n\n  constructor(props: EcrSourceActionProps) {\n    super({\n      ...props,\n      resource: props.repository,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'ECR',\n      artifactBounds: sourceArtifactBounds(),\n      outputs: [props.output],\n    });\n\n    this.props = props;\n  }\n\n                                              \n  public get variables(): EcrSourceVariables {\n    return {\n      registryId: this.variableExpression('RegistryId'),\n      repositoryName: this.variableExpression('RepositoryName'),\n      imageDigest: this.variableExpression('ImageDigest'),\n      imageTag: this.variableExpression('ImageTag'),\n      imageUri: this.variableExpression('ImageURI'),\n    };\n  }\n\n  protected bound(_scope: Construct, stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['ecr:DescribeImages'],\n      resources: [this.props.repository.repositoryArn],\n    }));\n\n    this.props.repository.onCloudTrailImagePushed(Names.nodeUniqueId(stage.pipeline.node) + 'SourceEventRule', {\n      target: new targets.CodePipeline(stage.pipeline),\n      imageTag: this.props.imageTag === '' ? undefined : (this.props.imageTag ?? 'latest'),\n    });\n\n    // the Action Role also needs to write to the Pipeline's bucket\n    options.bucket.grantWrite(options.role);\n\n    return {\n      configuration: {\n        RepositoryName: this.props.repository.repositoryName,\n        ImageTag: this.props.imageTag ? this.props.imageTag : undefined, // `''` is falsy in JS/TS\n      },\n    };\n  }\n}\n"],
  "mappings": "yNAAA,aAAA,QAAA,6BAEA,QAAA,QAAA,+BACA,IAAA,QAAA,oBACA,OAAA,QAAA,iBACA,SAAA,QAAA,aACA,SAAA,QAAA,aAqCA,6BAAqC,UAAA,MAAM,CAGzC,YAAY,MAA2B,CACrC,MAAM,IACD,MACH,SAAU,MAAM,WAChB,SAAU,aAAa,eAAe,OACtC,SAAU,MACV,eAAgB,SAAA,uBAChB,QAAS,CAAC,MAAM,mGAGlB,KAAK,MAAQ,SAIJ,YAAS,CAClB,MAAO,CACL,WAAY,KAAK,mBAAmB,cACpC,eAAgB,KAAK,mBAAmB,kBACxC,YAAa,KAAK,mBAAmB,eACrC,SAAU,KAAK,mBAAmB,YAClC,SAAU,KAAK,mBAAmB,aAI5B,MAAM,OAAmB,MAA4B,QAAuC,kKAEpG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,sBACV,UAAW,CAAC,KAAK,MAAM,WAAW,kBAGpC,KAAK,MAAM,WAAW,wBAAwB,OAAA,MAAM,aAAa,MAAM,SAAS,MAAQ,kBAAmB,CACzG,OAAQ,GAAI,SAAQ,aAAa,MAAM,UACvC,SAAU,KAAK,MAAM,WAAa,GAAK,OAAY,IAAC,KAAK,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,WAI7E,QAAQ,OAAO,WAAW,QAAQ,MAE3B,CACL,cAAe,CACb,eAAgB,KAAK,MAAM,WAAW,eACtC,SAAU,KAAK,MAAM,SAAW,KAAK,MAAM,SAAW,UA7C9D,QAAA,gBAAA",
  "names": []
}
