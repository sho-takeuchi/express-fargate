{
  "version": 3,
  "sources": ["deploy-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as ecs from '../../../aws-ecs';\nimport * as iam from '../../../aws-iam';\nimport { Duration } from '../../../core';\nimport { Action } from '../action';\nimport { deployArtifactBounds } from '../common';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                              \nexport interface EcsDeployActionProps extends codepipeline.CommonAwsActionProps {\nn  readonly input?: codepipeline.Artifact;\n\nn  readonly imageFile?: codepipeline.ArtifactPath;\n\n                                           \n  readonly service: ecs.IBaseService;\n\n                                                                                                                                                                                                                     \n  readonly deploymentTimeout?: Duration;\n}\n\n                                                        \nexport class EcsDeployAction extends Action {\n  private readonly props: EcsDeployActionProps;\n  private readonly deploymentTimeout?: number\n\n  constructor(props: EcsDeployActionProps) {\n    super({\n      ...props,\n      category: codepipeline.ActionCategory.DEPLOY,\n      provider: 'ECS',\n      artifactBounds: deployArtifactBounds(),\n      inputs: [determineInputArtifact(props)],\n      resource: props.service,\n    });\n\n    const deploymentTimeout = props.deploymentTimeout?.toMinutes({ integral: true });\n    if (deploymentTimeout !== undefined && (deploymentTimeout < 1 || deploymentTimeout > 60)) {\n      throw new Error(`Deployment timeout must be between 1 and 60 minutes, got: ${deploymentTimeout}`);\n    }\n\n    this.props = props;\n    this.deploymentTimeout = deploymentTimeout;\n  }\n\n  protected bound(_scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // permissions based on CodePipeline documentation:\n    // https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-custom-role.html#how-to-update-role-new-services\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: [\n        'ecs:DescribeServices',\n        'ecs:DescribeTaskDefinition',\n        'ecs:DescribeTasks',\n        'ecs:ListTasks',\n        'ecs:RegisterTaskDefinition',\n        'ecs:UpdateService',\n      ],\n      resources: ['*'],\n    }));\n\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['iam:PassRole'],\n      resources: ['*'],\n      conditions: {\n        StringEqualsIfExists: {\n          'iam:PassedToService': [\n            'ec2.amazonaws.com',\n            'ecs-tasks.amazonaws.com',\n          ],\n        },\n      },\n    }));\n\n    options.bucket.grantRead(options.role);\n\n    return {\n      configuration: {\n        ClusterName: this.props.service.cluster.clusterName,\n        ServiceName: this.props.service.serviceName,\n        FileName: this.props.imageFile?.fileName,\n        DeploymentTimeout: this.deploymentTimeout,\n      },\n    };\n  }\n}\n\nfunction determineInputArtifact(props: EcsDeployActionProps): codepipeline.Artifact {\n  if (props.imageFile && props.input) {\n    throw new Error(\"Exactly one of 'input' or 'imageFile' can be provided in the ECS deploy Action\");\n  }\n  if (props.imageFile) {\n    return props.imageFile.artifact;\n  }\n  if (props.input) {\n    return props.input;\n  }\n  throw new Error(\"Specifying one of 'input' or 'imageFile' is required for the ECS deploy Action\");\n}\n"],
  "mappings": "yNAAA,aAAA,QAAA,6BAEA,IAAA,QAAA,oBAEA,SAAA,QAAA,aACA,SAAA,QAAA,aAsBA,6BAAqC,UAAA,MAAM,CAIzC,YAAY,MAA2B,QACrC,MAAM,IACD,MACH,SAAU,aAAa,eAAe,OACtC,SAAU,MACV,eAAgB,SAAA,uBAChB,OAAQ,CAAC,uBAAuB,QAChC,SAAU,MAAM,mGAGlB,KAAM,mBAAiB,IAAG,MAAM,qBAAiB,MAAA,KAAA,OAAA,OAAA,GAAE,UAAU,CAAE,SAAU,KACzE,GAAI,oBAAsB,QAAc,mBAAoB,GAAK,kBAAoB,IACnF,KAAM,IAAI,OAAM,6DAA6D,qBAG/E,KAAK,MAAQ,MACb,KAAK,kBAAoB,kBAGjB,MAAM,OAAmB,OAA6B,QAAuC,mKAIrG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CACP,uBACA,6BACA,oBACA,gBACA,6BACA,qBAEF,UAAW,CAAC,QAGd,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,gBACV,UAAW,CAAC,KACZ,WAAY,CACV,qBAAsB,CACpB,sBAAuB,CACrB,oBACA,gCAMR,QAAQ,OAAO,UAAU,QAAQ,MAE1B,CACL,cAAe,CACb,YAAa,KAAK,MAAM,QAAQ,QAAQ,YACxC,YAAa,KAAK,MAAM,QAAQ,YAChC,SAAQ,IAAE,KAAK,MAAM,aAAS,MAAA,KAAA,OAAA,OAAA,GAAE,SAChC,kBAAmB,KAAK,qBA3DhC,QAAA,gBAAA,wIAiEA,gCAAgC,MAA2B,CACzD,GAAI,MAAM,WAAa,MAAM,MAC3B,KAAM,IAAI,OAAM,kFAElB,GAAI,MAAM,UACR,MAAO,OAAM,UAAU,SAEzB,GAAI,MAAM,MACR,MAAO,OAAM,MAEf,KAAM,IAAI,OAAM",
  "names": []
}
