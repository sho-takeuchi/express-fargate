{
  "version": 3,
  "sources": ["source-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport { SecretValue } from '../../../core';\nimport { Action } from '../action';\nimport { sourceArtifactBounds } from '../common';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                                  \nexport enum GitHubTrigger {\n  NONE = 'None',\n  POLL = 'Poll',\n  WEBHOOK = 'WebHook',\n}\n\n                                                                      \nexport interface GitHubSourceVariables {\n                                                          \n  readonly repositoryName: string;\n                                                   \n  readonly branchName: string;\n                                                                                                   \n  readonly authorDate: string;\n                                                                                                    \n  readonly committerDate: string;\n                                                                          \n  readonly commitId: string;\n                                                                        \n  readonly commitMessage: string;\n                                                                               \n  readonly commitUrl: string;\n}\n\n                                                                                          \nexport interface GitHubSourceActionProps extends codepipeline.CommonActionProps {\n                \n  readonly output: codepipeline.Artifact;\n\n                                                            \n  readonly owner: string;\n\n                                                            \n  readonly repo: string;\n\n                                                               \n  readonly branch?: string;\n\nn  readonly oauthToken: SecretValue;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n  readonly trigger?: GitHubTrigger;\n}\n\n                                                          \nexport class GitHubSourceAction extends Action {\n  private readonly props: GitHubSourceActionProps;\n\n  constructor(props: GitHubSourceActionProps) {\n    super({\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      owner: 'ThirdParty',\n      provider: 'GitHub',\n      artifactBounds: sourceArtifactBounds(),\n      outputs: [props.output],\n    });\n\n    this.props = props;\n  }\n\n                                              \n  public get variables(): GitHubSourceVariables {\n    return {\n      repositoryName: this.variableExpression('RepositoryName'),\n      branchName: this.variableExpression('BranchName'),\n      authorDate: this.variableExpression('AuthorDate'),\n      committerDate: this.variableExpression('CommitterDate'),\n      commitId: this.variableExpression('CommitId'),\n      commitMessage: this.variableExpression('CommitMessage'),\n      commitUrl: this.variableExpression('CommitUrl'),\n    };\n  }\n\n  protected bound(scope: Construct, stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    if (!this.props.trigger || this.props.trigger === GitHubTrigger.WEBHOOK) {\n      new codepipeline.CfnWebhook(scope, 'WebhookResource', {\n        authentication: 'GITHUB_HMAC',\n        authenticationConfiguration: {\n          secretToken: this.props.oauthToken.toString(),\n        },\n        filters: [\n          {\n            jsonPath: '$.ref',\n            matchEquals: 'refs/heads/{Branch}',\n          },\n        ],\n        targetAction: this.actionProperties.actionName,\n        targetPipeline: stage.pipeline.pipelineName,\n        targetPipelineVersion: 1,\n        registerWithThirdParty: true,\n      });\n    }\n\n    return {\n      configuration: {\n        Owner: this.props.owner,\n        Repo: this.props.repo,\n        Branch: this.props.branch || 'master',\n        OAuthToken: this.props.oauthToken.toString(),\n        PollForSourceChanges: this.props.trigger === GitHubTrigger.POLL,\n      },\n    };\n  }\n}\n"],
  "mappings": "kPAAA,aAAA,QAAA,6BAEA,SAAA,QAAA,aACA,SAAA,QAAA,aAOA,GAAY,eAAZ,AAAA,UAAY,eAAa,CACvB,eAAA,KAAA,OACA,eAAA,KAAA,OACA,eAAA,QAAA,YAHU,cAAA,QAAA,eAAA,SAAA,cAAa,KA8CzB,gCAAwC,UAAA,MAAM,CAG5C,YAAY,MAA8B,CACxC,MAAM,IACD,MACH,SAAU,aAAa,eAAe,OACtC,MAAO,aACP,SAAU,SACV,eAAgB,SAAA,uBAChB,QAAS,CAAC,MAAM,sGAGlB,KAAK,MAAQ,SAIJ,YAAS,CAClB,MAAO,CACL,eAAgB,KAAK,mBAAmB,kBACxC,WAAY,KAAK,mBAAmB,cACpC,WAAY,KAAK,mBAAmB,cACpC,cAAe,KAAK,mBAAmB,iBACvC,SAAU,KAAK,mBAAmB,YAClC,cAAe,KAAK,mBAAmB,iBACvC,UAAW,KAAK,mBAAmB,cAI7B,MAAM,MAAkB,MAA4B,SAAwC,4JAEhG,EAAC,KAAK,MAAM,SAAW,KAAK,MAAM,UAAY,cAAc,UAC9D,GAAI,cAAa,WAAW,MAAO,kBAAmB,CACpD,eAAgB,cAChB,4BAA6B,CAC3B,YAAa,KAAK,MAAM,WAAW,YAErC,QAAS,CACP,CACE,SAAU,QACV,YAAa,wBAGjB,aAAc,KAAK,iBAAiB,WACpC,eAAgB,MAAM,SAAS,aAC/B,sBAAuB,EACvB,uBAAwB,KAIrB,CACL,cAAe,CACb,MAAO,KAAK,MAAM,MAClB,KAAM,KAAK,MAAM,KACjB,OAAQ,KAAK,MAAM,QAAU,SAC7B,WAAY,KAAK,MAAM,WAAW,WAClC,qBAAsB,KAAK,MAAM,UAAY,cAAc,QAxDnE,QAAA,mBAAA",
  "names": []
}
