{
  "version": 3,
  "sources": ["invoke-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as iam from '../../../aws-iam';\nimport * as lambda from '../../../aws-lambda';\nimport { Stack } from '../../../core';\nimport { Action } from '../action';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n                                                                                                       \nexport interface LambdaInvokeActionProps extends codepipeline.CommonAwsActionProps {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n  readonly inputs?: codepipeline.Artifact[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                      \n  readonly outputs?: codepipeline.Artifact[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n  readonly userParameters?: { [key: string]: any };\n\n                                                                                                                                                                                                                                                                                                                         \n  readonly userParametersString?: string;\n\n                                               \n  readonly lambda: lambda.IFunction;\n}\n\n                                                                                                                                                                                          \nexport class LambdaInvokeAction extends Action {\n  private readonly props: LambdaInvokeActionProps;\n\n  constructor(props: LambdaInvokeActionProps) {\n    super({\n      ...props,\n      resource: props.lambda,\n      category: codepipeline.ActionCategory.INVOKE,\n      provider: 'Lambda',\n      artifactBounds: {\n        minInputs: 0,\n        maxInputs: 5,\n        minOutputs: 0,\n        maxOutputs: 5,\n      },\n    });\n\n    this.props = props;\n\n    if (props.userParameters && props.userParametersString) {\n      throw new Error('Only one of userParameters or userParametersString can be specified');\n    }\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n  public variable(variableName: string): string {\n    return this.variableExpression(variableName);\n  }\n\n  protected bound(scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // allow pipeline to list functions\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['lambda:ListFunctions'],\n      resources: ['*'],\n    }));\n\n    // allow pipeline to invoke this lambda functionn\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['lambda:InvokeFunction'],\n      resources: [this.props.lambda.functionArn],\n    }));\n\n    // allow the Role access to the Bucket, if there are any inputs/outputs\n    if ((this.actionProperties.inputs || []).length > 0) {\n      options.bucket.grantRead(options.role);\n    }\n    if ((this.actionProperties.outputs || []).length > 0) {\n      options.bucket.grantWrite(options.role);\n    }\n\n    // allow lambda to put job results for this pipeline\n    // CodePipeline requires this to be granted to '*'\n    // (the Pipeline ARN will not be enough)\n    this.props.lambda.addToRolePolicy(new iam.PolicyStatement({\n      resources: ['*'],\n      actions: ['codepipeline:PutJobSuccessResult', 'codepipeline:PutJobFailureResult'],\n    }));\n\n    return {\n      configuration: {\n        FunctionName: this.props.lambda.functionName,\n        UserParameters: this.props.userParametersString ?? Stack.of(scope).toJsonString(this.props.userParameters),\n      },\n    };\n  }\n}\n"],
  "mappings": "4NAAA,aAAA,QAAA,6BACA,IAAA,QAAA,oBAEA,OAAA,QAAA,iBACA,SAAA,QAAA,aAyBA,gCAAwC,UAAA,MAAM,CAG5C,YAAY,MAA8B,CACxC,MAAM,IACD,MACH,SAAU,MAAM,OAChB,SAAU,aAAa,eAAe,OACtC,SAAU,SACV,eAAgB,CACd,UAAW,EACX,UAAW,EACX,WAAY,EACZ,WAAY,KAMhB,+FAFA,KAAK,MAAQ,MAET,MAAM,gBAAkB,MAAM,qBAChC,KAAM,IAAI,OAAM,uEAKb,SAAS,aAAoB,CAClC,MAAO,MAAK,mBAAmB,cAGvB,MAAM,MAAkB,OAA6B,QAAuC,mKAGpG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,wBACV,UAAW,CAAC,QAId,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,yBACV,UAAW,CAAC,KAAK,MAAM,OAAO,gBAI3B,MAAK,iBAAiB,QAAU,IAAI,OAAS,GAChD,QAAQ,OAAO,UAAU,QAAQ,MAE9B,MAAK,iBAAiB,SAAW,IAAI,OAAS,GACjD,QAAQ,OAAO,WAAW,QAAQ,MAMpC,KAAK,MAAM,OAAO,gBAAgB,GAAI,KAAI,gBAAgB,CACxD,UAAW,CAAC,KACZ,QAAS,CAAC,mCAAoC,uCAGzC,CACL,cAAe,CACb,aAAc,KAAK,MAAM,OAAO,aAChC,eAAc,IAAE,KAAK,MAAM,wBAAoB,MAAA,KAAA,OAAA,GAAI,OAAA,MAAM,GAAG,OAAO,aAAa,KAAK,MAAM,mBA9DnG,QAAA,mBAAA",
  "names": []
}
