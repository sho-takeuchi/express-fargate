{
  "version": 3,
  "sources": ["user-pool-resource-server.ts"],
  "sourcesContent": ["import { IResource, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnUserPoolResourceServer } from './cognito.generated';\nimport { IUserPool } from './user-pool';\n\n                                                         \nexport interface IUserPoolResourceServer extends IResource {\n                                                   \n  readonly userPoolResourceServerId: string;\n}\n\n                                                  \nexport interface ResourceServerScopeProps {\n                                      \n  readonly scopeName: string;\n\n                                            \n  readonly scopeDescription: string;\n}\n\n                                     \nexport class ResourceServerScope {\n                                      \n  public readonly scopeName: string;\n\n                                            \n  public readonly scopeDescription: string;\n\n  constructor(props: ResourceServerScopeProps) {\n    this.scopeName = props.scopeName;\n    this.scopeDescription = props.scopeDescription;\n  }\n}\n\n\n                                                     \nexport interface UserPoolResourceServerOptions {\n                                                                             \n  readonly identifier: string;\n\n                                                                                              \n  readonly userPoolResourceServerName?: string;\n\n                                                                     \n  readonly scopes?: ResourceServerScope[];\n}\n\n                                                              \nexport interface UserPoolResourceServerProps extends UserPoolResourceServerOptions {\n                                                             \n  readonly userPool: IUserPool;\n}\n\n                                                       \nexport class UserPoolResourceServer extends Resource implements IUserPoolResourceServer {\n                                                                 \n  public static fromUserPoolResourceServerId(scope: Construct, id: string, userPoolResourceServerId: string): IUserPoolResourceServer {\n    class Import extends Resource implements IUserPoolResourceServer {\n      public readonly userPoolResourceServerId = userPoolResourceServerId;\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly userPoolResourceServerId: string;\n\n  constructor(scope: Construct, id: string, props: UserPoolResourceServerProps) {\n    super(scope, id, {\n      physicalName: props.identifier,\n    });\n\n    const resource = new CfnUserPoolResourceServer(this, 'Resource', {\n      identifier: this.physicalName,\n      name: props.userPoolResourceServerName ?? this.physicalName,\n      scopes: props.scopes,\n      userPoolId: props.userPool.userPoolId,\n    });\n\n    this.userPoolResourceServerId = resource.ref;\n  }\n}\n"],
  "mappings": "4PAAA,OAAA,QAAA,cAEA,oBAAA,QAAA,uBAmBA,yBAAgC,CAO9B,YAAY,MAA+B,iFACzC,KAAK,UAAY,MAAM,UACvB,KAAK,iBAAmB,MAAM,kBATlC,QAAA,oBAAA,uIAiCA,oCAA4C,QAAA,QAAQ,CAYlD,YAAY,MAAkB,GAAY,MAAkC,QAC1E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,gGAGtB,KAAM,UAAW,GAAI,qBAAA,0BAA0B,KAAM,WAAY,CAC/D,WAAY,KAAK,aACjB,KAAI,IAAE,MAAM,8BAA0B,MAAA,KAAA,OAAA,GAAI,KAAK,aAC/C,OAAQ,MAAM,OACd,WAAY,MAAM,SAAS,aAG7B,KAAK,yBAA2B,SAAS,UAtB7B,8BAA6B,MAAkB,GAAY,yBAAgC,CACvG,oBAAqB,QAAA,QAAQ,CAA7B,aAAA,qBACkB,KAAA,yBAA2B,0BAG7C,MAAO,IAAI,QAAO,MAAO,KAP7B,QAAA,uBAAA",
  "names": []
}
