{
  "version": 3,
  "sources": ["directoryservice.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:29.580Z\",\"fingerprint\":\"EIK916/2KbBDoYePaLg3nkmddU/6O4guZKkgF7V9o8M=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                   \nexport interface CfnMicrosoftADProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly name: string;\n\nn    readonly password: string;\n\n                                                                                                                                                                                                                                                                             \n    readonly vpcSettings: CfnMicrosoftAD.VpcSettingsProperty | cdk.IResolvable;\n\nn    readonly createAlias?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                  \n    readonly edition?: string;\n\nn    readonly enableSso?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly shortName?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnMicrosoftADProps`\n *\n * @param properties - the TypeScript properties of a `CfnMicrosoftADProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnMicrosoftADPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('createAlias', cdk.validateBoolean)(properties.createAlias));\n    errors.collect(cdk.propertyValidator('edition', cdk.validateString)(properties.edition));\n    errors.collect(cdk.propertyValidator('enableSso', cdk.validateBoolean)(properties.enableSso));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('password', cdk.requiredValidator)(properties.password));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('shortName', cdk.validateString)(properties.shortName));\n    errors.collect(cdk.propertyValidator('vpcSettings', cdk.requiredValidator)(properties.vpcSettings));\n    errors.collect(cdk.propertyValidator('vpcSettings', CfnMicrosoftAD_VpcSettingsPropertyValidator)(properties.vpcSettings));\n    return errors.wrap('supplied properties not correct for \"CfnMicrosoftADProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DirectoryService::MicrosoftAD` resource\n *\n * @param properties - the TypeScript properties of a `CfnMicrosoftADProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DirectoryService::MicrosoftAD` resource.\n */\n// @ts-ignore TS6133\nfunction cfnMicrosoftADPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnMicrosoftADPropsValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Password: cdk.stringToCloudFormation(properties.password),\n        VpcSettings: cfnMicrosoftADVpcSettingsPropertyToCloudFormation(properties.vpcSettings),\n        CreateAlias: cdk.booleanToCloudFormation(properties.createAlias),\n        Edition: cdk.stringToCloudFormation(properties.edition),\n        EnableSso: cdk.booleanToCloudFormation(properties.enableSso),\n        ShortName: cdk.stringToCloudFormation(properties.shortName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnMicrosoftADPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnMicrosoftADProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnMicrosoftADProps>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('password', 'Password', cfn_parse.FromCloudFormation.getString(properties.Password));\n    ret.addPropertyResult('vpcSettings', 'VpcSettings', CfnMicrosoftADVpcSettingsPropertyFromCloudFormation(properties.VpcSettings));\n    ret.addPropertyResult('createAlias', 'CreateAlias', properties.CreateAlias != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CreateAlias) : undefined);\n    ret.addPropertyResult('edition', 'Edition', properties.Edition != null ? cfn_parse.FromCloudFormation.getString(properties.Edition) : undefined);\n    ret.addPropertyResult('enableSso', 'EnableSso', properties.EnableSso != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableSso) : undefined);\n    ret.addPropertyResult('shortName', 'ShortName', properties.ShortName != null ? cfn_parse.FromCloudFormation.getString(properties.ShortName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnMicrosoftAD extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DirectoryService::MicrosoftAD\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnMicrosoftAD {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnMicrosoftADPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnMicrosoftAD(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                               \n    public readonly attrAlias: string;\n\n                                                                                                                                                                     \n    public readonly attrDnsIpAddresses: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                               \n    public name: string;\n\nn    public password: string;\n\n                                                                                                                                                                                                                                                                             \n    public vpcSettings: CfnMicrosoftAD.VpcSettingsProperty | cdk.IResolvable;\n\nn    public createAlias: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                  \n    public edition: string | undefined;\n\nn    public enableSso: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                  \n    public shortName: string | undefined;\n\n                                                                                                                                                                                                                                        \n    constructor(scope: constructs.Construct, id: string, props: CfnMicrosoftADProps) {\n        super(scope, id, { type: CfnMicrosoftAD.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'password', this);\n        cdk.requireProperty(props, 'vpcSettings', this);\n        this.attrAlias = cdk.Token.asString(this.getAtt('Alias'));\n        this.attrDnsIpAddresses = cdk.Token.asList(this.getAtt('DnsIpAddresses'));\n\n        this.name = props.name;\n        this.password = props.password;\n        this.vpcSettings = props.vpcSettings;\n        this.createAlias = props.createAlias;\n        this.edition = props.edition;\n        this.enableSso = props.enableSso;\n        this.shortName = props.shortName;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnMicrosoftAD.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            name: this.name,\n            password: this.password,\n            vpcSettings: this.vpcSettings,\n            createAlias: this.createAlias,\n            edition: this.edition,\n            enableSso: this.enableSso,\n            shortName: this.shortName,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnMicrosoftADPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnMicrosoftAD {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n    export interface VpcSettingsProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n        readonly subnetIds: string[];\n                                                                                                                                                                                                                                                                                                        \n        readonly vpcId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VpcSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `VpcSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnMicrosoftAD_VpcSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"VpcSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DirectoryService::MicrosoftAD.VpcSettings` resource\n *\n * @param properties - the TypeScript properties of a `VpcSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DirectoryService::MicrosoftAD.VpcSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnMicrosoftADVpcSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnMicrosoftAD_VpcSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnMicrosoftADVpcSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnMicrosoftAD.VpcSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnMicrosoftAD.VpcSettingsProperty>();\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                             \nexport interface CfnSimpleADProps {\n\n                                                                                                                                                                                                                                                                \n    readonly name: string;\n\nn    readonly password: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly size: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly vpcSettings: CfnSimpleAD.VpcSettingsProperty | cdk.IResolvable;\n\nn    readonly createAlias?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                               \n    readonly description?: string;\n\n                                                                                                                                                                                                                                                                                                                                   \n    readonly enableSso?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                \n    readonly shortName?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSimpleADProps`\n *\n * @param properties - the TypeScript properties of a `CfnSimpleADProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleADPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('createAlias', cdk.validateBoolean)(properties.createAlias));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('enableSso', cdk.validateBoolean)(properties.enableSso));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('password', cdk.requiredValidator)(properties.password));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('shortName', cdk.validateString)(properties.shortName));\n    errors.collect(cdk.propertyValidator('size', cdk.requiredValidator)(properties.size));\n    errors.collect(cdk.propertyValidator('size', cdk.validateString)(properties.size));\n    errors.collect(cdk.propertyValidator('vpcSettings', cdk.requiredValidator)(properties.vpcSettings));\n    errors.collect(cdk.propertyValidator('vpcSettings', CfnSimpleAD_VpcSettingsPropertyValidator)(properties.vpcSettings));\n    return errors.wrap('supplied properties not correct for \"CfnSimpleADProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DirectoryService::SimpleAD` resource\n *\n * @param properties - the TypeScript properties of a `CfnSimpleADProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DirectoryService::SimpleAD` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleADPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleADPropsValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Password: cdk.stringToCloudFormation(properties.password),\n        Size: cdk.stringToCloudFormation(properties.size),\n        VpcSettings: cfnSimpleADVpcSettingsPropertyToCloudFormation(properties.vpcSettings),\n        CreateAlias: cdk.booleanToCloudFormation(properties.createAlias),\n        Description: cdk.stringToCloudFormation(properties.description),\n        EnableSso: cdk.booleanToCloudFormation(properties.enableSso),\n        ShortName: cdk.stringToCloudFormation(properties.shortName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleADPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleADProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleADProps>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('password', 'Password', cfn_parse.FromCloudFormation.getString(properties.Password));\n    ret.addPropertyResult('size', 'Size', cfn_parse.FromCloudFormation.getString(properties.Size));\n    ret.addPropertyResult('vpcSettings', 'VpcSettings', CfnSimpleADVpcSettingsPropertyFromCloudFormation(properties.VpcSettings));\n    ret.addPropertyResult('createAlias', 'CreateAlias', properties.CreateAlias != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CreateAlias) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('enableSso', 'EnableSso', properties.EnableSso != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableSso) : undefined);\n    ret.addPropertyResult('shortName', 'ShortName', properties.ShortName != null ? cfn_parse.FromCloudFormation.getString(properties.ShortName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnSimpleAD extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DirectoryService::SimpleAD\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSimpleAD {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSimpleADPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSimpleAD(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                               \n    public readonly attrAlias: string;\n\n                                                                                                                                                                            \n    public readonly attrDnsIpAddresses: string[];\n\n                                                                                                                                                                                                                                                                \n    public name: string;\n\nn    public password: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    public size: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    public vpcSettings: CfnSimpleAD.VpcSettingsProperty | cdk.IResolvable;\n\nn    public createAlias: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                               \n    public description: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                   \n    public enableSso: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                \n    public shortName: string | undefined;\n\n                                                                                                                                                                                                                                     \n    constructor(scope: constructs.Construct, id: string, props: CfnSimpleADProps) {\n        super(scope, id, { type: CfnSimpleAD.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'password', this);\n        cdk.requireProperty(props, 'size', this);\n        cdk.requireProperty(props, 'vpcSettings', this);\n        this.attrAlias = cdk.Token.asString(this.getAtt('Alias'));\n        this.attrDnsIpAddresses = cdk.Token.asList(this.getAtt('DnsIpAddresses'));\n\n        this.name = props.name;\n        this.password = props.password;\n        this.size = props.size;\n        this.vpcSettings = props.vpcSettings;\n        this.createAlias = props.createAlias;\n        this.description = props.description;\n        this.enableSso = props.enableSso;\n        this.shortName = props.shortName;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSimpleAD.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            name: this.name,\n            password: this.password,\n            size: this.size,\n            vpcSettings: this.vpcSettings,\n            createAlias: this.createAlias,\n            description: this.description,\n            enableSso: this.enableSso,\n            shortName: this.shortName,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSimpleADPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSimpleAD {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    export interface VpcSettingsProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly subnetIds: string[];\n                                                                                                                                                                                                                                                                                                  \n        readonly vpcId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VpcSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `VpcSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleAD_VpcSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"VpcSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DirectoryService::SimpleAD.VpcSettings` resource\n *\n * @param properties - the TypeScript properties of a `VpcSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DirectoryService::SimpleAD.VpcSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleADVpcSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleAD_VpcSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleADVpcSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleAD.VpcSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleAD.VpcSettingsProperty>();\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
