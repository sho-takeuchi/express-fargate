{
  "version": 3,
  "sources": ["client-vpn-authorization-rule.ts"],
  "sourcesContent": ["import { Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IClientVpnEndpoint } from './client-vpn-endpoint-types';\nimport { CfnClientVpnAuthorizationRule } from './ec2.generated';\n\n                                                   \nexport interface ClientVpnAuthorizationRuleOptions {\n                                                                                                                    \n  readonly cidr: string;\n\n                                                                                                                                                                                 \n  readonly groupId?: string;\n\n                                                                                                   \n  readonly description?: string;\n}\n\n                                                      \nexport interface ClientVpnAuthorizationRuleProps extends ClientVpnAuthorizationRuleOptions {\n                                                                                                              \n  readonly clientVpnEndpoint?: IClientVpnEndpoint;\n\n                                                                                                                                                               \n  readonly clientVpnEndoint?: IClientVpnEndpoint;\n}\n\n                                          \nexport class ClientVpnAuthorizationRule extends Resource {\n  constructor(scope: Construct, id: string, props: ClientVpnAuthorizationRuleProps) {\n    if (!props.clientVpnEndoint && !props.clientVpnEndpoint) {\n      throw new Error(\n        'ClientVpnAuthorizationRule: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified',\n      );\n    }\n    if (props.clientVpnEndoint && props.clientVpnEndpoint) {\n      throw new Error(\n        'ClientVpnAuthorizationRule: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified' +\n          ', but not both',\n      );\n    }\n    const clientVpnEndpoint = props.clientVpnEndoint || props.clientVpnEndpoint;\n    super(scope, id);\n    new CfnClientVpnAuthorizationRule(this, 'Resource', {\n      clientVpnEndpointId: clientVpnEndpoint!.endpointId,\n      targetNetworkCidr: props.cidr,\n      accessGroupId: props.groupId,\n      authorizeAllGroups: !props.groupId,\n      description: props.description,\n    });\n  }\n}\n"],
  "mappings": "iOAAA,OAAA,QAAA,cAGA,gBAAA,QAAA,mBAwBA,wCAAgD,QAAA,QAAQ,CACtD,YAAY,MAAkB,GAAY,MAAsC,CAC9E,sFAAI,CAAC,MAAM,kBAAoB,CAAC,MAAM,kBACpC,KAAM,IAAI,OACR,2GAGJ,GAAI,MAAM,kBAAoB,MAAM,kBAClC,KAAM,IAAI,OACR,yHAIJ,KAAM,mBAAoB,MAAM,kBAAoB,MAAM,kBAC1D,MAAM,MAAO,IACb,GAAI,iBAAA,8BAA8B,KAAM,WAAY,CAClD,oBAAqB,kBAAmB,WACxC,kBAAmB,MAAM,KACzB,cAAe,MAAM,QACrB,mBAAoB,CAAC,MAAM,QAC3B,YAAa,MAAM,eApBzB,QAAA,2BAAA",
  "names": []
}
