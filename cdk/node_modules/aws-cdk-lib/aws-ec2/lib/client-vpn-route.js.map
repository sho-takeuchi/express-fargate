{
  "version": 3,
  "sources": ["client-vpn-route.ts"],
  "sourcesContent": ["import { Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IClientVpnEndpoint } from './client-vpn-endpoint-types';\nimport { CfnClientVpnRoute } from './ec2.generated';\nimport { ISubnet } from './vpc';\n\n                                       \nexport interface ClientVpnRouteOptions {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly cidr: string;\n\n                                                                                                   \n  readonly description?: string;\n\n                                         \n  readonly target: ClientVpnRouteTarget;\n}\n\n                                        \nexport abstract class ClientVpnRouteTarget {\n                                                                                                                          \n  public static subnet(subnet: ISubnet): ClientVpnRouteTarget {\n    return { subnetId: subnet.subnetId };\n  }\n\n                              \n  public static local(): ClientVpnRouteTarget {\n    return { subnetId: 'local' };\n  }\n\n                      \n  public abstract readonly subnetId: string;\n}\n\n                                          \nexport interface ClientVpnRouteProps extends ClientVpnRouteOptions {\n\n                                                                                                               \n  readonly clientVpnEndpoint?: IClientVpnEndpoint;\n                                                                                                                                                                 \n  readonly clientVpnEndoint?: IClientVpnEndpoint;\n}\n\n                             \nexport class ClientVpnRoute extends Resource {\n  constructor(scope: Construct, id: string, props: ClientVpnRouteProps) {\n    if (!props.clientVpnEndoint && !props.clientVpnEndpoint) {\n      throw new Error(\n        'ClientVpnRoute: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified',\n      );\n    }\n    if (props.clientVpnEndoint && props.clientVpnEndpoint) {\n      throw new Error(\n        'ClientVpnRoute: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified' +\n          ', but not both',\n      );\n    }\n    const clientVpnEndpoint = props.clientVpnEndoint || props.clientVpnEndpoint;\n    super(scope, id);\n    const route = new CfnClientVpnRoute(this, 'Resource', {\n      clientVpnEndpointId: clientVpnEndpoint!.endpointId,\n      description: props.description,\n      destinationCidrBlock: props.cidr,\n      targetVpcSubnetId: props.target.subnetId,\n    });\n\n    // See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html\n    route.node.addDependency(clientVpnEndpoint!.targetNetworksAssociated);\n  }\n}\n"],
  "mappings": "qPAAA,OAAA,QAAA,cAGA,gBAAA,QAAA,mBAgBA,0BAA0C,OAE1B,QAAO,OAAe,oEAC3B,CAAE,SAAU,OAAO,gBAId,QAAK,CACjB,MAAO,CAAE,SAAU,UARvB,QAAA,qBAAA,sIAyBA,4BAAoC,QAAA,QAAQ,CAC1C,YAAY,MAAkB,GAAY,MAA0B,CAClE,0EAAI,CAAC,MAAM,kBAAoB,CAAC,MAAM,kBACpC,KAAM,IAAI,OACR,+FAGJ,GAAI,MAAM,kBAAoB,MAAM,kBAClC,KAAM,IAAI,OACR,6GAIJ,KAAM,mBAAoB,MAAM,kBAAoB,MAAM,kBAC1D,MAAM,MAAO,IASb,AARc,GAAI,iBAAA,kBAAkB,KAAM,WAAY,CACpD,oBAAqB,kBAAmB,WACxC,YAAa,MAAM,YACnB,qBAAsB,MAAM,KAC5B,kBAAmB,MAAM,OAAO,WAI5B,KAAK,cAAc,kBAAmB,2BAvBhD,QAAA,eAAA",
  "names": []
}
