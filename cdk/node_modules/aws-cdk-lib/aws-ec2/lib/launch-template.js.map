{
  "version": 3,
  "sources": ["launch-template.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\n\nimport {\n  Annotations,\n  Duration,\n  Expiration,\n  Fn,\n  IResource,\n  Lazy,\n  Resource,\n  TagManager,\n  TagType,\n  Tags,\n  Token,\n  Aspects,\n} from '../../core';\nimport { Construct } from 'constructs';\nimport { LaunchTemplateRequireImdsv2Aspect } from '.';\nimport { Connections, IConnectable } from './connections';\nimport { CfnLaunchTemplate } from './ec2.generated';\nimport { InstanceType } from './instance-types';\nimport { IMachineImage, MachineImageConfig, OperatingSystemType } from './machine-image';\nimport { launchTemplateBlockDeviceMappings } from './private/ebs-util';\nimport { ISecurityGroup } from './security-group';\nimport { UserData } from './user-data';\nimport { BlockDevice } from './volume';\n\n/**\n * Name tag constant\n */\nconst NAME_TAG: string = 'Name';\n\n                                                                                                                                                                                                                                  \n// dev-note: This could be used in the Instance L2\nexport enum CpuCredits {\n                                                                                                                                                         \n  STANDARD = 'standard',\n\n                                                                                                                                                           \n  UNLIMITED = 'unlimited',\n};\n\n                                                                                                                                                                                                                                  \n// dev-note: This could be used in the Instance L2\nexport enum InstanceInitiatedShutdownBehavior {\n                                                                     \n  STOP = 'stop',\n\n                                                                              \n  TERMINATE = 'terminate',\n};\n\n                                                     \nexport interface ILaunchTemplate extends IResource {\n                                                                                       \n  readonly versionNumber: string;\n\n                                                                                                                                                             \n  readonly launchTemplateId?: string;\n\n                                                                                                                                                       \n  readonly launchTemplateName?: string;\n}\n\n                                                                                 \n// dev-note: This could be used in a SpotFleet L2 if one gets developed.\nexport enum SpotInstanceInterruption {\n                                                         \n  STOP = 'stop',\n\n                                                                  \n  TERMINATE = 'terminate',\n\n                                                              \n  HIBERNATE = 'hibernate',\n}\n\n                                                                                                                            \nexport enum SpotRequestType {\n                                                                                                                                                                                                                                                                                                                                 \n  ONE_TIME = 'one-time',\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n  PERSISTENT = 'persistent',\n}\n\n                                                                                       \nexport interface LaunchTemplateSpotOptions {\n                                                                                                                                                                                                                                                                                                                                                                                                                                           \n  readonly blockDuration?: Duration;\n\n                                                                                                                                     \n  readonly interruptionBehavior?: SpotInstanceInterruption;\n\n                                                                                                                                                                                                                                                                                                   \n  readonly maxPrice?: number;\n\n                                                                                                                                                                                                                                                                                                                                \n  readonly requestType?: SpotRequestType;\n\n                                                                                                                                                                                                                                                                                                                                                                        \n  readonly validUntil?: Expiration;\n};\n\n                                          \nexport interface LaunchTemplateProps {\n                                                                                               \n  readonly launchTemplateName?: string;\n\n                                                                                                                                \n  readonly instanceType?: InstanceType;\n\n                                                                                                                                  \n  readonly machineImage?: IMachineImage;\n\n                                                                                                                                                                                                                               \n  readonly userData?: UserData;\n\n                                                                                                                                                                                                                                                                                                                                                                           \n  readonly role?: iam.IRole;\n\nn  readonly blockDevices?: BlockDevice[];\n\n                                                                                                                                                                                                                                                   \n  readonly cpuCredits?: CpuCredits;\n\n                                                                                                                                                                                                                                                                                       \n  readonly disableApiTermination?: boolean;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly ebsOptimized?: boolean;\n\n                                                                                                                                                                                                                                                                       \n  readonly nitroEnclaveEnabled?: boolean;\n\n                                                                                                                                                                                                         \n  readonly hibernationConfigured?: boolean;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly instanceInitiatedShutdownBehavior?: InstanceInitiatedShutdownBehavior;\n\n                                                                                                                                                                                                                                                                                       \n  readonly spotOptions?: LaunchTemplateSpotOptions;\n\n                                                                                                                     \n  readonly keyName?: string;\n\n                                                                                                                                                                                                                                                                                       \n  readonly detailedMonitoring?: boolean;\n\n                                                                                                                                          \n  readonly securityGroup?: ISecurityGroup;\n\n                                                                                                    \n  readonly requireImdsv2?: boolean;\n}\n\n                                                                                                            \nexport class LaunchTemplateSpecialVersions {\n                                                                                                                                         \n  public static readonly LATEST_VERSION: string = '$Latest';\n\n                                                                                                                                          \n  public static readonly DEFAULT_VERSION: string = '$Default';\n}\n\n                                                     \nexport interface LaunchTemplateAttributes {\n                                                                                                         \n  readonly versionNumber?: string;\n\n                                                                                                                                                               \n  readonly launchTemplateId?: string;\n\n                                                                                                                                                         \n  readonly launchTemplateName?: string;\n}\n\n                                                                                                                                          \nexport class LaunchTemplate extends Resource implements ILaunchTemplate, iam.IGrantable, IConnectable {\n                                                   \n  public static fromLaunchTemplateAttributes(scope: Construct, id: string, attrs: LaunchTemplateAttributes): ILaunchTemplate {\n    const haveId = Boolean(attrs.launchTemplateId);\n    const haveName = Boolean(attrs.launchTemplateName);\n    if (haveId == haveName) {\n      throw new Error('LaunchTemplate.fromLaunchTemplateAttributes() requires exactly one of launchTemplateId or launchTemplateName be provided.');\n    }\n\n    class Import extends Resource implements ILaunchTemplate {\n      public readonly versionNumber = attrs.versionNumber ?? LaunchTemplateSpecialVersions.DEFAULT_VERSION;\n      public readonly launchTemplateId? = attrs.launchTemplateId;\n      public readonly launchTemplateName? = attrs.launchTemplateName;\n    }\n    return new Import(scope, id);\n  }\n\n  // ============================================\n  //   Members for ILaunchTemplate interface\n\n  public readonly versionNumber: string;\n  public readonly launchTemplateId?: string;\n  public readonly launchTemplateName?: string;\n\n  // =============================================\n  //   Data members\n\n                                                                                  \n  public readonly defaultVersionNumber: string;\n\n                                                                                \n  public readonly latestVersionNumber: string;\n\n                                                                             \n  public readonly osType?: OperatingSystemType;\n\n                                                                                                         \n  public readonly role?: iam.IRole;\n\n                                                                                                          \n  public readonly userData?: UserData;\n\n  // =============================================\n  //   Private/protected data members\n\n  /**\n   * Principal to grant permissions to.\n   * @internal\n   */\n  protected readonly _grantPrincipal?: iam.IPrincipal;\n\n  /**\n   * Allows specifying security group connections for the instance.\n   * @internal\n   */\n  protected readonly _connections?: Connections;\n\n                                                \n  protected readonly tags: TagManager;\n\n  // =============================================\n\n  constructor(scope: Construct, id: string, props: LaunchTemplateProps = {}) {\n    super(scope, id);\n\n    // Basic validation of the provided spot block duration\n    const spotDuration = props?.spotOptions?.blockDuration?.toHours({ integral: true });\n    if (spotDuration !== undefined && (spotDuration < 1 || spotDuration > 6)) {\n      // See: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#fixed-duration-spot-instances\n      Annotations.of(this).addError('Spot block duration must be exactly 1, 2, 3, 4, 5, or 6 hours.');\n    }\n\n    this.role = props.role;\n    this._grantPrincipal = this.role;\n    const iamProfile: iam.CfnInstanceProfile | undefined = this.role ? new iam.CfnInstanceProfile(this, 'Profile', {\n      roles: [this.role!.roleName],\n    }) : undefined;\n\n    if (props.securityGroup) {\n      this._connections = new Connections({ securityGroups: [props.securityGroup] });\n    }\n    const securityGroupsToken = Lazy.list({\n      produce: () => {\n        if (this._connections && this._connections.securityGroups.length > 0) {\n          return this._connections.securityGroups.map(sg => sg.securityGroupId);\n        }\n        return undefined;\n      },\n    });\n\n    if (props.userData) {\n      this.userData = props.userData;\n    }\n    const userDataToken = Lazy.string({\n      produce: () => {\n        if (this.userData) {\n          return Fn.base64(this.userData.render());\n        }\n        return undefined;\n      },\n    });\n\n    const imageConfig: MachineImageConfig | undefined = props.machineImage?.getImage(this);\n    if (imageConfig) {\n      this.osType = imageConfig.osType;\n    }\n\n    let marketOptions: any = undefined;\n    if (props?.spotOptions) {\n      marketOptions = {\n        marketType: 'spot',\n        spotOptions: {\n          blockDurationMinutes: spotDuration !== undefined ? spotDuration * 60 : undefined,\n          instanceInterruptionBehavior: props.spotOptions.interruptionBehavior,\n          maxPrice: props.spotOptions.maxPrice?.toString(),\n          spotInstanceType: props.spotOptions.requestType,\n          validUntil: props.spotOptions.validUntil?.date.toUTCString(),\n        },\n      };\n      // Remove SpotOptions if there are none.\n      if (Object.keys(marketOptions.spotOptions).filter(k => marketOptions.spotOptions[k]).length == 0) {\n        marketOptions.spotOptions = undefined;\n      }\n    }\n\n    this.tags = new TagManager(TagType.KEY_VALUE, 'AWS::EC2::LaunchTemplate');\n    const tagsToken = Lazy.any({\n      produce: () => {\n        if (this.tags.hasTags()) {\n          const renderedTags = this.tags.renderTags();\n          const lowerCaseRenderedTags = renderedTags.map( (tag: { [key: string]: string}) => {\n            return {\n              key: tag.Key,\n              value: tag.Value,\n            };\n          });\n          return [\n            {\n              resourceType: 'instance',\n              tags: lowerCaseRenderedTags,\n            },\n            {\n              resourceType: 'volume',\n              tags: lowerCaseRenderedTags,\n            },\n          ];\n        }\n        return undefined;\n      },\n    });\n\n    const resource = new CfnLaunchTemplate(this, 'Resource', {\n      launchTemplateName: props?.launchTemplateName,\n      launchTemplateData: {\n        blockDeviceMappings: props?.blockDevices !== undefined ? launchTemplateBlockDeviceMappings(this, props.blockDevices) : undefined,\n        creditSpecification: props?.cpuCredits !== undefined ? {\n          cpuCredits: props.cpuCredits,\n        } : undefined,\n        disableApiTermination: props?.disableApiTermination,\n        ebsOptimized: props?.ebsOptimized,\n        enclaveOptions: props?.nitroEnclaveEnabled !== undefined ? {\n          enabled: props.nitroEnclaveEnabled,\n        } : undefined,\n        hibernationOptions: props?.hibernationConfigured !== undefined ? {\n          configured: props.hibernationConfigured,\n        } : undefined,\n        iamInstanceProfile: iamProfile !== undefined ? {\n          arn: iamProfile.getAtt('Arn').toString(),\n        } : undefined,\n        imageId: imageConfig?.imageId,\n        instanceType: props?.instanceType?.toString(),\n        instanceInitiatedShutdownBehavior: props?.instanceInitiatedShutdownBehavior,\n        instanceMarketOptions: marketOptions,\n        keyName: props?.keyName,\n        monitoring: props?.detailedMonitoring !== undefined ? {\n          enabled: props.detailedMonitoring,\n        } : undefined,\n        securityGroupIds: securityGroupsToken,\n        tagSpecifications: tagsToken,\n        userData: userDataToken,\n\n        // Fields not yet implemented:\n        // ==========================\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html\n        // Will require creating an L2 for AWS::EC2::CapacityReservation\n        // capacityReservationSpecification: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html\n        // cpuOptions: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html\n        // elasticGpuSpecifications: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators\n        // elasticInferenceAccelerators: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid\n        // kernelId: undefined,\n        // ramDiskId: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications\n        // Also not implemented in Instance L2\n        // licenseSpecifications: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions\n        // metadataOptions: undefined,\n\n        // https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications\n        // Should be implemented via the Tagging aspect in CDK core. Complication will be that this tagging interface is very unique to LaunchTemplates.\n        // tagSpecification: undefined\n\n        // CDK has no abstraction for Network Interfaces yet.\n        // networkInterfaces: undefined,\n\n        // CDK has no abstraction for Placement yet.\n        // placement: undefined,\n\n      },\n    });\n\n    Tags.of(this).add(NAME_TAG, this.node.path);\n\n    this.defaultVersionNumber = resource.attrDefaultVersionNumber;\n    this.latestVersionNumber = resource.attrLatestVersionNumber;\n    this.launchTemplateId = resource.ref;\n    this.versionNumber = Token.asString(resource.getAtt('LatestVersionNumber'));\n\n    if (props.requireImdsv2) {\n      Aspects.of(this).add(new LaunchTemplateRequireImdsv2Aspect());\n    }\n  }\n\n                                                                                                                                                                                   \n  public get connections(): Connections {\n    if (!this._connections) {\n      throw new Error('LaunchTemplate can only be used as IConnectable if a securityGroup is provided when constructing it.');\n    }\n    return this._connections;\n  }\n\n                                                                                                                                              \n  public get grantPrincipal(): iam.IPrincipal {\n    if (!this._grantPrincipal) {\n      throw new Error('LaunchTemplate can only be used as IGrantable if a role is provided when constructing it.');\n    }\n    return this._grantPrincipal;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
