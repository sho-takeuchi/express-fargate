{
  "version": 3,
  "sources": ["network-acl-types.ts"],
  "sourcesContent": ["                                               \nexport abstract class AclCidr {\n                                                                                   \n  public static ipv4(ipv4Cidr: string): AclCidr {\n    return new AclCidrImpl({\n      cidrBlock: ipv4Cidr,\n    });\n  }\n\n                                                                         \n  public static anyIpv4(): AclCidr {\n    return AclCidr.ipv4('0.0.0.0/0');\n  }\n\n                                                                                    \n  public static ipv6(ipv6Cidr: string): AclCidr {\n    return new AclCidrImpl({\n      ipv6CidrBlock: ipv6Cidr,\n    });\n  }\n\n                                                                    \n  public static anyIpv6(): AclCidr {\n    return AclCidr.ipv6('::/0');\n  }\n\n  public abstract toCidrConfig(): AclCidrConfig;\n}\n\nclass AclCidrImpl extends AclCidr {\n  constructor(private readonly config: AclCidrConfig) {\n    super();\n  }\n\n  public toCidrConfig(): AclCidrConfig {\n    return this.config;\n  }\n}\n\n                                           \nexport interface AclCidrConfig {\n                          \n  readonly cidrBlock?: string;\n\n                          \n  readonly ipv6CidrBlock?: string;\n}\n\n                                                                         \nexport abstract class AclTraffic {\n                                                   \n  public static allTraffic(): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: -1,\n    });\n  }\n\n                                                                           \n  public static icmp(props: AclIcmp): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 1,\n      icmp: props,\n    });\n  }\n\n                                                                                                                    \n  public static icmpv6(props: AclIcmp): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 58,\n      icmp: props,\n    });\n  }\n\n                                                                   \n  public static tcpPort(port: number): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 6,\n      portRange: {\n        from: port,\n        to: port,\n      },\n    });\n  }\n\n                                                                         \n  public static tcpPortRange(startPort: number, endPort: number): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 6,\n      portRange: {\n        from: startPort,\n        to: endPort,\n      },\n    });\n  }\n\n                                                                   \n  public static udpPort(port: number): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 17,\n      portRange: {\n        from: port,\n        to: port,\n      },\n    });\n  }\n\n                                                                         \n  public static udpPortRange(startPort: number, endPort: number): AclTraffic {\n    return new AclTrafficImpl({\n      protocol: 17,\n      portRange: {\n        from: startPort,\n        to: endPort,\n      },\n    });\n  }\n\n  public abstract toTrafficConfig(): AclTrafficConfig;\n}\n\nclass AclTrafficImpl extends AclTraffic {\n  constructor(private readonly config: AclTrafficConfig) {\n    super();\n  }\n\n  public toTrafficConfig(): AclTrafficConfig {\n    return this.config;\n  }\n}\n\n                                              \nexport interface AclTrafficConfig {\n                                                                                                                                                             \n  readonly icmp?: AclIcmp;\n\n                                                                                                                                                               \n  readonly portRange?: AclPortRange;\n\nn  readonly protocol: number;\n}\n\n                                          \nexport interface AclIcmp {\n                                                                                                                                                                                                                              \n  readonly type?: number;\n\n                                                                                                                                                                                                                                        \n  readonly code?: number;\n}\n\n                                               \nexport interface AclPortRange {\n                                                                                                                     \n  readonly from?: number\n\n                                                                                                                    \n  readonly to?: number\n}\n"],
  "mappings": "oOACA,aAA6B,OAEb,MAAK,SAAgB,CACjC,MAAO,IAAI,aAAY,CACrB,UAAW,iBAKD,UAAO,CACnB,MAAO,SAAQ,KAAK,mBAIR,MAAK,SAAgB,CACjC,MAAO,IAAI,aAAY,CACrB,cAAe,iBAKL,UAAO,CACnB,MAAO,SAAQ,KAAK,SAtBxB,QAAA,QAAA,+FA4BA,yBAA0B,QAAO,CAC/B,YAA6B,OAAqB,CAChD,QAD2B,KAAA,OAAA,OAItB,cAAY,CACjB,MAAO,MAAK,QAchB,gBAAgC,OAEhB,aAAU,CACtB,MAAO,IAAI,gBAAe,CACxB,SAAU,WAKA,MAAK,MAAc,mEACxB,GAAI,gBAAe,CACxB,SAAU,EACV,KAAM,cAKI,QAAO,MAAc,mEAC1B,GAAI,gBAAe,CACxB,SAAU,GACV,KAAM,cAKI,SAAQ,KAAY,CAChC,MAAO,IAAI,gBAAe,CACxB,SAAU,EACV,UAAW,CACT,KAAM,KACN,GAAI,cAMI,cAAa,UAAmB,QAAe,CAC3D,MAAO,IAAI,gBAAe,CACxB,SAAU,EACV,UAAW,CACT,KAAM,UACN,GAAI,iBAMI,SAAQ,KAAY,CAChC,MAAO,IAAI,gBAAe,CACxB,SAAU,GACV,UAAW,CACT,KAAM,KACN,GAAI,cAMI,cAAa,UAAmB,QAAe,CAC3D,MAAO,IAAI,gBAAe,CACxB,SAAU,GACV,UAAW,CACT,KAAM,UACN,GAAI,YA/DZ,QAAA,WAAA,wGAuEA,4BAA6B,WAAU,CACrC,YAA6B,OAAwB,CACnD,QAD2B,KAAA,OAAA,OAItB,iBAAe,CACpB,MAAO,MAAK",
  "names": []
}
