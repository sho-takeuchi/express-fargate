{
  "version": 3,
  "sources": ["vpc-endpoint-service.ts"],
  "sourcesContent": ["import { ArnPrincipal } from '../../aws-iam';\nimport { Aws, Fn, IResource, Resource, Stack, Token } from '../../core';\nimport { Default, RegionInfo } from '../../region-info';\nimport { Construct } from 'constructs';\nimport { CfnVPCEndpointService, CfnVPCEndpointServicePermissions } from './ec2.generated';\n\n                                                                  \nexport interface IVpcEndpointServiceLoadBalancer {\n                                                                                 \n  readonly loadBalancerArn: string;\n}\n\n                                     \nexport interface IVpcEndpointService extends IResource {\n                                                                                                                                                                                  \n  readonly vpcEndpointServiceName: string;\n\n                                                                                                                                            \n  readonly vpcEndpointServiceId: string;\n}\n\n                                                                              \nexport class VpcEndpointService extends Resource implements IVpcEndpointService {\n\n                                                                                        \n  public readonly vpcEndpointServiceLoadBalancers: IVpcEndpointServiceLoadBalancer[];\n\n                                                                                             \n  public readonly acceptanceRequired: boolean;\n\n                                                                                                                     \n  public readonly whitelistedPrincipals: ArnPrincipal[];\n\n                                                                                 \n  public readonly allowedPrincipals: ArnPrincipal[];\n\n                                                                                                    \n  public readonly vpcEndpointServiceId: string;\n\n                                                                                                                                                                                  \n  public readonly vpcEndpointServiceName: string;\n\n  private readonly endpointService: CfnVPCEndpointService;\n\n  constructor(scope: Construct, id: string, props: VpcEndpointServiceProps) {\n    super(scope, id);\n\n    if (props.vpcEndpointServiceLoadBalancers === undefined || props.vpcEndpointServiceLoadBalancers.length === 0) {\n      throw new Error('VPC Endpoint Service must have at least one load balancer specified.');\n    }\n\n    this.vpcEndpointServiceLoadBalancers = props.vpcEndpointServiceLoadBalancers;\n    this.acceptanceRequired = props.acceptanceRequired ?? true;\n\n    if (props.allowedPrincipals && props.whitelistedPrincipals) {\n      throw new Error('`whitelistedPrincipals` is deprecated; please use `allowedPrincipals` instead');\n    }\n    this.allowedPrincipals = props.allowedPrincipals ?? props.whitelistedPrincipals ?? [];\n    this.whitelistedPrincipals = this.allowedPrincipals;\n\n    this.endpointService = new CfnVPCEndpointService(this, id, {\n      networkLoadBalancerArns: this.vpcEndpointServiceLoadBalancers.map(lb => lb.loadBalancerArn),\n      acceptanceRequired: this.acceptanceRequired,\n    });\n\n    this.vpcEndpointServiceId = this.endpointService.ref;\n\n    const { region } = Stack.of(this);\n    const serviceNamePrefix = !Token.isUnresolved(region) ?\n      (RegionInfo.get(region).vpcEndpointServiceNamePrefix ?? Default.VPC_ENDPOINT_SERVICE_NAME_PREFIX) :\n      Default.VPC_ENDPOINT_SERVICE_NAME_PREFIX;\n\n    this.vpcEndpointServiceName = Fn.join('.', [serviceNamePrefix, Aws.REGION, this.vpcEndpointServiceId]);\n    if (this.allowedPrincipals.length > 0) {\n      new CfnVPCEndpointServicePermissions(this, 'Permissions', {\n        serviceId: this.endpointService.ref,\n        allowedPrincipals: this.allowedPrincipals.map(x => x.arn),\n      });\n    }\n  }\n}\n\n                                                               \nexport interface VpcEndpointServiceProps {\n\n                                                                                                                               \n  readonly vpcEndpointServiceName?: string;\n\n                                                                                  \n  readonly vpcEndpointServiceLoadBalancers: IVpcEndpointServiceLoadBalancer[];\n\n                                                                                                                                                     \n  readonly acceptanceRequired?: boolean;\n\n                                                                                                                                                                                                                                                                                      \n  readonly whitelistedPrincipals?: ArnPrincipal[];\n\n                                                                                                                                                                                                                                                  \n  readonly allowedPrincipals?: ArnPrincipal[];\n}\n"],
  "mappings": "yNACA,OAAA,QAAA,cACA,cAAA,QAAA,qBAEA,gBAAA,QAAA,mBAkBA,gCAAwC,QAAA,QAAQ,CAsB9C,YAAY,MAAkB,GAAY,MAA8B,iBACtE,MAAM,MAAO,IAEb,8EAAI,MAAM,kCAAoC,QAAa,MAAM,gCAAgC,SAAW,EAC1G,KAAM,IAAI,OAAM,wEAMlB,GAHA,KAAK,gCAAkC,MAAM,gCAC7C,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,GAElD,MAAM,mBAAqB,MAAM,sBACnC,KAAM,IAAI,OAAM,iFAElB,KAAK,kBAAiB,IAAA,IAAG,MAAM,qBAAiB,MAAA,KAAA,OAAA,GAAI,MAAM,yBAAqB,MAAA,KAAA,OAAA,GAAI,GACnF,KAAK,sBAAwB,KAAK,kBAElC,KAAK,gBAAkB,GAAI,iBAAA,sBAAsB,KAAM,GAAI,CACzD,wBAAyB,KAAK,gCAAgC,IAAI,IAAM,GAAG,iBAC3E,mBAAoB,KAAK,qBAG3B,KAAK,qBAAuB,KAAK,gBAAgB,IAEjD,KAAM,CAAE,QAAW,OAAA,MAAM,GAAG,MACtB,kBAAoB,AAAC,OAAA,MAAM,aAAa,QAE5C,cAAA,QAAQ,iCADR,IAAC,cAAA,WAAW,IAAI,QAAQ,gCAA4B,MAAA,KAAA,OAAA,GAAI,cAAA,QAAQ,iCAGlE,KAAK,uBAAyB,OAAA,GAAG,KAAK,IAAK,CAAC,kBAAmB,OAAA,IAAI,OAAQ,KAAK,uBAC5E,KAAK,kBAAkB,OAAS,GAClC,GAAI,iBAAA,iCAAiC,KAAM,cAAe,CACxD,UAAW,KAAK,gBAAgB,IAChC,kBAAmB,KAAK,kBAAkB,IAAI,GAAK,EAAE,QAtD7D,QAAA,mBAAA",
  "names": []
}
