{
  "version": 3,
  "sources": ["scheduled-fargate-task.ts"],
  "sourcesContent": ["import { FargateTaskDefinition, FargatePlatformVersion } from '../../../aws-ecs';\nimport { EcsTask } from '../../../aws-events-targets';\nimport { Construct } from 'constructs';\nimport { ScheduledTaskBase, ScheduledTaskBaseProps, ScheduledTaskImageProps } from '../base/scheduled-task-base';\n\n                                                            \nexport interface ScheduledFargateTaskProps extends ScheduledTaskBaseProps {\n                                                                                                                                                                                                                                      \n  readonly scheduledFargateTaskDefinitionOptions?: ScheduledFargateTaskDefinitionOptions;\n\n                                                                                                                                                                                                                               \n  readonly scheduledFargateTaskImageOptions?: ScheduledFargateTaskImageOptions;\n\n                                                                                                                                                                                                                                                                                                                                                                                                 \n  readonly platformVersion?: FargatePlatformVersion;\n}\n\n                                                                      \nexport interface ScheduledFargateTaskImageOptions extends ScheduledTaskImageProps {\nn  readonly cpu?: number;\n\n                                                                                                                                                                                                             \n  readonly memoryLimitMiB?: number;\n}\n\n                                                                               \nexport interface ScheduledFargateTaskDefinitionOptions {\n                                                                                                                                                                                                      \n  readonly taskDefinition: FargateTaskDefinition;\n}\n\n                                                                                    \nexport class ScheduledFargateTask extends ScheduledTaskBase {\n                                                               \n  public readonly taskDefinition: FargateTaskDefinition;\n\n                                                \n  public readonly task: EcsTask;\n\n                                                                             \n  constructor(scope: Construct, id: string, props: ScheduledFargateTaskProps) {\n    super(scope, id, props);\n\n    if (props.scheduledFargateTaskDefinitionOptions && props.scheduledFargateTaskImageOptions) {\n      throw new Error('You must specify either a scheduledFargateTaskDefinitionOptions or scheduledFargateTaskOptions, not both.');\n    } else if (props.scheduledFargateTaskDefinitionOptions) {\n      this.taskDefinition = props.scheduledFargateTaskDefinitionOptions.taskDefinition;\n    } else if (props.scheduledFargateTaskImageOptions) {\n      const taskImageOptions = props.scheduledFargateTaskImageOptions;\n      this.taskDefinition = new FargateTaskDefinition(this, 'ScheduledTaskDef', {\n        memoryLimitMiB: taskImageOptions.memoryLimitMiB || 512,\n        cpu: taskImageOptions.cpu || 256,\n      });\n      this.taskDefinition.addContainer('ScheduledContainer', {\n        image: taskImageOptions.image,\n        command: taskImageOptions.command,\n        environment: taskImageOptions.environment,\n        secrets: taskImageOptions.secrets,\n        logging: taskImageOptions.logDriver ?? this.createAWSLogDriver(this.node.id),\n      });\n    } else {\n      throw new Error('You must specify one of: taskDefinition or image');\n    }\n\n    // Use the EcsTask as the target of the EventRule\n    this.task = new EcsTask( {\n      cluster: this.cluster,\n      taskDefinition: this.taskDefinition,\n      taskCount: this.desiredTaskCount,\n      subnetSelection: this.subnetSelection,\n      platformVersion: props.platformVersion,\n      securityGroups: props.securityGroups,\n    });\n\n    this.addTaskAsTarget(this.task);\n  }\n}\n"],
  "mappings": "8NAAA,UAAA,QAAA,oBACA,qBAAA,QAAA,+BAEA,sBAAA,QAAA,+BA8BA,kCAA0C,uBAAA,iBAAiB,CAQzD,YAAY,MAAkB,GAAY,MAAgC,QACxE,MAAM,MAAO,GAAI,OAEjB,yFAAI,MAAM,uCAAyC,MAAM,iCACvD,KAAM,IAAI,OAAM,6GACX,GAAI,MAAM,sCACf,KAAK,eAAiB,MAAM,sCAAsC,uBACzD,MAAM,iCAAkC,CACjD,KAAM,kBAAmB,MAAM,iCAC/B,KAAK,eAAiB,GAAI,WAAA,sBAAsB,KAAM,mBAAoB,CACxE,eAAgB,iBAAiB,gBAAkB,IACnD,IAAK,iBAAiB,KAAO,MAE/B,KAAK,eAAe,aAAa,qBAAsB,CACrD,MAAO,iBAAiB,MACxB,QAAS,iBAAiB,QAC1B,YAAa,iBAAiB,YAC9B,QAAS,iBAAiB,QAC1B,QAAO,IAAE,iBAAiB,aAAS,MAAA,KAAA,OAAA,GAAI,KAAK,mBAAmB,KAAK,KAAK,UAG3E,MAAM,IAAI,OAAM,oDAIlB,KAAK,KAAO,GAAI,sBAAA,QAAS,CACvB,QAAS,KAAK,QACd,eAAgB,KAAK,eACrB,UAAW,KAAK,iBAChB,gBAAiB,KAAK,gBACtB,gBAAiB,MAAM,gBACvB,eAAgB,MAAM,iBAGxB,KAAK,gBAAgB,KAAK,OA1C9B,QAAA,qBAAA",
  "names": []
}
