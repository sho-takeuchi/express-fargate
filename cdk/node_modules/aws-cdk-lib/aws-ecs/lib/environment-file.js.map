{
  "version": 3,
  "sources": ["environment-file.ts"],
  "sourcesContent": ["import { IBucket, Location } from '../../aws-s3';\nimport { Asset, AssetOptions } from '../../aws-s3-assets';\nimport { Construct } from 'constructs';\n\n                                                    \nexport abstract class EnvironmentFile {\n                                                                                                                             \n  public static fromAsset(path: string, options?: AssetOptions): AssetEnvironmentFile {\n    return new AssetEnvironmentFile(path, options);\n  }\n\n                                                                                                                                                                                                                                                                   \n  public static fromBucket(bucket: IBucket, key: string, objectVersion?: string): S3EnvironmentFile {\n    return new S3EnvironmentFile(bucket, key, objectVersion);\n  }\n\n                                                                                                                                                  \n  public abstract bind(scope: Construct): EnvironmentFileConfig;\n}\n\n                                                   \nexport class AssetEnvironmentFile extends EnvironmentFile {\n  private asset?: Asset;\n\n                                                                                         \n  constructor(public readonly path: string, private readonly options: AssetOptions = { }) {\n    super();\n  }\n\n  public bind(scope: Construct): EnvironmentFileConfig {\n    // If the same AssetCode is used multiple times, retain only the first instantiation.\n    if (!this.asset) {\n      this.asset = new Asset(scope, 'EnvironmentFile', {\n        path: this.path,\n        ...this.options,\n      });\n    }\n\n    if (!this.asset.isFile) {\n      throw new Error(`Asset must be a single file (${this.path})`);\n    }\n\n    return {\n      fileType: EnvironmentFileType.S3,\n      s3Location: {\n        bucketName: this.asset.s3BucketName,\n        objectKey: this.asset.s3ObjectKey,\n      },\n    };\n  }\n}\n\n                                    \nexport class S3EnvironmentFile extends EnvironmentFile {\n  private readonly bucketName: string;\n\n  constructor(bucket: IBucket, private key: string, private objectVersion?: string) {\n    super();\n\n    if (!bucket.bucketName) {\n      throw new Error('bucketName is undefined for the provided bucket');\n    }\n\n    this.bucketName = bucket.bucketName;\n  }\n\n  public bind(_scope: Construct): EnvironmentFileConfig {\n    return {\n      fileType: EnvironmentFileType.S3,\n      s3Location: {\n        bucketName: this.bucketName,\n        objectKey: this.key,\n        objectVersion: this.objectVersion,\n      },\n    };\n  }\n}\n\n                                                 \nexport interface EnvironmentFileConfig {\n                                             \n  readonly fileType: EnvironmentFileType;\n\n                                                           \n  readonly s3Location: Location;\n}\n\n/**\n * Type of environment file to be included in the container definition\n */\nexport enum EnvironmentFileType {\n                                                                        \n  S3 = 's3',\n}\n"],
  "mappings": "+SACA,gBAAA,QAAA,uBAIA,qBAAqC,OAErB,WAAU,KAAc,QAAsB,gFACnD,GAAI,sBAAqB,KAAM,eAI1B,YAAW,OAAiB,IAAa,cAAsB,mEACpE,GAAI,mBAAkB,OAAQ,IAAK,gBAR9C,QAAA,gBAAA,uHAgBA,kCAA0C,gBAAe,CAIvD,YAA4B,KAA+B,QAAwB,GAAG,CACpF,QAD0B,KAAA,KAAA,KAA+B,KAAA,QAAA,gFAIpD,KAAK,MAAgB,CAS1B,GAPK,KAAK,OACR,MAAK,MAAQ,GAAI,iBAAA,MAAM,MAAO,kBAAmB,CAC/C,KAAM,KAAK,QACR,KAAK,WAIR,CAAC,KAAK,MAAM,OACd,KAAM,IAAI,OAAM,gCAAgC,KAAK,SAGvD,MAAO,CACL,SAAU,oBAAoB,GAC9B,WAAY,CACV,WAAY,KAAK,MAAM,aACvB,UAAW,KAAK,MAAM,eAzB9B,QAAA,qBAAA,sIAgCA,+BAAuC,gBAAe,CAGpD,YAAY,OAAyB,IAAqB,cAAsB,CAC9E,QAEA,GAHmC,KAAA,IAAA,IAAqB,KAAA,cAAA,yEAGpD,CAAC,OAAO,WACV,KAAM,IAAI,OAAM,mDAGlB,KAAK,WAAa,OAAO,WAGpB,KAAK,OAAiB,CAC3B,MAAO,CACL,SAAU,oBAAoB,GAC9B,WAAY,CACV,WAAY,KAAK,WACjB,UAAW,KAAK,IAChB,cAAe,KAAK,iBAnB5B,QAAA,kBAAA,6HAqCA,GAAY,qBAAZ,AAAA,UAAY,qBAAmB,CAE7B,qBAAA,GAAA,OAFU,oBAAA,QAAA,qBAAA,SAAA,oBAAmB",
  "names": []
}
