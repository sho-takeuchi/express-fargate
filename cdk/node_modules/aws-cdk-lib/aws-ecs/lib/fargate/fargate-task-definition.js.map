{
  "version": 3,
  "sources": ["fargate-task-definition.ts"],
  "sourcesContent": ["import { Tokenization } from '../../../core';\nimport { Construct } from 'constructs';\nimport { ImportedTaskDefinition } from '../base/_imported-task-definition';\nimport {\n  CommonTaskDefinitionAttributes,\n  CommonTaskDefinitionProps,\n  Compatibility,\n  ITaskDefinition,\n  NetworkMode,\n  TaskDefinition,\n} from '../base/task-definition';\nimport { RuntimePlatform } from '../runtime-platform';\n\n                                                \nexport interface FargateTaskDefinitionProps extends CommonTaskDefinitionProps {\nn  readonly cpu?: number;\n\nn  readonly memoryLimitMiB?: number;\n\n                                                                                                                                                                                                                                                                            \n  readonly ephemeralStorageGiB?: number;\n\n                                                                                                                                                                                                       \n  readonly runtimePlatform?: RuntimePlatform;\n}\n\n                                                                       \nexport interface IFargateTaskDefinition extends ITaskDefinition {\n\n}\n\n                                                                        \nexport interface FargateTaskDefinitionAttributes extends CommonTaskDefinitionAttributes {\n\n}\n\n                                                                                                              \nexport class FargateTaskDefinition extends TaskDefinition implements IFargateTaskDefinition {\n\n                                                                                  \n  public static fromFargateTaskDefinitionArn(scope: Construct, id: string, fargateTaskDefinitionArn: string): IFargateTaskDefinition {\n    return new ImportedTaskDefinition(scope, id, { taskDefinitionArn: fargateTaskDefinitionArn });\n  }\n\n                                                                               \n  public static fromFargateTaskDefinitionAttributes(\n    scope: Construct,\n    id: string,\n    attrs: FargateTaskDefinitionAttributes,\n  ): IFargateTaskDefinition {\n    return new ImportedTaskDefinition(scope, id, {\n      taskDefinitionArn: attrs.taskDefinitionArn,\n      compatibility: Compatibility.FARGATE,\n      networkMode: attrs.networkMode,\n      taskRole: attrs.taskRole,\n    });\n  }\n\n                                                                                                                                 \n  public readonly networkMode: NetworkMode = NetworkMode.AWS_VPC;\n  // NOTE: Until the fix to https://github.com/Microsoft/TypeScript/issues/26969 gets released,\n  // we need to explicitly write the type here, as type deduction for enums won't lead to\n  // the import being generated in the .d.ts file.\n\n                                                                                      \n  public readonly ephemeralStorageGiB?: number;\n\n                                                                              \n  constructor(scope: Construct, id: string, props: FargateTaskDefinitionProps = {}) {\n    super(scope, id, {\n      ...props,\n      cpu: props.cpu !== undefined ? Tokenization.stringifyNumber(props.cpu) : '256',\n      memoryMiB: props.memoryLimitMiB !== undefined ? Tokenization.stringifyNumber(props.memoryLimitMiB) : '512',\n      compatibility: Compatibility.FARGATE,\n      networkMode: NetworkMode.AWS_VPC,\n    });\n\n    if (props.ephemeralStorageGiB && (props.ephemeralStorageGiB < 21 || props.ephemeralStorageGiB > 200)) {\n      throw new Error('Ephemeral storage size must be between 21GiB and 200GiB');\n    }\n\n    this.ephemeralStorageGiB = props.ephemeralStorageGiB;\n  }\n}\n"],
  "mappings": "+NAAA,OAAA,QAAA,iBAEA,4BAAA,QAAA,qCACA,kBAAA,QAAA,2BAoCA,mCAA2C,mBAAA,cAAc,CA+BvD,YAAY,MAAkB,GAAY,MAAoC,GAAE,CAC9E,MAAM,MAAO,GAAI,IACZ,MACH,IAAK,MAAM,MAAQ,OAAY,OAAA,aAAa,gBAAgB,MAAM,KAAO,MACzE,UAAW,MAAM,iBAAmB,OAAY,OAAA,aAAa,gBAAgB,MAAM,gBAAkB,MACrG,cAAe,kBAAA,cAAc,QAC7B,YAAa,kBAAA,YAAY,UAG3B,GAlBc,KAAA,YAA2B,kBAAA,YAAY,sFAkBjD,MAAM,qBAAwB,OAAM,oBAAsB,IAAM,MAAM,oBAAsB,KAC9F,KAAM,IAAI,OAAM,2DAGlB,KAAK,oBAAsB,MAAM,0BAzCrB,8BAA6B,MAAkB,GAAY,yBAAgC,CACvG,MAAO,IAAI,6BAAA,uBAAuB,MAAO,GAAI,CAAE,kBAAmB,iCAItD,qCACZ,MACA,GACA,MAAsC,2FAE/B,GAAI,6BAAA,uBAAuB,MAAO,GAAI,CAC3C,kBAAmB,MAAM,kBACzB,cAAe,kBAAA,cAAc,QAC7B,YAAa,MAAM,YACnB,SAAU,MAAM,YAjBtB,QAAA,sBAAA",
  "names": []
}
