{
  "version": 3,
  "sources": ["tag-parameter-container-image.ts"],
  "sourcesContent": ["import * as ecr from '../../../aws-ecr';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { ContainerDefinition } from '../container-definition';\nimport { ContainerImage, ContainerImageConfig } from '../container-image';\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \nexport class TagParameterContainerImage extends ContainerImage {\n  private readonly repository: ecr.IRepository;\n  private imageTagParameter?: cdk.CfnParameter;\n\n  public constructor(repository: ecr.IRepository) {\n    super();\n    this.repository = repository;\n  }\n\n  public bind(scope: Construct, containerDefinition: ContainerDefinition): ContainerImageConfig {\n    this.repository.grantPull(containerDefinition.taskDefinition.obtainExecutionRole());\n    const imageTagParameter = new cdk.CfnParameter(scope, 'ImageTagParam');\n    this.imageTagParameter = imageTagParameter;\n    return {\n      imageName: this.repository.repositoryUriForTag(imageTagParameter.valueAsString),\n    };\n  }\n\n                                                                                                                                  \n  public get tagParameterName(): string {\n    return cdk.Lazy.string({\n      produce: () => {\n        if (this.imageTagParameter) {\n          return this.imageTagParameter.logicalId;\n        } else {\n          throw new Error('TagParameterContainerImage must be used in a container definition when using tagParameterName');\n        }\n      },\n    });\n  }\n\n                                                                                                                                   \n  public get tagParameterValue(): string {\n    return cdk.Lazy.string({\n      produce: () => {\n        if (this.imageTagParameter) {\n          return this.imageTagParameter.valueAsString;\n        } else {\n          throw new Error('TagParameterContainerImage must be used in a container definition when using tagParameterValue');\n        }\n      },\n    });\n  }\n}\n"],
  "mappings": "oOACA,IAAA,QAAA,iBAGA,kBAAA,QAAA,sBAGA,wCAAgD,mBAAA,cAAc,CAI5D,YAAmB,WAA2B,CAC5C,4EACA,KAAK,WAAa,WAGb,KAAK,MAAkB,oBAAwC,sFACpE,KAAK,WAAW,UAAU,oBAAoB,eAAe,uBAC7D,KAAM,mBAAoB,GAAI,KAAI,aAAa,MAAO,iBACtD,YAAK,kBAAoB,kBAClB,CACL,UAAW,KAAK,WAAW,oBAAoB,kBAAkB,mBAK1D,mBAAgB,CACzB,MAAO,KAAI,KAAK,OAAO,CACrB,QAAS,IAAK,CACZ,GAAI,KAAK,kBACP,MAAO,MAAK,kBAAkB,UAE9B,KAAM,IAAI,OAAM,uGAOb,oBAAiB,CAC1B,MAAO,KAAI,KAAK,OAAO,CACrB,QAAS,IAAK,CACZ,GAAI,KAAK,kBACP,MAAO,MAAK,kBAAkB,cAE9B,KAAM,IAAI,OAAM,sGAtC1B,QAAA,2BAAA",
  "names": []
}
