{
  "version": 3,
  "sources": ["aws-log-driver.ts"],
  "sourcesContent": ["import * as logs from '../../../aws-logs';\nimport { Construct } from 'constructs';\nimport { ContainerDefinition } from '../container-definition';\nimport { LogDriver, LogDriverConfig } from './log-driver';\nimport { removeEmpty } from './utils';\n\n                                                                                                  \nexport enum AwsLogDriverMode {\n\n                                                                              \n  BLOCKING = 'blocking',\n\n                                                                                                                                                                                                                      \n  NON_BLOCKING = 'non-blocking'\n}\n\n                                                                  \nexport interface AwsLogDriverProps {\n                                                                                                                                                                                                                                                                                                                                                                                                          \n  readonly streamPrefix: string;\n\n                                                                                                   \n  readonly logGroup?: logs.ILogGroup;\n\n                                                                                                                                                                                      \n  readonly logRetention?: logs.RetentionDays;\n\n                                                                                                                                                                                                                                                                                                                                      \n  readonly datetimeFormat?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                              \n  readonly multilinePattern?: string;\n\n                                                                                                                                \n  readonly mode?: AwsLogDriverMode;\n}\n\n                                                                      \nexport class AwsLogDriver extends LogDriver {\n                                                                                                                                            \n  public logGroup?: logs.ILogGroup;\n\n                                                                                                                                          \n  constructor(private readonly props: AwsLogDriverProps) {\n    super();\n\n    if (props.logGroup && props.logRetention) {\n      throw new Error('Cannot specify both `logGroup` and `logRetentionDays`.');\n    }\n  }\n\n                                                                        \n  public bind(scope: Construct, containerDefinition: ContainerDefinition): LogDriverConfig {\n    this.logGroup = this.props.logGroup || new logs.LogGroup(scope, 'LogGroup', {\n      retention: this.props.logRetention || Infinity,\n    });\n\n    this.logGroup.grantWrite(containerDefinition.taskDefinition.obtainExecutionRole());\n\n    return {\n      logDriver: 'awslogs',\n      options: removeEmpty({\n        'awslogs-group': this.logGroup.logGroupName,\n        'awslogs-stream-prefix': this.props.streamPrefix,\n        'awslogs-region': this.logGroup.env.region,\n        'awslogs-datetime-format': this.props.datetimeFormat,\n        'awslogs-multiline-pattern': this.props.multilinePattern,\n        'mode': this.props.mode,\n      }),\n    };\n  }\n}\n"],
  "mappings": "+OAAA,KAAA,QAAA,qBAGA,aAAA,QAAA,gBACA,QAAA,QAAA,WAGA,GAAY,kBAAZ,AAAA,UAAY,kBAAgB,CAG1B,kBAAA,SAAA,WAGA,kBAAA,aAAA,iBANU,iBAAA,QAAA,kBAAA,SAAA,iBAAgB,KA+B5B,0BAAkC,cAAA,SAAS,CAKzC,YAA6B,MAAwB,CACnD,QAEA,GAH2B,KAAA,MAAA,2EAGvB,MAAM,UAAY,MAAM,aAC1B,KAAM,IAAI,OAAM,0DAKb,KAAK,MAAkB,oBAAwC,6FACpE,KAAK,SAAW,KAAK,MAAM,UAAY,GAAI,MAAK,SAAS,MAAO,WAAY,CAC1E,UAAW,KAAK,MAAM,cAAgB,MAGxC,KAAK,SAAS,WAAW,oBAAoB,eAAe,uBAErD,CACL,UAAW,UACX,QAAS,QAAA,YAAY,CACnB,gBAAiB,KAAK,SAAS,aAC/B,wBAAyB,KAAK,MAAM,aACpC,iBAAkB,KAAK,SAAS,IAAI,OACpC,0BAA2B,KAAK,MAAM,eACtC,4BAA6B,KAAK,MAAM,iBACxC,KAAQ,KAAK,MAAM,SA7B3B,QAAA,aAAA",
  "names": []
}
