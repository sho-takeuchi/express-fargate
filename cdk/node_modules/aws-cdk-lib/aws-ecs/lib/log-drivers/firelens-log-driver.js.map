{
  "version": 3,
  "sources": ["firelens-log-driver.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ContainerDefinition, Secret } from '../container-definition';\nimport { BaseLogDriverProps } from './base-log-driver';\nimport { LogDriver, LogDriverConfig } from './log-driver';\nimport { removeEmpty, renderLogDriverSecretOptions } from './utils';\n\n                                                                   \nexport interface FireLensLogDriverProps extends BaseLogDriverProps {\n                                                                                                            \n  readonly options?: { [key: string]: string };\n\n                                                                                                          \n  readonly secretOptions?: { [key: string]: Secret };\n}\n\n                                                                                                                                                                            \nexport class FireLensLogDriver extends LogDriver {\n  /**\n   * The configuration options to send to the log driver.\n   * @default - the log driver options\n   */\n  private options?: { [key: string]: string };\n\n  /**\n   * The secrets to pass to the log configuration.\n   * @default - No secret options provided.\n   */\n  private secretOptions?: { [key: string]: Secret };\n\n                                                                                                                                              \n  constructor(props: FireLensLogDriverProps) {\n    super();\n\n    this.options = props.options;\n    this.secretOptions = props.secretOptions;\n  }\n\n                                                                        \n  public bind(_scope: Construct, _containerDefinition: ContainerDefinition): LogDriverConfig {\n    return {\n      logDriver: 'awsfirelens',\n      ...(this.options && { options: removeEmpty(this.options) }),\n      secretOptions: this.secretOptions && renderLogDriverSecretOptions(this.secretOptions, _containerDefinition.taskDefinition),\n    };\n  }\n}\n"],
  "mappings": "2NAGA,aAAA,QAAA,gBACA,QAAA,QAAA,WAYA,+BAAuC,cAAA,SAAS,CAc9C,YAAY,MAA6B,CACvC,kFAEA,KAAK,QAAU,MAAM,QACrB,KAAK,cAAgB,MAAM,cAItB,KAAK,OAAmB,qBAAyC,8FAC/D,CACL,UAAW,iBACP,KAAK,SAAW,CAAE,QAAS,QAAA,YAAY,KAAK,UAChD,cAAe,KAAK,eAAiB,QAAA,6BAA6B,KAAK,cAAe,qBAAqB,kBA1BjH,QAAA,kBAAA",
  "names": []
}
