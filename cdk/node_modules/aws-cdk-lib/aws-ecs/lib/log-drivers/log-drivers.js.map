{
  "version": 3,
  "sources": ["log-drivers.ts"],
  "sourcesContent": ["import { AwsLogDriver, AwsLogDriverProps } from './aws-log-driver';\nimport { FireLensLogDriver, FireLensLogDriverProps } from './firelens-log-driver';\nimport { FluentdLogDriver, FluentdLogDriverProps } from './fluentd-log-driver';\nimport { GelfLogDriver, GelfLogDriverProps } from './gelf-log-driver';\nimport { JournaldLogDriver, JournaldLogDriverProps } from './journald-log-driver';\nimport { JsonFileLogDriver, JsonFileLogDriverProps } from './json-file-log-driver';\nimport { LogDriver } from './log-driver';\nimport { SplunkLogDriver, SplunkLogDriverProps } from './splunk-log-driver';\nimport { SyslogLogDriver, SyslogLogDriverProps } from './syslog-log-driver';\n\n                                          \nexport class LogDrivers {\n                                                                                                  \n  public static awsLogs(props: AwsLogDriverProps): LogDriver {\n    return new AwsLogDriver(props);\n  }\n\n                                                                                               \n  public static fluentd(props?: FluentdLogDriverProps): LogDriver {\n    return new FluentdLogDriver(props);\n  }\n\n                                                                                            \n  public static gelf(props: GelfLogDriverProps): LogDriver {\n    return new GelfLogDriver(props);\n  }\n\n                                                                                                \n  public static journald(props?: JournaldLogDriverProps): LogDriver {\n    return new JournaldLogDriver(props);\n  }\n\n                                                                                                 \n  public static jsonFile(props?: JsonFileLogDriverProps): LogDriver {\n    return new JsonFileLogDriver(props);\n  }\n\n                                                                                              \n  public static splunk(props: SplunkLogDriverProps): LogDriver {\n    return new SplunkLogDriver(props);\n  }\n\n                                                                                              \n  public static syslog(props?: SyslogLogDriverProps): LogDriver {\n    return new SyslogLogDriver(props);\n  }\n\n                                                                                                                                                                                                                                                     \n  public static firelens(props: FireLensLogDriverProps): LogDriver {\n    return new FireLensLogDriver(props);\n  }\n}\n"],
  "mappings": "oNAAA,iBAAA,QAAA,oBACA,sBAAA,QAAA,yBACA,qBAAA,QAAA,wBACA,kBAAA,QAAA,qBACA,sBAAA,QAAA,yBACA,uBAAA,QAAA,0BAEA,oBAAA,QAAA,uBACA,oBAAA,QAAA,uBAGA,gBAAuB,OAEP,SAAQ,MAAwB,6EACrC,GAAI,kBAAA,aAAa,aAIZ,SAAQ,MAA6B,iFAC1C,GAAI,sBAAA,iBAAiB,aAIhB,MAAK,MAAyB,8EACnC,GAAI,mBAAA,cAAc,aAIb,UAAS,MAA8B,kFAC5C,GAAI,uBAAA,kBAAkB,aAIjB,UAAS,MAA8B,kFAC5C,GAAI,wBAAA,kBAAkB,aAIjB,QAAO,MAA2B,gFACvC,GAAI,qBAAA,gBAAgB,aAIf,QAAO,MAA4B,gFACxC,GAAI,qBAAA,gBAAgB,aAIf,UAAS,MAA6B,kFAC3C,GAAI,uBAAA,kBAAkB,QAtCjC,QAAA,WAAA",
  "names": []
}
