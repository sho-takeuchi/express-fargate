{
  "version": 3,
  "sources": ["placement.ts"],
  "sourcesContent": ["import { BuiltInAttributes } from './ec2/ec2-service';\nimport { CfnService } from './ecs.generated';\n\n                                                 \nexport enum BinPackResource {\n                                                     \n  CPU = 'cpu',\n\n                                                        \n  MEMORY = 'memory',\n}\n\n                                                                                                                                                                                                                                                                                                                    \nexport class PlacementStrategy {\n                                                                                   \n  public static spreadAcrossInstances() {\n    return new PlacementStrategy([{ type: 'spread', field: BuiltInAttributes.INSTANCE_ID }]);\n  }\n\n                                                                                                                                                                                                                                                                                                                          \n  public static spreadAcross(...fields: string[]) {\n    if (fields.length === 0) {\n      throw new Error('spreadAcross: give at least one field to spread by');\n    }\n    return new PlacementStrategy(fields.map(field => ({ type: 'spread', field })));\n  }\n\n                                                                                                                                                              \n  public static packedByCpu() {\n    return PlacementStrategy.packedBy(BinPackResource.CPU);\n  }\n\n                                                                                                                                                                 \n  public static packedByMemory() {\n    return PlacementStrategy.packedBy(BinPackResource.MEMORY);\n  }\n\n                                                                                                                     \n  public static packedBy(resource: BinPackResource) {\n    return new PlacementStrategy([{ type: 'binpack', field: resource }]);\n  }\n\n                                       \n  public static randomly() {\n    return new PlacementStrategy([{ type: 'random' }]);\n  }\n\n  /**\n   * Constructs a new instance of the PlacementStrategy class.\n   */\n  private constructor(private readonly json: CfnService.PlacementStrategyProperty[]) {\n  }\n\n                                          \n  public toJson(): CfnService.PlacementStrategyProperty[] {\n    return this.json;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                             \nexport class PlacementConstraint {\n                                                                                                                                  \n  public static distinctInstances() {\n    return new PlacementConstraint([{ type: 'distinctInstance' }]);\n  }\n\nn  public static memberOf(...expressions: string[]) {\n    return new PlacementConstraint(expressions.map(expression => ({ type: 'memberOf', expression })));\n  }\n\n  /**\n   * Constructs a new instance of the PlacementConstraint class.\n   */\n  private constructor(private readonly json: CfnService.PlacementConstraintProperty[]) {\n  }\n\n                                          \n  public toJson(): CfnService.PlacementConstraintProperty[] {\n    return this.json;\n  }\n}"],
  "mappings": "+QAAA,cAAA,QAAA,qBAIA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAEzB,iBAAA,IAAA,MAGA,iBAAA,OAAA,WALU,gBAAA,QAAA,iBAAA,SAAA,gBAAe,KAS3B,uBAA8B,CAqC5B,YAAqC,KAA4C,CAA5C,KAAA,KAAA,WAnCvB,wBAAqB,CACjC,MAAO,IAAI,mBAAkB,CAAC,CAAE,KAAM,SAAU,MAAO,cAAA,kBAAkB,qBAI7D,iBAAgB,OAAgB,CAC5C,GAAI,OAAO,SAAW,EACpB,KAAM,IAAI,OAAM,sDAElB,MAAO,IAAI,mBAAkB,OAAO,IAAI,OAAU,EAAE,KAAM,SAAU,gBAIxD,cAAW,CACvB,MAAO,mBAAkB,SAAS,gBAAgB,WAItC,iBAAc,CAC1B,MAAO,mBAAkB,SAAS,gBAAgB,cAItC,UAAS,SAAyB,8EACvC,GAAI,mBAAkB,CAAC,CAAE,KAAM,UAAW,MAAO,kBAI5C,WAAQ,CACpB,MAAO,IAAI,mBAAkB,CAAC,CAAE,KAAM,YAUjC,QAAM,CACX,MAAO,MAAK,MA1ChB,QAAA,kBAAA,6HA+CA,yBAAgC,CAc9B,YAAqC,KAA8C,CAA9C,KAAA,KAAA,WAZvB,oBAAiB,CAC7B,MAAO,IAAI,qBAAoB,CAAC,CAAE,KAAM,4BAI5B,aAAY,YAAqB,CAC7C,MAAO,IAAI,qBAAoB,YAAY,IAAI,YAAe,EAAE,KAAM,WAAY,eAU7E,QAAM,CACX,MAAO,MAAK,MAnBhB,QAAA,oBAAA",
  "names": []
}
