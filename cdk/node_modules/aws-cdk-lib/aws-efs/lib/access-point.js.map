{
  "version": 3,
  "sources": ["access-point.ts"],
  "sourcesContent": ["import { ArnFormat, IResource, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { IFileSystem } from './efs-file-system';\nimport { CfnAccessPoint } from './efs.generated';\n\n                                        \nexport interface IAccessPoint extends IResource {\n                                                               \n  readonly accessPointId: string;\n\n                                                                \n  readonly accessPointArn: string;\n\n                                    \n  readonly fileSystem: IFileSystem;\n}\n\n                                  \nexport interface Acl {\n                                                                                                                       \n  readonly ownerUid: string;\n\n                                                                                                                        \n  readonly ownerGid: string;\n\n                                                                                                                                                        \n  readonly permissions: string;\n}\n\n                                   \nexport interface PosixUser {\n                                                                                               \n  readonly uid: string;\n\n                                                                                                \n  readonly gid: string;\n\n                                                                                                                                 \n  readonly secondaryGids?: string[];\n}\n\n                                           \nexport interface AccessPointOptions {\n                                                                                                                                                                                                                                                                                                                                                                                                                \n  readonly createAcl?: Acl;\n\n                                                                                                                                                                                          \n  readonly path?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n  readonly posixUser?: PosixUser;\n}\n\n                                         \nexport interface AccessPointProps extends AccessPointOptions {\n                                   \n  readonly fileSystem: IFileSystem;\n}\n\n                                                                         \nexport interface AccessPointAttributes {\n                                                                                                                                                          \n  readonly accessPointId?: string;\n\n                                                                                                                                                         \n  readonly accessPointArn?: string;\n\n                                                                            \n  readonly fileSystem?: IFileSystem;\n}\n\nabstract class AccessPointBase extends Resource implements IAccessPoint {\n  /**\n   * The ARN of the Access Point\n   * @attribute\n   */\n  public abstract readonly accessPointArn: string;\n\n  /**\n   * The ID of the Access Point\n   * @attribute\n   */\n  public abstract readonly accessPointId: string;\n\n  /**\n   * The file system of the access point\n   */\n  public abstract readonly fileSystem: IFileSystem;\n}\n\n                                     \nexport class AccessPoint extends AccessPointBase {\n                                                              \n  public static fromAccessPointAttributes(scope: Construct, id: string, attrs: AccessPointAttributes): IAccessPoint {\n    return new ImportedAccessPoint(scope, id, attrs);\n  }\n\n                                                      \n  public static fromAccessPointId(scope: Construct, id: string, accessPointId: string): IAccessPoint {\n    return new ImportedAccessPoint(scope, id, {\n      accessPointId: accessPointId,\n    });\n  }\n\n                                                            \n  public readonly accessPointArn: string;\n\n                                                           \n  public readonly accessPointId: string;\n\n                                                    \n  public readonly fileSystem: IFileSystem;\n\n  constructor(scope: Construct, id: string, props: AccessPointProps) {\n    super(scope, id);\n\n    const resource = new CfnAccessPoint(this, 'Resource', {\n      fileSystemId: props.fileSystem.fileSystemId,\n      rootDirectory: {\n        creationInfo: props.createAcl ? {\n          ownerGid: props.createAcl.ownerGid,\n          ownerUid: props.createAcl.ownerUid,\n          permissions: props.createAcl.permissions,\n        } : undefined,\n        path: props.path,\n      },\n      posixUser: props.posixUser ? {\n        uid: props.posixUser.uid,\n        gid: props.posixUser.gid,\n        secondaryGids: props.posixUser.secondaryGids,\n      } : undefined,\n    });\n\n    this.accessPointId = resource.ref;\n    this.accessPointArn = Stack.of(scope).formatArn({\n      service: 'elasticfilesystem',\n      resource: 'access-point',\n      resourceName: this.accessPointId,\n    });\n    this.fileSystem = props.fileSystem;\n  }\n}\n\nclass ImportedAccessPoint extends AccessPointBase {\n  public readonly accessPointId: string;\n  public readonly accessPointArn: string;\n  private readonly _fileSystem?: IFileSystem;\n\n  constructor(scope: Construct, id: string, attrs: AccessPointAttributes) {\n    super(scope, id);\n\n    if (!attrs.accessPointId) {\n      if (!attrs.accessPointArn) {\n        throw new Error('One of accessPointId or AccessPointArn is required!');\n      }\n\n      this.accessPointArn = attrs.accessPointArn;\n      let maybeApId = Stack.of(scope).splitArn(attrs.accessPointArn, ArnFormat.SLASH_RESOURCE_NAME).resourceName;\n\n      if (!maybeApId) {\n        throw new Error('ARN for AccessPoint must provide the resource name.');\n      }\n\n      this.accessPointId = maybeApId;\n    } else {\n      if (attrs.accessPointArn) {\n        throw new Error('Only one of accessPointId or AccessPointArn can be provided!');\n      }\n\n      this.accessPointId = attrs.accessPointId;\n      this.accessPointArn = Stack.of(scope).formatArn({\n        service: 'elasticfilesystem',\n        resource: 'access-point',\n        resourceName: attrs.accessPointId,\n      });\n    }\n\n    this._fileSystem = attrs.fileSystem;\n  }\n\n  public get fileSystem() {\n    if (!this._fileSystem) {\n      throw new Error(\"fileSystem is not available when 'fromAccessPointId()' is used. Use 'fromAccessPointAttributes()' instead\");\n    }\n\n    return this._fileSystem;\n  }\n}\n"],
  "mappings": "kNAAA,OAAA,QAAA,cAGA,gBAAA,QAAA,mBAoEA,6BAAuC,QAAA,QAAQ,EAoB/C,yBAAiC,gBAAe,CAsB9C,YAAY,MAAkB,GAAY,MAAuB,CAC/D,MAAM,MAAO,wEAEb,KAAM,UAAW,GAAI,iBAAA,eAAe,KAAM,WAAY,CACpD,aAAc,MAAM,WAAW,aAC/B,cAAe,CACb,aAAc,MAAM,UAAY,CAC9B,SAAU,MAAM,UAAU,SAC1B,SAAU,MAAM,UAAU,SAC1B,YAAa,MAAM,UAAU,aAC3B,OACJ,KAAM,MAAM,MAEd,UAAW,MAAM,UAAY,CAC3B,IAAK,MAAM,UAAU,IACrB,IAAK,MAAM,UAAU,IACrB,cAAe,MAAM,UAAU,eAC7B,SAGN,KAAK,cAAgB,SAAS,IAC9B,KAAK,eAAiB,OAAA,MAAM,GAAG,OAAO,UAAU,CAC9C,QAAS,oBACT,SAAU,eACV,aAAc,KAAK,gBAErB,KAAK,WAAa,MAAM,iBA9CZ,2BAA0B,MAAkB,GAAY,MAA4B,iFACzF,GAAI,qBAAoB,MAAO,GAAI,aAI9B,mBAAkB,MAAkB,GAAY,cAAqB,CACjF,MAAO,IAAI,qBAAoB,MAAO,GAAI,CACxC,iBATN,QAAA,YAAA,2GAoDA,iCAAkC,gBAAe,CAK/C,YAAY,MAAkB,GAAY,MAA4B,CACpE,MAAM,MAAO,IAEb,GAAK,MAAM,cAaJ,CACL,GAAI,MAAM,eACR,KAAM,IAAI,OAAM,gEAGlB,KAAK,cAAgB,MAAM,cAC3B,KAAK,eAAiB,OAAA,MAAM,GAAG,OAAO,UAAU,CAC9C,QAAS,oBACT,SAAU,eACV,aAAc,MAAM,oBAtBE,CACxB,GAAI,CAAC,MAAM,eACT,KAAM,IAAI,OAAM,uDAGlB,KAAK,eAAiB,MAAM,eAC5B,GAAI,WAAY,OAAA,MAAM,GAAG,OAAO,SAAS,MAAM,eAAgB,OAAA,UAAU,qBAAqB,aAE9F,GAAI,CAAC,UACH,KAAM,IAAI,OAAM,uDAGlB,KAAK,cAAgB,UAcvB,KAAK,YAAc,MAAM,cAGhB,aAAU,CACnB,GAAI,CAAC,KAAK,YACR,KAAM,IAAI,OAAM,6GAGlB,MAAO,MAAK",
  "names": []
}
