{
  "version": 3,
  "sources": ["k8s-patch.ts"],
  "sourcesContent": ["import { CustomResource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { ICluster } from './cluster';\nimport { KubectlProvider } from './kubectl-provider';\n\n                                         \nexport interface KubernetesPatchProps {\n                                                                                            \n  readonly cluster: ICluster;\n\n                                                                                                 \n  readonly applyPatch: { [key: string]: any };\n\n                                                                                         \n  readonly restorePatch: { [key: string]: any };\n\n                                                                                    \n  readonly resourceName: string;\n\n                                                                          \n  readonly resourceNamespace?: string;\n\n                                                                                                                                                                \n  readonly patchType?: PatchType;\n}\n\n                                                     \nexport enum PatchType {\n                                     \n  JSON = 'json',\n                                 \n  MERGE = 'merge',\n                                      \n  STRATEGIC = 'strategic'\n}\n\n                                                                                                                                                                                                 \nexport class KubernetesPatch extends Construct {\n  constructor(scope: Construct, id: string, props: KubernetesPatchProps) {\n    super(scope, id);\n\n    const stack = Stack.of(this);\n    const provider = KubectlProvider.getOrCreate(this, props.cluster);\n\n    new CustomResource(this, 'Resource', {\n      serviceToken: provider.serviceToken,\n      resourceType: 'Custom::AWSCDK-EKS-KubernetesPatch',\n      properties: {\n        ResourceName: props.resourceName,\n        ResourceNamespace: props.resourceNamespace ?? 'default',\n        ApplyPatchJson: stack.toJsonString(props.applyPatch),\n        RestorePatchJson: stack.toJsonString(props.restorePatch),\n        ClusterName: props.cluster.clusterName,\n        RoleArn: provider.roleArn, // TODO: bake into provider's environment\n        PatchType: props.patchType ?? PatchType.STRATEGIC,\n      },\n    });\n  }\n}\n"],
  "mappings": "wOAAA,OAAA,QAAA,cACA,aAAA,QAAA,cAEA,mBAAA,QAAA,sBAwBA,GAAY,WAAZ,AAAA,UAAY,WAAS,CAEnB,WAAA,KAAA,OAEA,WAAA,MAAA,QAEA,WAAA,UAAA,cANU,UAAA,QAAA,WAAA,SAAA,UAAS,KAUrB,6BAAqC,cAAA,SAAS,CAC5C,YAAY,MAAkB,GAAY,MAA2B,WACnE,MAAM,MAAO,4EAEb,KAAM,OAAQ,OAAA,MAAM,GAAG,MACjB,SAAW,mBAAA,gBAAgB,YAAY,KAAM,MAAM,SAEzD,GAAI,QAAA,eAAe,KAAM,WAAY,CACnC,aAAc,SAAS,aACvB,aAAc,qCACd,WAAY,CACV,aAAc,MAAM,aACpB,kBAAiB,IAAE,MAAM,qBAAiB,MAAA,KAAA,OAAA,GAAI,UAC9C,eAAgB,MAAM,aAAa,MAAM,YACzC,iBAAkB,MAAM,aAAa,MAAM,cAC3C,YAAa,MAAM,QAAQ,YAC3B,QAAS,SAAS,QAClB,UAAS,IAAE,MAAM,aAAS,MAAA,KAAA,OAAA,GAAI,UAAU,cAjBhD,QAAA,gBAAA",
  "names": []
}
