{
  "version": 3,
  "sources": ["state-machine.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport * as iam from '../../aws-iam';\nimport * as sfn from '../../aws-stepfunctions';\nimport { addToDeadLetterQueueResourcePolicy, bindBaseTargetConfig, singletonEventRole, TargetBaseProps } from './util';\n\n                                                            \nexport interface SfnStateMachineProps extends TargetBaseProps {\n                                                                                                         \n  readonly input?: events.RuleTargetInput;\n\n                                                                                                                        \n  readonly role?: iam.IRole;\n}\n\n                                                                                      \nexport class SfnStateMachine implements events.IRuleTarget {\n  private readonly role: iam.IRole;\n\n  constructor(public readonly machine: sfn.IStateMachine, private readonly props: SfnStateMachineProps = {}) {\n    if (props.role) {\n      props.role.grant(new iam.ServicePrincipal('events.amazonaws.com'));\n    }\n    // no statements are passed because we are configuring permissions by using grant* helper below\n    this.role = props.role ?? singletonEventRole(machine, []);\n    machine.grantStartExecution(this.role);\n  }\n\n                                                                                                                                                                                                                             \n  public bind(_rule: events.IRule, _id?: string): events.RuleTargetConfig {\n    if (this.props.deadLetterQueue) {\n      addToDeadLetterQueueResourcePolicy(_rule, this.props.deadLetterQueue);\n    }\n\n    return {\n      ...bindBaseTargetConfig(this.props),\n      arn: this.machine.stateMachineArn,\n      role: this.role,\n      input: this.props.input,\n      targetResource: this.machine,\n    };\n  }\n}\n"],
  "mappings": "sNACA,IAAA,QAAA,iBAEA,OAAA,QAAA,UAYA,qBAA4B,CAG1B,YAA4B,QAA6C,MAA8B,GAAE,QAA7E,KAAA,QAAA,QAA6C,KAAA,MAAA,sKACnE,MAAM,MACR,MAAM,KAAK,MAAM,GAAI,KAAI,iBAAiB,yBAG5C,KAAK,KAAI,IAAG,MAAM,QAAI,MAAA,KAAA,OAAA,GAAI,OAAA,mBAAmB,QAAS,IACtD,QAAQ,oBAAoB,KAAK,MAI5B,KAAK,MAAqB,IAAY,oEACvC,KAAK,MAAM,iBACb,OAAA,mCAAmC,MAAO,KAAK,MAAM,iBAGhD,IACF,OAAA,qBAAqB,KAAK,OAC7B,IAAK,KAAK,QAAQ,gBAClB,KAAM,KAAK,KACX,MAAO,KAAK,MAAM,MAClB,eAAgB,KAAK,UAvB3B,QAAA,gBAAA",
  "names": []
}
