{
  "version": 3,
  "sources": ["alb.ts"],
  "sourcesContent": ["import * as elbv2 from '../../aws-elasticloadbalancingv2';\nimport * as ga from '../../aws-globalaccelerator';\nimport { validateWeight } from './_util';\n\n                                                           \nexport interface ApplicationLoadBalancerEndpointOptions {\n                                                                                                                                      \n  readonly weight?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly preserveClientIp?: boolean;\n}\n\n                                                                            \nexport class ApplicationLoadBalancerEndpoint implements ga.IEndpoint {\n  public readonly region?: string;\n\n  constructor(private readonly loadBalancer: elbv2.IApplicationLoadBalancer, private readonly options: ApplicationLoadBalancerEndpointOptions = {}) {\n    validateWeight(options.weight);\n    this.region = loadBalancer.env.region;\n  }\n\n  public renderEndpointConfiguration(): any {\n    return {\n      endpointId: this.loadBalancer.loadBalancerArn,\n      weight: this.options.weight,\n      clientIpPreservationEnabled: this.options.preserveClientIp,\n    } as ga.CfnEndpointGroup.EndpointConfigurationProperty;\n  }\n}"],
  "mappings": "sOAEA,QAAA,QAAA,WAYA,qCAA4C,CAG1C,YAA6B,aAA+D,QAAkD,GAAE,CAAnH,KAAA,aAAA,aAA+D,KAAA,QAAA,kOAC1F,QAAA,eAAe,QAAQ,QACvB,KAAK,OAAS,aAAa,IAAI,OAG1B,6BAA2B,CAChC,MAAO,CACL,WAAY,KAAK,aAAa,gBAC9B,OAAQ,KAAK,QAAQ,OACrB,4BAA6B,KAAK,QAAQ,mBAZhD,QAAA,gCAAA",
  "names": []
}
