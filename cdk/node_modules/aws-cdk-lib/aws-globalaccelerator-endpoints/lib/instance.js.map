{
  "version": 3,
  "sources": ["instance.ts"],
  "sourcesContent": ["import * as ec2 from '../../aws-ec2';\nimport * as ga from '../../aws-globalaccelerator';\nimport { validateWeight } from './_util';\n\n                                                       \nexport interface InstanceEndpointProps {\n                                                                                                                                      \n  readonly weight?: number;\n\n                                                                                                                                                                                                                                                                                                                                                          \n  readonly preserveClientIp?: boolean;\n}\n\n                                                               \nexport class InstanceEndpoint implements ga.IEndpoint {\n  public readonly region?: string;\n\n  constructor(private readonly instance: ec2.IInstance, private readonly options: InstanceEndpointProps = {}) {\n    validateWeight(options.weight);\n\n    this.region = instance.env.region;\n  }\n\n  public renderEndpointConfiguration(): any {\n    return {\n      endpointId: this.instance.instanceId,\n      weight: this.options.weight,\n      clientIpPreservationEnabled: this.options.preserveClientIp,\n    } as ga.CfnEndpointGroup.EndpointConfigurationProperty;\n  }\n}"],
  "mappings": "uNAEA,QAAA,QAAA,WAYA,sBAA6B,CAG3B,YAA6B,SAA0C,QAAiC,GAAE,CAA7E,KAAA,SAAA,SAA0C,KAAA,QAAA,2KACrE,QAAA,eAAe,QAAQ,QAEvB,KAAK,OAAS,SAAS,IAAI,OAGtB,6BAA2B,CAChC,MAAO,CACL,WAAY,KAAK,SAAS,WAC1B,OAAQ,KAAK,QAAQ,OACrB,4BAA6B,KAAK,QAAQ,mBAbhD,QAAA,iBAAA",
  "names": []
}
