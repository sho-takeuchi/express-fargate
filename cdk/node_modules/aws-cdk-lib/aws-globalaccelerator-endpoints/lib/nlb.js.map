{
  "version": 3,
  "sources": ["nlb.ts"],
  "sourcesContent": ["import * as elbv2 from '../../aws-elasticloadbalancingv2';\nimport * as ga from '../../aws-globalaccelerator';\nimport { validateWeight } from './_util';\n\n                                                       \nexport interface NetworkLoadBalancerEndpointProps {\n                                                                                                                                      \n  readonly weight?: number;\n}\n\n                                                                       \nexport class NetworkLoadBalancerEndpoint implements ga.IEndpoint {\n  public readonly region?: string;\n\n  constructor(private readonly loadBalancer: elbv2.INetworkLoadBalancer, private readonly options: NetworkLoadBalancerEndpointProps = {}) {\n    validateWeight(options.weight);\n    this.region = loadBalancer.env.region;\n  }\n\n  public renderEndpointConfiguration(): any {\n    return {\n      endpointId: this.loadBalancer.loadBalancerArn,\n      weight: this.options.weight,\n    } as ga.CfnEndpointGroup.EndpointConfigurationProperty;\n  }\n}"],
  "mappings": "kOAEA,QAAA,QAAA,WASA,iCAAwC,CAGtC,YAA6B,aAA2D,QAA4C,GAAE,CAAzG,KAAA,aAAA,aAA2D,KAAA,QAAA,wNACtF,QAAA,eAAe,QAAQ,QACvB,KAAK,OAAS,aAAa,IAAI,OAG1B,6BAA2B,CAChC,MAAO,CACL,WAAY,KAAK,aAAa,gBAC9B,OAAQ,KAAK,QAAQ,SAX3B,QAAA,4BAAA",
  "names": []
}
