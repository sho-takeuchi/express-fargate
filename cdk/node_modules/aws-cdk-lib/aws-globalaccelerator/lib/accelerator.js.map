{
  "version": 3,
  "sources": ["accelerator.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport * as ga from './globalaccelerator.generated';\nimport { Listener, ListenerOptions } from './listener';\n\n                                           \nexport interface IAccelerator extends cdk.IResource {\n                                                                \n  readonly acceleratorArn: string;\n\n                                                                                                                                                                   \n  readonly dnsName: string;\n}\n\n                                                  \nexport interface AcceleratorProps {\n                                                                             \n  readonly acceleratorName?: string;\n\n                                                                                      \n  readonly enabled?: boolean;\n}\n\n                                                                             \nexport interface AcceleratorAttributes {\n                                           \n  readonly acceleratorArn: string;\n\n                                                \n  readonly dnsName: string;\n}\n\n                                    \nexport class Accelerator extends cdk.Resource implements IAccelerator {\n                                       \n  public static fromAcceleratorAttributes(scope: Construct, id: string, attrs: AcceleratorAttributes): IAccelerator {\n    class Import extends cdk.Resource implements IAccelerator {\n      public readonly acceleratorArn = attrs.acceleratorArn;\n      public readonly dnsName = attrs.dnsName;\n    }\n    return new Import(scope, id);\n  }\n                                            \n  public readonly acceleratorArn: string;\n\n                                                                                                                                              \n  public readonly dnsName: string;\n\n  constructor(scope: Construct, id: string, props: AcceleratorProps = {}) {\n    super(scope, id);\n\n    const resource = new ga.CfnAccelerator(this, 'Resource', {\n      enabled: props.enabled ?? true,\n      name: props.acceleratorName ?? cdk.Names.uniqueId(this),\n    });\n\n    this.acceleratorArn = resource.attrAcceleratorArn;\n    this.dnsName = resource.attrDnsName;\n  }\n\n                                                  \n  public addListener(id: string, options: ListenerOptions) {\n    return new Listener(this, id, {\n      accelerator: this,\n      ...options,\n    });\n  }\n}\n"],
  "mappings": "kNAAA,IAAA,QAAA,cAEA,GAAA,QAAA,iCACA,WAAA,QAAA,cA8BA,yBAAiC,KAAI,QAAQ,CAe3C,YAAY,MAAkB,GAAY,MAA0B,GAAE,WACpE,MAAM,MAAO,sFAEb,KAAM,UAAW,GAAI,IAAG,eAAe,KAAM,WAAY,CACvD,QAAO,IAAE,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,GAC1B,KAAI,IAAE,MAAM,mBAAe,MAAA,KAAA,OAAA,GAAI,IAAI,MAAM,SAAS,QAGpD,KAAK,eAAiB,SAAS,mBAC/B,KAAK,QAAU,SAAS,kBAtBZ,2BAA0B,MAAkB,GAAY,MAA4B,wFAChG,oBAAqB,KAAI,QAAQ,CAAjC,aAAA,qBACkB,KAAA,eAAiB,MAAM,eACvB,KAAA,QAAU,MAAM,SAElC,MAAO,IAAI,QAAO,MAAO,IAqBpB,YAAY,GAAY,QAAwB,2FAC9C,GAAI,YAAA,SAAS,KAAM,GAAI,CAC5B,YAAa,QACV,WA/BT,QAAA,YAAA",
  "names": []
}
