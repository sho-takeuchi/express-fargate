{
  "version": 3,
  "sources": ["listener.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { IAccelerator } from './accelerator';\nimport { EndpointGroup, EndpointGroupOptions } from './endpoint-group';\nimport * as ga from './globalaccelerator.generated';\n\n                                    \nexport interface IListener extends cdk.IResource {\n                                                             \n  readonly listenerArn: string;\n}\n\n                                         \nexport interface ListenerOptions {\n                                                                                     \n  readonly listenerName?: string;\n\n                                                                                            \n  readonly portRanges: PortRange[];\n\n                                                                                                                           \n  readonly protocol?: ConnectionProtocol;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n  readonly clientAffinity?: ClientAffinity;\n}\n\n                                            \nexport interface ListenerProps extends ListenerOptions {\n                                                  \n  readonly accelerator: IAccelerator;\n}\n\n                                                                                       \nexport interface PortRange {\n                                                                 \n  readonly fromPort: number;\n\n                                                                                                        \n  readonly toPort?: number;\n}\n\n                                                                            \nexport enum ConnectionProtocol {\n                    \n  TCP = 'TCP',\n                    \n  UDP = 'UDP',\n}\n\n                                                                                                                                                                                                                                             \nexport enum ClientAffinity {\n                                                                                                                          \n  NONE = 'NONE',\n\n                                                                                                                                                                                 \n  SOURCE_IP = 'SOURCE_IP',\n}\n\n                                         \nexport class Listener extends cdk.Resource implements IListener {\n                                \n  public static fromListenerArn(scope: Construct, id: string, listenerArn: string): IListener {\n    class Import extends cdk.Resource implements IListener {\n      public readonly listenerArn = listenerArn;\n    }\n    return new Import(scope, id);\n  }\n\n  public readonly listenerArn: string;\n                                                              \n  public readonly listenerName: string;\n\n  constructor(scope: Construct, id: string, props: ListenerProps) {\n    super(scope, id);\n\n    const resource = new ga.CfnListener(this, 'Resource', {\n      acceleratorArn: props.accelerator.acceleratorArn,\n      portRanges: props.portRanges.map(m => ({\n        fromPort: m.fromPort,\n        toPort: m.toPort ?? m.fromPort,\n      })),\n      protocol: props.protocol ?? ConnectionProtocol.TCP,\n      clientAffinity: props.clientAffinity ?? ClientAffinity.NONE,\n    });\n\n    this.listenerArn = resource.attrListenerArn;\n    this.listenerName = props.listenerName ?? resource.logicalId;\n  }\n\n                                                          \n  public addEndpointGroup(id: string, options: EndpointGroupOptions = {}) {\n    return new EndpointGroup(this, id, {\n      listener: this,\n      ...options,\n    });\n  }\n}\n"],
  "mappings": "iQAAA,IAAA,QAAA,cAGA,iBAAA,QAAA,oBACA,GAAA,QAAA,iCAuCA,GAAY,oBAAZ,AAAA,UAAY,oBAAkB,CAE5B,oBAAA,IAAA,MAEA,oBAAA,IAAA,QAJU,mBAAA,QAAA,oBAAA,SAAA,mBAAkB,KAQ9B,GAAY,gBAAZ,AAAA,UAAY,gBAAc,CAExB,gBAAA,KAAA,OAGA,gBAAA,UAAA,cALU,eAAA,QAAA,gBAAA,SAAA,eAAc,KAS1B,sBAA8B,KAAI,QAAQ,CAaxC,YAAY,MAAkB,GAAY,MAAoB,cAC5D,MAAM,MAAO,mFAEb,KAAM,UAAW,GAAI,IAAG,YAAY,KAAM,WAAY,CACpD,eAAgB,MAAM,YAAY,eAClC,WAAY,MAAM,WAAW,IAAI,GAAI,SAAC,MAAC,CACrC,SAAU,EAAE,SACZ,OAAM,KAAE,EAAE,UAAM,MAAA,MAAA,OAAA,IAAI,EAAE,YAExB,SAAQ,IAAE,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,mBAAmB,IAC/C,eAAc,IAAE,MAAM,kBAAc,MAAA,KAAA,OAAA,GAAI,eAAe,OAGzD,KAAK,YAAc,SAAS,gBAC5B,KAAK,aAAY,IAAG,MAAM,gBAAY,MAAA,KAAA,OAAA,GAAI,SAAS,gBAzBvC,iBAAgB,MAAkB,GAAY,YAAmB,CAC7E,oBAAqB,KAAI,QAAQ,CAAjC,aAAA,qBACkB,KAAA,YAAc,aAEhC,MAAO,IAAI,QAAO,MAAO,IAyBpB,iBAAiB,GAAY,QAAgC,GAAE,gGAC7D,GAAI,kBAAA,cAAc,KAAM,GAAI,CACjC,SAAU,QACP,WAlCT,QAAA,SAAA",
  "names": []
}
