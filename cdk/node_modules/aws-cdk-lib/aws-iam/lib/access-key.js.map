{
  "version": 3,
  "sources": ["access-key.ts"],
  "sourcesContent": ["import { IResource, Resource, SecretValue } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnAccessKey } from './iam.generated';\nimport { IUser } from './user';\n\n                                                \nexport enum AccessKeyStatus {\n                                                                                   \n  ACTIVE = 'Active',\n\n                                                                                          \n  INACTIVE = 'Inactive'\n}\n\n                                                                                                                                    \nexport interface IAccessKey extends IResource {\n                                                        \n  readonly accessKeyId: string;\n\n                                                            \n  readonly secretAccessKey: SecretValue;\n}\n\n                                                     \nexport interface AccessKeyProps {\n                                                                                                                                                                                                                                                                                   \n  readonly serial?: number;\n\n                                                                                                                                                                                       \n  readonly status?: AccessKeyStatus;\n\n                                                                                                                                                                                                                                      \n  readonly user: IUser;\n}\n\n                                       \nexport class AccessKey extends Resource implements IAccessKey {\n  public readonly accessKeyId: string;\n  public readonly secretAccessKey: SecretValue;\n\n  constructor(scope: Construct, id: string, props: AccessKeyProps) {\n    super(scope, id);\n    const accessKey = new CfnAccessKey(this, 'Resource', {\n      userName: props.user.userName,\n      serial: props.serial,\n      status: props.status,\n    });\n\n    this.accessKeyId = accessKey.ref;\n\n    // Not actually 'plainText', but until we have a more apt constructor\n    this.secretAccessKey = SecretValue.plainText(accessKey.attrSecretAccessKey);\n  }\n}\n"],
  "mappings": "wOAAA,OAAA,QAAA,cAEA,gBAAA,QAAA,mBAIA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAEzB,iBAAA,OAAA,SAGA,iBAAA,SAAA,aALU,gBAAA,QAAA,iBAAA,SAAA,gBAAe,KA8B3B,uBAA+B,QAAA,QAAQ,CAIrC,YAAY,MAAkB,GAAY,MAAqB,CAC7D,MAAM,MAAO,sEACb,KAAM,WAAY,GAAI,iBAAA,aAAa,KAAM,WAAY,CACnD,SAAU,MAAM,KAAK,SACrB,OAAQ,MAAM,OACd,OAAQ,MAAM,SAGhB,KAAK,YAAc,UAAU,IAG7B,KAAK,gBAAkB,OAAA,YAAY,UAAU,UAAU,sBAf3D,QAAA,UAAA",
  "names": []
}
