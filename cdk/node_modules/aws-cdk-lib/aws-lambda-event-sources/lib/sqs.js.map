{
  "version": 3,
  "sources": ["sqs.ts"],
  "sourcesContent": ["import * as lambda from '../../aws-lambda';\nimport * as sqs from '../../aws-sqs';\nimport { Duration, Names, Token } from '../../core';\n\nexport interface SqsEventSourceProps {\n                                                                                                                                                                                                                                                                                                                                                                                     \n  readonly batchSize?: number;\n\n                                                                                                                                                                                                                                                                                                        \n  readonly maxBatchingWindow?: Duration;\n\n                                                                                                                                                                                                                                       \n  readonly reportBatchItemFailures?: boolean;\n\n                                                                                           \n  readonly enabled?: boolean;\n}\n\n                                                                     \nexport class SqsEventSource implements lambda.IEventSource {\n  private _eventSourceMappingId?: string = undefined;\n\n  constructor(readonly queue: sqs.IQueue, private readonly props: SqsEventSourceProps = { }) {\n    if (this.props.maxBatchingWindow !== undefined) {\n      if (queue.fifo) {\n        throw new Error('Batching window is not supported for FIFO queues');\n      }\n      if (!this.props.maxBatchingWindow.isUnresolved() && this.props.maxBatchingWindow.toSeconds() > 300) {\n        throw new Error(`Maximum batching window must be 300 seconds or less (given ${this.props.maxBatchingWindow.toHumanString()})`);\n      }\n    }\n    if (this.props.batchSize !== undefined && !Token.isUnresolved(this.props.batchSize)) {\n      if (this.props.maxBatchingWindow !== undefined && (this.props.batchSize < 1 || this.props.batchSize > 10000)) {\n        throw new Error(`Maximum batch size must be between 1 and 10000 inclusive (given ${this.props.batchSize}) when batching window is specified.`);\n      }\n      if (this.props.maxBatchingWindow === undefined && (this.props.batchSize < 1 || this.props.batchSize > 10)) {\n        throw new Error(`Maximum batch size must be between 1 and 10 inclusive (given ${this.props.batchSize}) when batching window is not specified.`);\n      }\n    }\n  }\n\n  public bind(target: lambda.IFunction) {\n    const eventSourceMapping = target.addEventSourceMapping(`SqsEventSource:${Names.nodeUniqueId(this.queue.node)}`, {\n      batchSize: this.props.batchSize,\n      maxBatchingWindow: this.props.maxBatchingWindow,\n      reportBatchItemFailures: this.props.reportBatchItemFailures,\n      enabled: this.props.enabled,\n      eventSourceArn: this.queue.queueArn,\n    });\n    this._eventSourceMappingId = eventSourceMapping.eventSourceMappingId;\n\n    this.queue.grantConsumeMessages(target);\n  }\n\n                                                           \n  public get eventSourceMappingId(): string {\n    if (!this._eventSourceMappingId) {\n      throw new Error('SqsEventSource is not yet bound to an event source mapping');\n    }\n    return this._eventSourceMappingId;\n  }\n}\n"],
  "mappings": "qNAEA,OAAA,QAAA,cAiBA,oBAA2B,CAGzB,YAAqB,MAAoC,MAA6B,GAAG,CACvF,GADmB,KAAA,MAAA,MAAoC,KAAA,MAAA,MAFjD,KAAA,sBAAiC,yJAGnC,KAAK,MAAM,oBAAsB,OAAW,CAC9C,GAAI,MAAM,KACR,KAAM,IAAI,OAAM,oDAElB,GAAI,CAAC,KAAK,MAAM,kBAAkB,gBAAkB,KAAK,MAAM,kBAAkB,YAAc,IAC7F,KAAM,IAAI,OAAM,8DAA8D,KAAK,MAAM,kBAAkB,oBAG/G,GAAI,KAAK,MAAM,YAAc,QAAa,CAAC,OAAA,MAAM,aAAa,KAAK,MAAM,WAAY,CACnF,GAAI,KAAK,MAAM,oBAAsB,QAAc,MAAK,MAAM,UAAY,GAAK,KAAK,MAAM,UAAY,KACpG,KAAM,IAAI,OAAM,mEAAmE,KAAK,MAAM,iDAEhG,GAAI,KAAK,MAAM,oBAAsB,QAAc,MAAK,MAAM,UAAY,GAAK,KAAK,MAAM,UAAY,IACpG,KAAM,IAAI,OAAM,gEAAgE,KAAK,MAAM,sDAK1F,KAAK,OAAwB,kEAClC,KAAM,oBAAqB,OAAO,sBAAsB,kBAAkB,OAAA,MAAM,aAAa,KAAK,MAAM,QAAS,CAC/G,UAAW,KAAK,MAAM,UACtB,kBAAmB,KAAK,MAAM,kBAC9B,wBAAyB,KAAK,MAAM,wBACpC,QAAS,KAAK,MAAM,QACpB,eAAgB,KAAK,MAAM,WAE7B,KAAK,sBAAwB,mBAAmB,qBAEhD,KAAK,MAAM,qBAAqB,WAIvB,uBAAoB,CAC7B,GAAI,CAAC,KAAK,sBACR,KAAM,IAAI,OAAM,8DAElB,MAAO,MAAK,uBAxChB,QAAA,eAAA",
  "names": []
}
