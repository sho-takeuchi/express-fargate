{
  "version": 3,
  "sources": ["code-signing-config.ts"],
  "sourcesContent": ["import { ISigningProfile } from '../../aws-signer';\nimport { ArnFormat, IResource, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnCodeSigningConfig } from './lambda.generated';\n\n                                                                               \nexport enum UntrustedArtifactOnDeployment {\n                                                                                          \n  ENFORCE = 'Enforce',\n\n                                                                                                                                                                                                                          \n  WARN = 'Warn',\n}\n\n                                \nexport interface ICodeSigningConfig extends IResource {\n                                                               \n  readonly codeSigningConfigArn: string;\n\n                                                              \n  readonly codeSigningConfigId: string;\n}\n\n                                                                   \nexport interface CodeSigningConfigProps {\n                                                                                                       \n  readonly signingProfiles: ISigningProfile[],\n\n                                                                                                                                                                                                                                                                                                                                                                     \n  readonly untrustedArtifactOnDeployment?: UntrustedArtifactOnDeployment,\n\n                                                                                             \n  readonly description?: string,\n}\n\n                                                                                        \nexport class CodeSigningConfig extends Resource implements ICodeSigningConfig {\n                                                                                                                                                                                                                                                                              \n  public static fromCodeSigningConfigArn( scope: Construct, id: string, codeSigningConfigArn: string): ICodeSigningConfig {\n    const codeSigningProfileId = Stack.of(scope).splitArn(codeSigningConfigArn, ArnFormat.SLASH_RESOURCE_NAME).resourceName;\n    if (!codeSigningProfileId) {\n      throw new Error(`Code signing config ARN must be in the format 'arn:aws:lambda:<region>:<account>:code-signing-config:<codeSigningConfigArn>', got: '${codeSigningConfigArn}'`);\n    }\n    const assertedCodeSigningProfileId = codeSigningProfileId;\n    class Import extends Resource implements ICodeSigningConfig {\n      public readonly codeSigningConfigArn = codeSigningConfigArn;\n      public readonly codeSigningConfigId = assertedCodeSigningProfileId;\n\n      constructor() {\n        super(scope, id);\n      }\n    }\n    return new Import();\n  }\n\n  public readonly codeSigningConfigArn: string;\n  public readonly codeSigningConfigId: string;\n\n  constructor(scope: Construct, id: string, props: CodeSigningConfigProps) {\n    super(scope, id);\n\n    const signingProfileVersionArns = props.signingProfiles.map(signingProfile => {\n      return signingProfile.signingProfileVersionArn;\n    });\n\n    const resource: CfnCodeSigningConfig = new CfnCodeSigningConfig(this, 'Resource', {\n      allowedPublishers: {\n        signingProfileVersionArns,\n      },\n      codeSigningPolicies: {\n        untrustedArtifactOnDeployment: props.untrustedArtifactOnDeployment ?? UntrustedArtifactOnDeployment.WARN,\n      },\n      description: props.description,\n    });\n    this.codeSigningConfigArn = resource.attrCodeSigningConfigArn;\n    this.codeSigningConfigId = resource.attrCodeSigningConfigId;\n  }\n}\n"],
  "mappings": "8PACA,OAAA,QAAA,cAEA,mBAAA,QAAA,sBAGA,GAAY,+BAAZ,AAAA,UAAY,+BAA6B,CAEvC,+BAAA,QAAA,UAGA,+BAAA,KAAA,SALU,8BAAA,QAAA,+BAAA,SAAA,8BAA6B,KA8BzC,+BAAuC,QAAA,QAAQ,CAsB7C,YAAY,MAAkB,GAAY,MAA6B,QACrE,MAAM,MAAO,iFAEb,KAAM,2BAA4B,MAAM,gBAAgB,IAAI,gBACnD,eAAe,0BAGlB,SAAiC,GAAI,oBAAA,qBAAqB,KAAM,WAAY,CAChF,kBAAmB,CACjB,2BAEF,oBAAqB,CACnB,8BAA6B,IAAE,MAAM,iCAA6B,MAAA,KAAA,OAAA,GAAI,8BAA8B,MAEtG,YAAa,MAAM,cAErB,KAAK,qBAAuB,SAAS,yBACrC,KAAK,oBAAsB,SAAS,8BArCxB,0BAA0B,MAAkB,GAAY,qBAA4B,CAChG,KAAM,sBAAuB,OAAA,MAAM,GAAG,OAAO,SAAS,qBAAsB,OAAA,UAAU,qBAAqB,aAC3G,GAAI,CAAC,qBACH,KAAM,IAAI,OAAM,uIAAuI,yBAEzJ,KAAM,8BAA+B,qBACrC,oBAAqB,QAAA,QAAQ,CAI3B,aAAA,CACE,MAAM,MAAO,IAJC,KAAA,qBAAuB,qBACvB,KAAA,oBAAsB,8BAMxC,MAAO,IAAI,SAhBf,QAAA,kBAAA",
  "names": []
}
