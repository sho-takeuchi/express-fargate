{
  "version": 3,
  "sources": ["kinesis.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as kinesis from '../../aws-kinesis';\nimport * as logs from '../../aws-logs';\nimport { Construct } from 'constructs';\n\n                                                                         \nexport class KinesisDestination implements logs.ILogSubscriptionDestination {\n  constructor(private readonly stream: kinesis.IStream) {\n  }\n\n  public bind(scope: Construct, _sourceLogGroup: logs.ILogGroup): logs.LogSubscriptionDestinationConfig {\n    // Following example from https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/SubscriptionFilters.html#DestinationKinesisExample\n    // Create a role to be assumed by CWL that can write to this stream and pass itself.\n    const id = 'CloudWatchLogsCanPutRecords';\n    const role = scope.node.tryFindChild(id) as iam.IRole || new iam.Role(scope, id, {\n      assumedBy: new iam.ServicePrincipal('logs.amazonaws.com'),\n    });\n    this.stream.grantWrite(role);\n    role.grantPassRole(role);\n    return { arn: this.stream.streamArn, role };\n  }\n}\n"],
  "mappings": "yNAAA,IAAA,QAAA,iBAMA,wBAA+B,CAC7B,YAA6B,OAAuB,CAAvB,KAAA,OAAA,uEAGtB,KAAK,MAAkB,gBAA+B,yEAG3D,KAAM,IAAK,8BACL,KAAO,MAAM,KAAK,aAAa,KAAoB,GAAI,KAAI,KAAK,MAAO,GAAI,CAC/E,UAAW,GAAI,KAAI,iBAAiB,wBAEtC,YAAK,OAAO,WAAW,MACvB,KAAK,cAAc,MACZ,CAAE,IAAK,KAAK,OAAO,UAAW,OAbzC,QAAA,mBAAA",
  "names": []
}
