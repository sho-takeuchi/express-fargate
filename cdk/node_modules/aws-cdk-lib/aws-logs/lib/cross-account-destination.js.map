{
  "version": 3,
  "sources": ["cross-account-destination.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { ILogGroup } from './log-group';\nimport { CfnDestination } from './logs.generated';\nimport { ILogSubscriptionDestination, LogSubscriptionDestinationConfig } from './subscription-filter';\nimport { ArnFormat } from '../../core';\n\n                                                   \nexport interface CrossAccountDestinationProps {\n                                                                                            \n  readonly destinationName?: string;\n\n                                                                                                                                                        \n  readonly role: iam.IRole;\n\n                                                 \n  readonly targetArn: string;\n}\n\nnexport class CrossAccountDestination extends cdk.Resource implements ILogSubscriptionDestination {\n                                                                     \n  public readonly policyDocument: iam.PolicyDocument = new iam.PolicyDocument();\n\n                                                                                \n  public readonly destinationName: string;\n\n                                                                               \n  public readonly destinationArn: string;\n\n  /**\n   * The inner resource\n   */\n  private readonly resource: CfnDestination;\n\n  constructor(scope: Construct, id: string, props: CrossAccountDestinationProps) {\n    super(scope, id, {\n      physicalName: props.destinationName ||\n        // In the underlying model, the name is not optional, but we make it so anyway.\n        cdk.Lazy.string({ produce: () => this.generateUniqueName() }),\n    });\n\n    this.resource = new CfnDestination(this, 'Resource', {\n      destinationName: this.physicalName!,\n      // Must be stringified policy\n      destinationPolicy: this.lazyStringifiedPolicyDocument(),\n      roleArn: props.role.roleArn,\n      targetArn: props.targetArn,\n    });\n\n    this.destinationArn = this.getResourceArnAttribute(this.resource.attrArn, {\n      service: 'logs',\n      resource: 'destination',\n      resourceName: this.physicalName,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n    this.destinationName = this.getResourceNameAttribute(this.resource.ref);\n  }\n\n  public addToPolicy(statement: iam.PolicyStatement) {\n    this.policyDocument.addStatements(statement);\n  }\n\n  public bind(_scope: Construct, _sourceLogGroup: ILogGroup): LogSubscriptionDestinationConfig {\n    return { arn: this.destinationArn };\n  }\n\n  /**\n   * Generate a unique Destination name in case the user didn't supply one\n   */\n  private generateUniqueName(): string {\n    // Combination of stack name and LogicalID, which are guaranteed to be unique.\n    return cdk.Stack.of(this).stackName + '-' + this.resource.logicalId;\n  }\n\n  /**\n   * Return a stringified JSON version of the PolicyDocument\n   */\n  private lazyStringifiedPolicyDocument(): string {\n    return cdk.Lazy.string({\n      produce: () =>\n        this.policyDocument.isEmpty ? '' : cdk.Stack.of(this).toJsonString(this.policyDocument),\n    });\n  }\n}\n"],
  "mappings": "8NAAA,IAAA,QAAA,iBACA,IAAA,QAAA,cAGA,iBAAA,QAAA,oBAEA,OAAA,QAAA,cAeA,qCAA6C,KAAI,QAAQ,CAevD,YAAY,MAAkB,GAAY,MAAmC,CAC3E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,iBAElB,IAAI,KAAK,OAAO,CAAE,QAAS,IAAM,KAAK,yBAjB5B,KAAA,eAAqC,GAAI,KAAI,gGAoB3D,KAAK,SAAW,GAAI,kBAAA,eAAe,KAAM,WAAY,CACnD,gBAAiB,KAAK,aAEtB,kBAAmB,KAAK,gCACxB,QAAS,MAAM,KAAK,QACpB,UAAW,MAAM,YAGnB,KAAK,eAAiB,KAAK,wBAAwB,KAAK,SAAS,QAAS,CACxE,QAAS,OACT,SAAU,cACV,aAAc,KAAK,aACnB,UAAW,OAAA,UAAU,sBAEvB,KAAK,gBAAkB,KAAK,yBAAyB,KAAK,SAAS,KAG9D,YAAY,UAA8B,wEAC/C,KAAK,eAAe,cAAc,WAG7B,KAAK,OAAmB,gBAA0B,gFAChD,CAAE,IAAK,KAAK,gBAMb,oBAAkB,CAExB,MAAO,KAAI,MAAM,GAAG,MAAM,UAAY,IAAM,KAAK,SAAS,UAMpD,+BAA6B,CACnC,MAAO,KAAI,KAAK,OAAO,CACrB,QAAS,IACP,KAAK,eAAe,QAAU,GAAK,IAAI,MAAM,GAAG,MAAM,aAAa,KAAK,mBA7DhF,QAAA,wBAAA",
  "names": []
}
