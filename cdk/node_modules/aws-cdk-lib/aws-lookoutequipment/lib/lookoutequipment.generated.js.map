{
  "version": 3,
  "sources": ["lookoutequipment.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:32.365Z\",\"fingerprint\":\"KDHeEIJ1B2i+lWPeOBh/pPgVxR+ls/U1jTd0yESWbcY=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                                 \nexport interface CfnInferenceSchedulerProps {\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    readonly dataInputConfiguration: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                       \n    readonly dataOutputConfiguration: any | cdk.IResolvable;\n\nn    readonly dataUploadFrequency: string;\n\n                                                                                                                                                                                                                                                                           \n    readonly modelName: string;\n\n                                                                                                                                                                                                                                                                                                                               \n    readonly roleArn: string;\n\nn    readonly dataDelayOffsetInMinutes?: number;\n\n                                                                                                                                                                                                                                                                  \n    readonly inferenceSchedulerName?: string;\n\n                                                                                                                                                                                                                                                                                                                                               \n    readonly serverSideKmsKeyId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnInferenceSchedulerProps`\n *\n * @param properties - the TypeScript properties of a `CfnInferenceSchedulerProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnInferenceSchedulerPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dataDelayOffsetInMinutes', cdk.validateNumber)(properties.dataDelayOffsetInMinutes));\n    errors.collect(cdk.propertyValidator('dataInputConfiguration', cdk.requiredValidator)(properties.dataInputConfiguration));\n    errors.collect(cdk.propertyValidator('dataInputConfiguration', cdk.validateObject)(properties.dataInputConfiguration));\n    errors.collect(cdk.propertyValidator('dataOutputConfiguration', cdk.requiredValidator)(properties.dataOutputConfiguration));\n    errors.collect(cdk.propertyValidator('dataOutputConfiguration', cdk.validateObject)(properties.dataOutputConfiguration));\n    errors.collect(cdk.propertyValidator('dataUploadFrequency', cdk.requiredValidator)(properties.dataUploadFrequency));\n    errors.collect(cdk.propertyValidator('dataUploadFrequency', cdk.validateString)(properties.dataUploadFrequency));\n    errors.collect(cdk.propertyValidator('inferenceSchedulerName', cdk.validateString)(properties.inferenceSchedulerName));\n    errors.collect(cdk.propertyValidator('modelName', cdk.requiredValidator)(properties.modelName));\n    errors.collect(cdk.propertyValidator('modelName', cdk.validateString)(properties.modelName));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('serverSideKmsKeyId', cdk.validateString)(properties.serverSideKmsKeyId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnInferenceSchedulerProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::LookoutEquipment::InferenceScheduler` resource\n *\n * @param properties - the TypeScript properties of a `CfnInferenceSchedulerProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::LookoutEquipment::InferenceScheduler` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInferenceSchedulerPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInferenceSchedulerPropsValidator(properties).assertSuccess();\n    return {\n        DataInputConfiguration: cdk.objectToCloudFormation(properties.dataInputConfiguration),\n        DataOutputConfiguration: cdk.objectToCloudFormation(properties.dataOutputConfiguration),\n        DataUploadFrequency: cdk.stringToCloudFormation(properties.dataUploadFrequency),\n        ModelName: cdk.stringToCloudFormation(properties.modelName),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n        DataDelayOffsetInMinutes: cdk.numberToCloudFormation(properties.dataDelayOffsetInMinutes),\n        InferenceSchedulerName: cdk.stringToCloudFormation(properties.inferenceSchedulerName),\n        ServerSideKmsKeyId: cdk.stringToCloudFormation(properties.serverSideKmsKeyId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInferenceSchedulerPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInferenceSchedulerProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInferenceSchedulerProps>();\n    ret.addPropertyResult('dataInputConfiguration', 'DataInputConfiguration', cfn_parse.FromCloudFormation.getAny(properties.DataInputConfiguration));\n    ret.addPropertyResult('dataOutputConfiguration', 'DataOutputConfiguration', cfn_parse.FromCloudFormation.getAny(properties.DataOutputConfiguration));\n    ret.addPropertyResult('dataUploadFrequency', 'DataUploadFrequency', cfn_parse.FromCloudFormation.getString(properties.DataUploadFrequency));\n    ret.addPropertyResult('modelName', 'ModelName', cfn_parse.FromCloudFormation.getString(properties.ModelName));\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addPropertyResult('dataDelayOffsetInMinutes', 'DataDelayOffsetInMinutes', properties.DataDelayOffsetInMinutes != null ? cfn_parse.FromCloudFormation.getNumber(properties.DataDelayOffsetInMinutes) : undefined);\n    ret.addPropertyResult('inferenceSchedulerName', 'InferenceSchedulerName', properties.InferenceSchedulerName != null ? cfn_parse.FromCloudFormation.getString(properties.InferenceSchedulerName) : undefined);\n    ret.addPropertyResult('serverSideKmsKeyId', 'ServerSideKmsKeyId', properties.ServerSideKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.ServerSideKmsKeyId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnInferenceScheduler extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::LookoutEquipment::InferenceScheduler\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnInferenceScheduler {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnInferenceSchedulerPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnInferenceScheduler(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                     \n    public readonly attrInferenceSchedulerArn: string;\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    public dataInputConfiguration: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                       \n    public dataOutputConfiguration: any | cdk.IResolvable;\n\nn    public dataUploadFrequency: string;\n\n                                                                                                                                                                                                                                                                           \n    public modelName: string;\n\n                                                                                                                                                                                                                                                                                                                               \n    public roleArn: string;\n\nn    public dataDelayOffsetInMinutes: number | undefined;\n\n                                                                                                                                                                                                                                                                  \n    public inferenceSchedulerName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                               \n    public serverSideKmsKeyId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                               \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                               \n    constructor(scope: constructs.Construct, id: string, props: CfnInferenceSchedulerProps) {\n        super(scope, id, { type: CfnInferenceScheduler.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dataInputConfiguration', this);\n        cdk.requireProperty(props, 'dataOutputConfiguration', this);\n        cdk.requireProperty(props, 'dataUploadFrequency', this);\n        cdk.requireProperty(props, 'modelName', this);\n        cdk.requireProperty(props, 'roleArn', this);\n        this.attrInferenceSchedulerArn = cdk.Token.asString(this.getAtt('InferenceSchedulerArn'));\n\n        this.dataInputConfiguration = props.dataInputConfiguration;\n        this.dataOutputConfiguration = props.dataOutputConfiguration;\n        this.dataUploadFrequency = props.dataUploadFrequency;\n        this.modelName = props.modelName;\n        this.roleArn = props.roleArn;\n        this.dataDelayOffsetInMinutes = props.dataDelayOffsetInMinutes;\n        this.inferenceSchedulerName = props.inferenceSchedulerName;\n        this.serverSideKmsKeyId = props.serverSideKmsKeyId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::LookoutEquipment::InferenceScheduler\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnInferenceScheduler.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dataInputConfiguration: this.dataInputConfiguration,\n            dataOutputConfiguration: this.dataOutputConfiguration,\n            dataUploadFrequency: this.dataUploadFrequency,\n            modelName: this.modelName,\n            roleArn: this.roleArn,\n            dataDelayOffsetInMinutes: this.dataDelayOffsetInMinutes,\n            inferenceSchedulerName: this.inferenceSchedulerName,\n            serverSideKmsKeyId: this.serverSideKmsKeyId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnInferenceSchedulerPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
