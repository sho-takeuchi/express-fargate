{
  "version": 3,
  "sources": ["macie.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:32.397Z\",\"fingerprint\":\"rQqsTZYG72p6aXcBJcXM4PZJsZEKSL8b/tR6sH6NtMw=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                                          \nexport interface CfnCustomDataIdentifierProps {\n\nn    readonly name: string;\n\n                                                                                                                                                                                                                                                                                                                      \n    readonly regex: string;\n\n                                                                                                                                                                                                                                                                                                      \n    readonly description?: string;\n\nn    readonly ignoreWords?: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n    readonly keywords?: string[];\n\nn    readonly maximumMatchDistance?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCustomDataIdentifierProps`\n *\n * @param properties - the TypeScript properties of a `CfnCustomDataIdentifierProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCustomDataIdentifierPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('ignoreWords', cdk.listValidator(cdk.validateString))(properties.ignoreWords));\n    errors.collect(cdk.propertyValidator('keywords', cdk.listValidator(cdk.validateString))(properties.keywords));\n    errors.collect(cdk.propertyValidator('maximumMatchDistance', cdk.validateNumber)(properties.maximumMatchDistance));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('regex', cdk.requiredValidator)(properties.regex));\n    errors.collect(cdk.propertyValidator('regex', cdk.validateString)(properties.regex));\n    return errors.wrap('supplied properties not correct for \"CfnCustomDataIdentifierProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Macie::CustomDataIdentifier` resource\n *\n * @param properties - the TypeScript properties of a `CfnCustomDataIdentifierProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Macie::CustomDataIdentifier` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCustomDataIdentifierPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCustomDataIdentifierPropsValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Regex: cdk.stringToCloudFormation(properties.regex),\n        Description: cdk.stringToCloudFormation(properties.description),\n        IgnoreWords: cdk.listMapper(cdk.stringToCloudFormation)(properties.ignoreWords),\n        Keywords: cdk.listMapper(cdk.stringToCloudFormation)(properties.keywords),\n        MaximumMatchDistance: cdk.numberToCloudFormation(properties.maximumMatchDistance),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCustomDataIdentifierPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCustomDataIdentifierProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCustomDataIdentifierProps>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('regex', 'Regex', cfn_parse.FromCloudFormation.getString(properties.Regex));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('ignoreWords', 'IgnoreWords', properties.IgnoreWords != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IgnoreWords) : undefined);\n    ret.addPropertyResult('keywords', 'Keywords', properties.Keywords != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Keywords) : undefined);\n    ret.addPropertyResult('maximumMatchDistance', 'MaximumMatchDistance', properties.MaximumMatchDistance != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumMatchDistance) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnCustomDataIdentifier extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Macie::CustomDataIdentifier\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCustomDataIdentifier {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCustomDataIdentifierPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCustomDataIdentifier(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                        \n    public readonly attrArn: string;\n\n                                                                                                               \n    public readonly attrId: string;\n\nn    public name: string;\n\n                                                                                                                                                                                                                                                                                                                      \n    public regex: string;\n\n                                                                                                                                                                                                                                                                                                      \n    public description: string | undefined;\n\nn    public ignoreWords: string[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n    public keywords: string[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public maximumMatchDistance: number | undefined;\n\n                                                                                                                                                                                                                                      \n    constructor(scope: constructs.Construct, id: string, props: CfnCustomDataIdentifierProps) {\n        super(scope, id, { type: CfnCustomDataIdentifier.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'regex', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.name = props.name;\n        this.regex = props.regex;\n        this.description = props.description;\n        this.ignoreWords = props.ignoreWords;\n        this.keywords = props.keywords;\n        this.maximumMatchDistance = props.maximumMatchDistance;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCustomDataIdentifier.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            name: this.name,\n            regex: this.regex,\n            description: this.description,\n            ignoreWords: this.ignoreWords,\n            keywords: this.keywords,\n            maximumMatchDistance: this.maximumMatchDistance,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCustomDataIdentifierPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                              \nexport interface CfnFindingsFilterProps {\n\n                                                                                                                                                                                                                                \n    readonly findingCriteria: CfnFindingsFilter.FindingCriteriaProperty | cdk.IResolvable;\n\nn    readonly name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                           \n    readonly action?: string;\n\nn    readonly description?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                        \n    readonly position?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnFindingsFilterProps`\n *\n * @param properties - the TypeScript properties of a `CfnFindingsFilterProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnFindingsFilterPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('action', cdk.validateString)(properties.action));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('findingCriteria', cdk.requiredValidator)(properties.findingCriteria));\n    errors.collect(cdk.propertyValidator('findingCriteria', CfnFindingsFilter_FindingCriteriaPropertyValidator)(properties.findingCriteria));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('position', cdk.validateNumber)(properties.position));\n    return errors.wrap('supplied properties not correct for \"CfnFindingsFilterProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter` resource\n *\n * @param properties - the TypeScript properties of a `CfnFindingsFilterProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFindingsFilterPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFindingsFilterPropsValidator(properties).assertSuccess();\n    return {\n        FindingCriteria: cfnFindingsFilterFindingCriteriaPropertyToCloudFormation(properties.findingCriteria),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Action: cdk.stringToCloudFormation(properties.action),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Position: cdk.numberToCloudFormation(properties.position),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFindingsFilterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFindingsFilterProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFindingsFilterProps>();\n    ret.addPropertyResult('findingCriteria', 'FindingCriteria', CfnFindingsFilterFindingCriteriaPropertyFromCloudFormation(properties.FindingCriteria));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('action', 'Action', properties.Action != null ? cfn_parse.FromCloudFormation.getString(properties.Action) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('position', 'Position', properties.Position != null ? cfn_parse.FromCloudFormation.getNumber(properties.Position) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnFindingsFilter extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Macie::FindingsFilter\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnFindingsFilter {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnFindingsFilterPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnFindingsFilter(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                        \n    public readonly attrArn: string;\n\n                                                                                                                                                                                             \n    public readonly attrFindingsFilterListItems: cdk.IResolvable;\n\n                                                                                               \n    public readonly attrId: string;\n\n                                                                                                                                                                                                                                \n    public findingCriteria: CfnFindingsFilter.FindingCriteriaProperty | cdk.IResolvable;\n\nn    public name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                           \n    public action: string | undefined;\n\nn    public description: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                        \n    public position: number | undefined;\n\n                                                                                                                                                                                                                                \n    constructor(scope: constructs.Construct, id: string, props: CfnFindingsFilterProps) {\n        super(scope, id, { type: CfnFindingsFilter.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'findingCriteria', this);\n        cdk.requireProperty(props, 'name', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrFindingsFilterListItems = this.getAtt('FindingsFilterListItems');\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.findingCriteria = props.findingCriteria;\n        this.name = props.name;\n        this.action = props.action;\n        this.description = props.description;\n        this.position = props.position;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnFindingsFilter.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            findingCriteria: this.findingCriteria,\n            name: this.name,\n            action: this.action,\n            description: this.description,\n            position: this.position,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnFindingsFilterPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnFindingsFilter {\n                                                                                                                                                                                                                                                                                                                              \n    export interface FindingCriteriaProperty {\n                                                                                                                                                                                                                                                                                                                                           \n        readonly criterion?: any | cdk.IResolvable | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FindingCriteriaProperty`\n *\n * @param properties - the TypeScript properties of a `FindingCriteriaProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFindingsFilter_FindingCriteriaPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('criterion', cdk.validateObject)(properties.criterion));\n    return errors.wrap('supplied properties not correct for \"FindingCriteriaProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter.FindingCriteria` resource\n *\n * @param properties - the TypeScript properties of a `FindingCriteriaProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter.FindingCriteria` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFindingsFilterFindingCriteriaPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFindingsFilter_FindingCriteriaPropertyValidator(properties).assertSuccess();\n    return {\n        Criterion: cdk.objectToCloudFormation(properties.criterion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFindingsFilterFindingCriteriaPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFindingsFilter.FindingCriteriaProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFindingsFilter.FindingCriteriaProperty>();\n    ret.addPropertyResult('criterion', 'Criterion', properties.Criterion != null ? cfn_parse.FromCloudFormation.getAny(properties.Criterion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFindingsFilter {\n                                                                                                                                                                                                                                                                                               \n    export interface FindingsFilterListItemProperty {\n                                                                                                                                                                                                                                                                                     \n        readonly id?: string;\n                                                                                                                                                                                                                                                                                \n        readonly name?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FindingsFilterListItemProperty`\n *\n * @param properties - the TypeScript properties of a `FindingsFilterListItemProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFindingsFilter_FindingsFilterListItemPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('id', cdk.validateString)(properties.id));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    return errors.wrap('supplied properties not correct for \"FindingsFilterListItemProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter.FindingsFilterListItem` resource\n *\n * @param properties - the TypeScript properties of a `FindingsFilterListItemProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Macie::FindingsFilter.FindingsFilterListItem` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFindingsFilterFindingsFilterListItemPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFindingsFilter_FindingsFilterListItemPropertyValidator(properties).assertSuccess();\n    return {\n        Id: cdk.stringToCloudFormation(properties.id),\n        Name: cdk.stringToCloudFormation(properties.name),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFindingsFilterFindingsFilterListItemPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFindingsFilter.FindingsFilterListItemProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFindingsFilter.FindingsFilterListItemProperty>();\n    ret.addPropertyResult('id', 'Id', properties.Id != null ? cfn_parse.FromCloudFormation.getString(properties.Id) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                \nexport interface CfnSessionProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly findingPublishingFrequency?: string;\n\n                                                                                                                                                                                                                                                    \n    readonly status?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSessionProps`\n *\n * @param properties - the TypeScript properties of a `CfnSessionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSessionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('findingPublishingFrequency', cdk.validateString)(properties.findingPublishingFrequency));\n    errors.collect(cdk.propertyValidator('status', cdk.validateString)(properties.status));\n    return errors.wrap('supplied properties not correct for \"CfnSessionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Macie::Session` resource\n *\n * @param properties - the TypeScript properties of a `CfnSessionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Macie::Session` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSessionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSessionPropsValidator(properties).assertSuccess();\n    return {\n        FindingPublishingFrequency: cdk.stringToCloudFormation(properties.findingPublishingFrequency),\n        Status: cdk.stringToCloudFormation(properties.status),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSessionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSessionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSessionProps>();\n    ret.addPropertyResult('findingPublishingFrequency', 'FindingPublishingFrequency', properties.FindingPublishingFrequency != null ? cfn_parse.FromCloudFormation.getString(properties.FindingPublishingFrequency) : undefined);\n    ret.addPropertyResult('status', 'Status', properties.Status != null ? cfn_parse.FromCloudFormation.getString(properties.Status) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnSession extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Macie::Session\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSession {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSessionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSession(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                         \n    public readonly attrAwsAccountId: string;\n\n                                                                                                                                                                                                                   \n    public readonly attrServiceRole: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    public findingPublishingFrequency: string | undefined;\n\n                                                                                                                                                                                                                                                    \n    public status: string | undefined;\n\n                                                                                                                                                                                                                         \n    constructor(scope: constructs.Construct, id: string, props: CfnSessionProps = {}) {\n        super(scope, id, { type: CfnSession.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrAwsAccountId = cdk.Token.asString(this.getAtt('AwsAccountId'));\n        this.attrServiceRole = cdk.Token.asString(this.getAtt('ServiceRole'));\n\n        this.findingPublishingFrequency = props.findingPublishingFrequency;\n        this.status = props.status;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSession.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            findingPublishingFrequency: this.findingPublishingFrequency,\n            status: this.status,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSessionPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
