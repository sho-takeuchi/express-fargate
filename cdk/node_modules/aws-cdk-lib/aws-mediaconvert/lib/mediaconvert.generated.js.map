{
  "version": 3,
  "sources": ["mediaconvert.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:32.446Z\",\"fingerprint\":\"J2vm8+RHNsct/cADy49N/slRv+EljD9Pu1zwpgJBQ64=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                               \nexport interface CfnJobTemplateProps {\n\nn    readonly settingsJson: any | cdk.IResolvable;\n\nn    readonly accelerationSettings?: CfnJobTemplate.AccelerationSettingsProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                    \n    readonly category?: string;\n\n                                                                                                                                                                                                                                                          \n    readonly description?: string;\n\nn    readonly hopDestinations?: Array<CfnJobTemplate.HopDestinationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                    \n    readonly name?: string;\n\nn    readonly priority?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    readonly queue?: string;\n\nn    readonly statusUpdateInterval?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                              \n    readonly tags?: any;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnJobTemplateProps`\n *\n * @param properties - the TypeScript properties of a `CfnJobTemplateProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnJobTemplatePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('accelerationSettings', CfnJobTemplate_AccelerationSettingsPropertyValidator)(properties.accelerationSettings));\n    errors.collect(cdk.propertyValidator('category', cdk.validateString)(properties.category));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('hopDestinations', cdk.listValidator(CfnJobTemplate_HopDestinationPropertyValidator))(properties.hopDestinations));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('priority', cdk.validateNumber)(properties.priority));\n    errors.collect(cdk.propertyValidator('queue', cdk.validateString)(properties.queue));\n    errors.collect(cdk.propertyValidator('settingsJson', cdk.requiredValidator)(properties.settingsJson));\n    errors.collect(cdk.propertyValidator('settingsJson', cdk.validateObject)(properties.settingsJson));\n    errors.collect(cdk.propertyValidator('statusUpdateInterval', cdk.validateString)(properties.statusUpdateInterval));\n    errors.collect(cdk.propertyValidator('tags', cdk.validateObject)(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnJobTemplateProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate` resource\n *\n * @param properties - the TypeScript properties of a `CfnJobTemplateProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnJobTemplatePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnJobTemplatePropsValidator(properties).assertSuccess();\n    return {\n        SettingsJson: cdk.objectToCloudFormation(properties.settingsJson),\n        AccelerationSettings: cfnJobTemplateAccelerationSettingsPropertyToCloudFormation(properties.accelerationSettings),\n        Category: cdk.stringToCloudFormation(properties.category),\n        Description: cdk.stringToCloudFormation(properties.description),\n        HopDestinations: cdk.listMapper(cfnJobTemplateHopDestinationPropertyToCloudFormation)(properties.hopDestinations),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Priority: cdk.numberToCloudFormation(properties.priority),\n        Queue: cdk.stringToCloudFormation(properties.queue),\n        StatusUpdateInterval: cdk.stringToCloudFormation(properties.statusUpdateInterval),\n        Tags: cdk.objectToCloudFormation(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnJobTemplatePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnJobTemplateProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnJobTemplateProps>();\n    ret.addPropertyResult('settingsJson', 'SettingsJson', cfn_parse.FromCloudFormation.getAny(properties.SettingsJson));\n    ret.addPropertyResult('accelerationSettings', 'AccelerationSettings', properties.AccelerationSettings != null ? CfnJobTemplateAccelerationSettingsPropertyFromCloudFormation(properties.AccelerationSettings) : undefined);\n    ret.addPropertyResult('category', 'Category', properties.Category != null ? cfn_parse.FromCloudFormation.getString(properties.Category) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('hopDestinations', 'HopDestinations', properties.HopDestinations != null ? cfn_parse.FromCloudFormation.getArray(CfnJobTemplateHopDestinationPropertyFromCloudFormation)(properties.HopDestinations) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('priority', 'Priority', properties.Priority != null ? cfn_parse.FromCloudFormation.getNumber(properties.Priority) : undefined);\n    ret.addPropertyResult('queue', 'Queue', properties.Queue != null ? cfn_parse.FromCloudFormation.getString(properties.Queue) : undefined);\n    ret.addPropertyResult('statusUpdateInterval', 'StatusUpdateInterval', properties.StatusUpdateInterval != null ? cfn_parse.FromCloudFormation.getString(properties.StatusUpdateInterval) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getAny(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \nexport class CfnJobTemplate extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::MediaConvert::JobTemplate\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnJobTemplate {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnJobTemplatePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnJobTemplate(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                      \n    public readonly attrArn: string;\n\n                                                                                                                          \n    public readonly attrName: string;\n\nn    public settingsJson: any | cdk.IResolvable;\n\nn    public accelerationSettings: CfnJobTemplate.AccelerationSettingsProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                    \n    public category: string | undefined;\n\n                                                                                                                                                                                                                                                          \n    public description: string | undefined;\n\nn    public hopDestinations: Array<CfnJobTemplate.HopDestinationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                    \n    public name: string | undefined;\n\nn    public priority: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    public queue: string | undefined;\n\nn    public statusUpdateInterval: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                              \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                    \n    constructor(scope: constructs.Construct, id: string, props: CfnJobTemplateProps) {\n        super(scope, id, { type: CfnJobTemplate.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'settingsJson', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrName = cdk.Token.asString(this.getAtt('Name'));\n\n        this.settingsJson = props.settingsJson;\n        this.accelerationSettings = props.accelerationSettings;\n        this.category = props.category;\n        this.description = props.description;\n        this.hopDestinations = props.hopDestinations;\n        this.name = props.name;\n        this.priority = props.priority;\n        this.queue = props.queue;\n        this.statusUpdateInterval = props.statusUpdateInterval;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::MediaConvert::JobTemplate\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnJobTemplate.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            settingsJson: this.settingsJson,\n            accelerationSettings: this.accelerationSettings,\n            category: this.category,\n            description: this.description,\n            hopDestinations: this.hopDestinations,\n            name: this.name,\n            priority: this.priority,\n            queue: this.queue,\n            statusUpdateInterval: this.statusUpdateInterval,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnJobTemplatePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnJobTemplate {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    export interface AccelerationSettingsProperty {\n                                                                                                                                                                                                                                                                                                                                             \n        readonly mode: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AccelerationSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `AccelerationSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnJobTemplate_AccelerationSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('mode', cdk.requiredValidator)(properties.mode));\n    errors.collect(cdk.propertyValidator('mode', cdk.validateString)(properties.mode));\n    return errors.wrap('supplied properties not correct for \"AccelerationSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate.AccelerationSettings` resource\n *\n * @param properties - the TypeScript properties of a `AccelerationSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate.AccelerationSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnJobTemplateAccelerationSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnJobTemplate_AccelerationSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        Mode: cdk.stringToCloudFormation(properties.mode),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnJobTemplateAccelerationSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnJobTemplate.AccelerationSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnJobTemplate.AccelerationSettingsProperty>();\n    ret.addPropertyResult('mode', 'Mode', cfn_parse.FromCloudFormation.getString(properties.Mode));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnJobTemplate {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    export interface HopDestinationProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n        readonly priority?: number;\nn        readonly queue?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly waitMinutes?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HopDestinationProperty`\n *\n * @param properties - the TypeScript properties of a `HopDestinationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnJobTemplate_HopDestinationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('priority', cdk.validateNumber)(properties.priority));\n    errors.collect(cdk.propertyValidator('queue', cdk.validateString)(properties.queue));\n    errors.collect(cdk.propertyValidator('waitMinutes', cdk.validateNumber)(properties.waitMinutes));\n    return errors.wrap('supplied properties not correct for \"HopDestinationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate.HopDestination` resource\n *\n * @param properties - the TypeScript properties of a `HopDestinationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::MediaConvert::JobTemplate.HopDestination` resource.\n */\n// @ts-ignore TS6133\nfunction cfnJobTemplateHopDestinationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnJobTemplate_HopDestinationPropertyValidator(properties).assertSuccess();\n    return {\n        Priority: cdk.numberToCloudFormation(properties.priority),\n        Queue: cdk.stringToCloudFormation(properties.queue),\n        WaitMinutes: cdk.numberToCloudFormation(properties.waitMinutes),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnJobTemplateHopDestinationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnJobTemplate.HopDestinationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnJobTemplate.HopDestinationProperty>();\n    ret.addPropertyResult('priority', 'Priority', properties.Priority != null ? cfn_parse.FromCloudFormation.getNumber(properties.Priority) : undefined);\n    ret.addPropertyResult('queue', 'Queue', properties.Queue != null ? cfn_parse.FromCloudFormation.getString(properties.Queue) : undefined);\n    ret.addPropertyResult('waitMinutes', 'WaitMinutes', properties.WaitMinutes != null ? cfn_parse.FromCloudFormation.getNumber(properties.WaitMinutes) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                     \nexport interface CfnPresetProps {\n\nn    readonly settingsJson: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                        \n    readonly category?: string;\n\n                                                                                                                                                                                                                                              \n    readonly description?: string;\n\n                                                                                                                                                                                                                          \n    readonly name?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly tags?: any;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnPresetProps`\n *\n * @param properties - the TypeScript properties of a `CfnPresetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnPresetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('category', cdk.validateString)(properties.category));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('settingsJson', cdk.requiredValidator)(properties.settingsJson));\n    errors.collect(cdk.propertyValidator('settingsJson', cdk.validateObject)(properties.settingsJson));\n    errors.collect(cdk.propertyValidator('tags', cdk.validateObject)(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnPresetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::MediaConvert::Preset` resource\n *\n * @param properties - the TypeScript properties of a `CfnPresetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::MediaConvert::Preset` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPresetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPresetPropsValidator(properties).assertSuccess();\n    return {\n        SettingsJson: cdk.objectToCloudFormation(properties.settingsJson),\n        Category: cdk.stringToCloudFormation(properties.category),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Tags: cdk.objectToCloudFormation(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPresetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPresetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPresetProps>();\n    ret.addPropertyResult('settingsJson', 'SettingsJson', cfn_parse.FromCloudFormation.getAny(properties.SettingsJson));\n    ret.addPropertyResult('category', 'Category', properties.Category != null ? cfn_parse.FromCloudFormation.getString(properties.Category) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getAny(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnPreset extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::MediaConvert::Preset\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnPreset {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnPresetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnPreset(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                       \n    public readonly attrArn: string;\n\n                                                                                                                    \n    public readonly attrName: string;\n\nn    public settingsJson: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                        \n    public category: string | undefined;\n\n                                                                                                                                                                                                                                              \n    public description: string | undefined;\n\n                                                                                                                                                                                                                          \n    public name: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                    \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                               \n    constructor(scope: constructs.Construct, id: string, props: CfnPresetProps) {\n        super(scope, id, { type: CfnPreset.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'settingsJson', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrName = cdk.Token.asString(this.getAtt('Name'));\n\n        this.settingsJson = props.settingsJson;\n        this.category = props.category;\n        this.description = props.description;\n        this.name = props.name;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::MediaConvert::Preset\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnPreset.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            settingsJson: this.settingsJson,\n            category: this.category,\n            description: this.description,\n            name: this.name,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnPresetPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                   \nexport interface CfnQueueProps {\n\n                                                                                                                                                                                                                                            \n    readonly description?: string;\n\n                                                                                                                                                                                                                      \n    readonly name?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly pricingPlan?: string;\n\n                                                                                                                                                                                                                                                                                                                               \n    readonly status?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly tags?: any;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnQueueProps`\n *\n * @param properties - the TypeScript properties of a `CfnQueueProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnQueuePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('pricingPlan', cdk.validateString)(properties.pricingPlan));\n    errors.collect(cdk.propertyValidator('status', cdk.validateString)(properties.status));\n    errors.collect(cdk.propertyValidator('tags', cdk.validateObject)(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnQueueProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::MediaConvert::Queue` resource\n *\n * @param properties - the TypeScript properties of a `CfnQueueProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::MediaConvert::Queue` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQueuePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQueuePropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        Name: cdk.stringToCloudFormation(properties.name),\n        PricingPlan: cdk.stringToCloudFormation(properties.pricingPlan),\n        Status: cdk.stringToCloudFormation(properties.status),\n        Tags: cdk.objectToCloudFormation(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQueuePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQueueProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQueueProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('pricingPlan', 'PricingPlan', properties.PricingPlan != null ? cfn_parse.FromCloudFormation.getString(properties.PricingPlan) : undefined);\n    ret.addPropertyResult('status', 'Status', properties.Status != null ? cfn_parse.FromCloudFormation.getString(properties.Status) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getAny(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \nexport class CfnQueue extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::MediaConvert::Queue\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnQueue {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnQueuePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnQueue(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                               \n    public readonly attrArn: string;\n\n                                                                                                      \n    public readonly attrName: string;\n\n                                                                                                                                                                                                                                            \n    public description: string | undefined;\n\n                                                                                                                                                                                                                      \n    public name: string | undefined;\n\nn    public pricingPlan: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                               \n    public status: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                              \n    constructor(scope: constructs.Construct, id: string, props: CfnQueueProps = {}) {\n        super(scope, id, { type: CfnQueue.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrName = cdk.Token.asString(this.getAtt('Name'));\n\n        this.description = props.description;\n        this.name = props.name;\n        this.pricingPlan = props.pricingPlan;\n        this.status = props.status;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::MediaConvert::Queue\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnQueue.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            name: this.name,\n            pricingPlan: this.pricingPlan,\n            status: this.status,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnQueuePropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "8PAQA,IAAA,QAAA,cACA,UAAA,QAAA,4BA2CA,sCAAsC,WAAe,CACjD,GAAI,CAAC,IAAI,WAAW,YAAe,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,cAElG,OAAO,QAAQ,IAAI,kBAAkB,uBAAwB,sDAAsD,WAAW,uBAC9H,OAAO,QAAQ,IAAI,kBAAkB,WAAY,IAAI,gBAAgB,WAAW,WAChF,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,gBAAgB,WAAW,cACnF,OAAO,QAAQ,IAAI,kBAAkB,kBAAmB,IAAI,cAAc,iDAAiD,WAAW,kBACtI,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OAC5E,OAAO,QAAQ,IAAI,kBAAkB,WAAY,IAAI,gBAAgB,WAAW,WAChF,OAAO,QAAQ,IAAI,kBAAkB,QAAS,IAAI,gBAAgB,WAAW,QAC7E,OAAO,QAAQ,IAAI,kBAAkB,eAAgB,IAAI,mBAAmB,WAAW,eACvF,OAAO,QAAQ,IAAI,kBAAkB,eAAgB,IAAI,gBAAgB,WAAW,eACpF,OAAO,QAAQ,IAAI,kBAAkB,uBAAwB,IAAI,gBAAgB,WAAW,uBAC5F,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OACrE,OAAO,KAAK,6DAWvB,6CAA6C,WAAe,CACxD,MAAK,KAAI,WAAW,YACpB,8BAA6B,YAAY,gBAClC,CACH,aAAc,IAAI,uBAAuB,WAAW,cACpD,qBAAsB,2DAA2D,WAAW,sBAC5F,SAAU,IAAI,uBAAuB,WAAW,UAChD,YAAa,IAAI,uBAAuB,WAAW,aACnD,gBAAiB,IAAI,WAAW,sDAAsD,WAAW,iBACjG,KAAM,IAAI,uBAAuB,WAAW,MAC5C,SAAU,IAAI,uBAAuB,WAAW,UAChD,MAAO,IAAI,uBAAuB,WAAW,OAC7C,qBAAsB,IAAI,uBAAuB,WAAW,sBAC5D,KAAM,IAAI,uBAAuB,WAAW,QAZN,WAiB9C,+CAA+C,WAAe,CAE1D,GADA,WAAa,YAAc,KAAO,GAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,YAElD,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,eAAgB,eAAgB,UAAU,mBAAmB,OAAO,WAAW,eACrG,IAAI,kBAAkB,uBAAwB,uBAAwB,WAAW,sBAAwB,KAAO,6DAA6D,WAAW,sBAAwB,QAChN,IAAI,kBAAkB,WAAY,WAAY,WAAW,UAAY,KAAO,UAAU,mBAAmB,UAAU,WAAW,UAAY,QAC1I,IAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,aAAe,QACtJ,IAAI,kBAAkB,kBAAmB,kBAAmB,WAAW,iBAAmB,KAAO,UAAU,mBAAmB,SAAS,wDAAwD,WAAW,iBAAmB,QAC7N,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,UAAU,WAAW,MAAQ,QAC1H,IAAI,kBAAkB,WAAY,WAAY,WAAW,UAAY,KAAO,UAAU,mBAAmB,UAAU,WAAW,UAAY,QAC1I,IAAI,kBAAkB,QAAS,QAAS,WAAW,OAAS,KAAO,UAAU,mBAAmB,UAAU,WAAW,OAAS,QAC9H,IAAI,kBAAkB,uBAAwB,uBAAwB,WAAW,sBAAwB,KAAO,UAAU,mBAAmB,UAAU,WAAW,sBAAwB,QAC1L,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,OAAO,WAAW,MAAQ,QACvH,IAAI,iCAAiC,YAC9B,IAIX,4BAAoC,KAAI,WAAW,CA4D/C,YAAY,MAA6B,GAAY,MAA0B,CAC3E,MAAM,MAAO,GAAI,CAAE,KAAM,eAAe,uBAAwB,WAAY,wFAC5E,IAAI,gBAAgB,MAAO,eAAgB,MAC3C,KAAK,QAAU,IAAI,MAAM,SAAS,KAAK,OAAO,QAC9C,KAAK,SAAW,IAAI,MAAM,SAAS,KAAK,OAAO,SAE/C,KAAK,aAAe,MAAM,aAC1B,KAAK,qBAAuB,MAAM,qBAClC,KAAK,SAAW,MAAM,SACtB,KAAK,YAAc,MAAM,YACzB,KAAK,gBAAkB,MAAM,gBAC7B,KAAK,KAAO,MAAM,KAClB,KAAK,SAAW,MAAM,SACtB,KAAK,MAAQ,MAAM,MACnB,KAAK,qBAAuB,MAAM,qBAClC,KAAK,KAAO,GAAI,KAAI,WAAW,IAAI,QAAQ,IAAK,iCAAkC,MAAM,KAAM,CAAE,gBAAiB,eAhEvG,qBAAoB,MAA6B,GAAY,mBAAyB,QAA4C,CAC5I,mBAAqB,oBAAsB,GAC3C,KAAM,oBAAqB,QAAQ,OAAO,WAAW,mBAAmB,YAClE,YAAc,sCAAsC,oBACpD,IAAM,GAAI,gBAAe,MAAO,GAAI,YAAY,OACtD,SAAW,CAAC,QAAS,UAAY,QAAO,QAAQ,YAAY,iBACxD,IAAI,oBAAoB,QAAS,SAErC,eAAQ,OAAO,iBAAiB,IAAK,mBAAoB,IAClD,IA2DJ,QAAQ,UAA4B,8DACvC,UAAU,aAAa,8BAA+B,eAAe,wBACrE,UAAU,aAAa,+BAAgC,KAAK,kBAGlD,gBAAa,CACvB,MAAO,CACH,aAAc,KAAK,aACnB,qBAAsB,KAAK,qBAC3B,SAAU,KAAK,SACf,YAAa,KAAK,YAClB,gBAAiB,KAAK,gBACtB,KAAM,KAAK,KACX,SAAU,KAAK,SACf,MAAO,KAAK,MACZ,qBAAsB,KAAK,qBAC3B,KAAM,KAAK,KAAK,cAId,iBAAiB,MAA2B,CAClD,MAAO,qCAAoC,QApGnD,QAAA,eAAA,6HAE2B,eAAA,uBAAyB,iCAqHpD,8DAA8D,WAAe,CACzE,GAAI,CAAC,IAAI,WAAW,YAAe,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,cAElG,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,mBAAmB,WAAW,OAC/E,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OACrE,OAAO,KAAK,sEAWvB,oEAAoE,WAAe,CAC/E,MAAK,KAAI,WAAW,YACpB,sDAAqD,YAAY,gBAC1D,CACH,KAAM,IAAI,uBAAuB,WAAW,QAHN,WAQ9C,sEAAsE,WAAe,CACjF,GAAI,IAAI,mBAAmB,YACvB,MAAO,IAAI,WAAU,yBAAyB,YAGlD,GADA,WAAa,YAAc,KAAO,GAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,YAElD,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,OAAQ,OAAQ,UAAU,mBAAmB,UAAU,WAAW,OACxF,IAAI,iCAAiC,YAC9B,IAsBX,wDAAwD,WAAe,CACnE,GAAI,CAAC,IAAI,WAAW,YAAe,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,cAElG,OAAO,QAAQ,IAAI,kBAAkB,WAAY,IAAI,gBAAgB,WAAW,WAChF,OAAO,QAAQ,IAAI,kBAAkB,QAAS,IAAI,gBAAgB,WAAW,QAC7E,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,gBAAgB,WAAW,cAC5E,OAAO,KAAK,gEAWvB,8DAA8D,WAAe,CACzE,MAAK,KAAI,WAAW,YACpB,gDAA+C,YAAY,gBACpD,CACH,SAAU,IAAI,uBAAuB,WAAW,UAChD,MAAO,IAAI,uBAAuB,WAAW,OAC7C,YAAa,IAAI,uBAAuB,WAAW,eALb,WAU9C,gEAAgE,WAAe,CAC3E,GAAI,IAAI,mBAAmB,YACvB,MAAO,IAAI,WAAU,yBAAyB,YAGlD,GADA,WAAa,YAAc,KAAO,GAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,YAElD,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,WAAY,WAAY,WAAW,UAAY,KAAO,UAAU,mBAAmB,UAAU,WAAW,UAAY,QAC1I,IAAI,kBAAkB,QAAS,QAAS,WAAW,OAAS,KAAO,UAAU,mBAAmB,UAAU,WAAW,OAAS,QAC9H,IAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,aAAe,QACtJ,IAAI,iCAAiC,YAC9B,IA6BX,iCAAiC,WAAe,CAC5C,GAAI,CAAC,IAAI,WAAW,YAAe,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,cAElG,OAAO,QAAQ,IAAI,kBAAkB,WAAY,IAAI,gBAAgB,WAAW,WAChF,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,gBAAgB,WAAW,cACnF,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OAC5E,OAAO,QAAQ,IAAI,kBAAkB,eAAgB,IAAI,mBAAmB,WAAW,eACvF,OAAO,QAAQ,IAAI,kBAAkB,eAAgB,IAAI,gBAAgB,WAAW,eACpF,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OACrE,OAAO,KAAK,wDAWvB,wCAAwC,WAAe,CACnD,MAAK,KAAI,WAAW,YACpB,yBAAwB,YAAY,gBAC7B,CACH,aAAc,IAAI,uBAAuB,WAAW,cACpD,SAAU,IAAI,uBAAuB,WAAW,UAChD,YAAa,IAAI,uBAAuB,WAAW,aACnD,KAAM,IAAI,uBAAuB,WAAW,MAC5C,KAAM,IAAI,uBAAuB,WAAW,QAPN,WAY9C,0CAA0C,WAAe,CAErD,GADA,WAAa,YAAc,KAAO,GAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,YAElD,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,eAAgB,eAAgB,UAAU,mBAAmB,OAAO,WAAW,eACrG,IAAI,kBAAkB,WAAY,WAAY,WAAW,UAAY,KAAO,UAAU,mBAAmB,UAAU,WAAW,UAAY,QAC1I,IAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,aAAe,QACtJ,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,UAAU,WAAW,MAAQ,QAC1H,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,OAAO,WAAW,MAAQ,QACvH,IAAI,iCAAiC,YAC9B,IAIX,uBAA+B,KAAI,WAAW,CA6C1C,YAAY,MAA6B,GAAY,MAAqB,CACtE,MAAM,MAAO,GAAI,CAAE,KAAM,UAAU,uBAAwB,WAAY,mFACvE,IAAI,gBAAgB,MAAO,eAAgB,MAC3C,KAAK,QAAU,IAAI,MAAM,SAAS,KAAK,OAAO,QAC9C,KAAK,SAAW,IAAI,MAAM,SAAS,KAAK,OAAO,SAE/C,KAAK,aAAe,MAAM,aAC1B,KAAK,SAAW,MAAM,SACtB,KAAK,YAAc,MAAM,YACzB,KAAK,KAAO,MAAM,KAClB,KAAK,KAAO,GAAI,KAAI,WAAW,IAAI,QAAQ,IAAK,4BAA6B,MAAM,KAAM,CAAE,gBAAiB,eA5ClG,qBAAoB,MAA6B,GAAY,mBAAyB,QAA4C,CAC5I,mBAAqB,oBAAsB,GAC3C,KAAM,oBAAqB,QAAQ,OAAO,WAAW,mBAAmB,YAClE,YAAc,iCAAiC,oBAC/C,IAAM,GAAI,WAAU,MAAO,GAAI,YAAY,OACjD,SAAW,CAAC,QAAS,UAAY,QAAO,QAAQ,YAAY,iBACxD,IAAI,oBAAoB,QAAS,SAErC,eAAQ,OAAO,iBAAiB,IAAK,mBAAoB,IAClD,IAuCJ,QAAQ,UAA4B,8DACvC,UAAU,aAAa,8BAA+B,UAAU,wBAChE,UAAU,aAAa,+BAAgC,KAAK,kBAGlD,gBAAa,CACvB,MAAO,CACH,aAAc,KAAK,aACnB,SAAU,KAAK,SACf,YAAa,KAAK,YAClB,KAAM,KAAK,KACX,KAAM,KAAK,KAAK,cAId,iBAAiB,MAA2B,CAClD,MAAO,gCAA+B,QA3E9C,QAAA,UAAA,8GAE2B,UAAA,uBAAyB,4BAuGpD,gCAAgC,WAAe,CAC3C,GAAI,CAAC,IAAI,WAAW,YAAe,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,cAElG,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,gBAAgB,WAAW,cACnF,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OAC5E,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,gBAAgB,WAAW,cACnF,OAAO,QAAQ,IAAI,kBAAkB,SAAU,IAAI,gBAAgB,WAAW,SAC9E,OAAO,QAAQ,IAAI,kBAAkB,OAAQ,IAAI,gBAAgB,WAAW,OACrE,OAAO,KAAK,uDAWvB,uCAAuC,WAAe,CAClD,MAAK,KAAI,WAAW,YACpB,wBAAuB,YAAY,gBAC5B,CACH,YAAa,IAAI,uBAAuB,WAAW,aACnD,KAAM,IAAI,uBAAuB,WAAW,MAC5C,YAAa,IAAI,uBAAuB,WAAW,aACnD,OAAQ,IAAI,uBAAuB,WAAW,QAC9C,KAAM,IAAI,uBAAuB,WAAW,QAPN,WAY9C,yCAAyC,WAAe,CAEpD,GADA,WAAa,YAAc,KAAO,GAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,YAElD,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,aAAe,QACtJ,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,UAAU,WAAW,MAAQ,QAC1H,IAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,aAAe,QACtJ,IAAI,kBAAkB,SAAU,SAAU,WAAW,QAAU,KAAO,UAAU,mBAAmB,UAAU,WAAW,QAAU,QAClI,IAAI,kBAAkB,OAAQ,OAAQ,WAAW,MAAQ,KAAO,UAAU,mBAAmB,OAAO,WAAW,MAAQ,QACvH,IAAI,iCAAiC,YAC9B,IAIX,sBAA8B,KAAI,WAAW,CA6CzC,YAAY,MAA6B,GAAY,MAAuB,GAAE,CAC1E,MAAM,MAAO,GAAI,CAAE,KAAM,SAAS,uBAAwB,WAAY,kFACtE,KAAK,QAAU,IAAI,MAAM,SAAS,KAAK,OAAO,QAC9C,KAAK,SAAW,IAAI,MAAM,SAAS,KAAK,OAAO,SAE/C,KAAK,YAAc,MAAM,YACzB,KAAK,KAAO,MAAM,KAClB,KAAK,YAAc,MAAM,YACzB,KAAK,OAAS,MAAM,OACpB,KAAK,KAAO,GAAI,KAAI,WAAW,IAAI,QAAQ,IAAK,2BAA4B,MAAM,KAAM,CAAE,gBAAiB,eA3CjG,qBAAoB,MAA6B,GAAY,mBAAyB,QAA4C,CAC5I,mBAAqB,oBAAsB,GAC3C,KAAM,oBAAqB,QAAQ,OAAO,WAAW,mBAAmB,YAClE,YAAc,gCAAgC,oBAC9C,IAAM,GAAI,UAAS,MAAO,GAAI,YAAY,OAChD,SAAW,CAAC,QAAS,UAAY,QAAO,QAAQ,YAAY,iBACxD,IAAI,oBAAoB,QAAS,SAErC,eAAQ,OAAO,iBAAiB,IAAK,mBAAoB,IAClD,IAsCJ,QAAQ,UAA4B,8DACvC,UAAU,aAAa,8BAA+B,SAAS,wBAC/D,UAAU,aAAa,+BAAgC,KAAK,kBAGlD,gBAAa,CACvB,MAAO,CACH,YAAa,KAAK,YAClB,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,OAAQ,KAAK,OACb,KAAM,KAAK,KAAK,cAId,iBAAiB,MAA2B,CAClD,MAAO,+BAA8B,QA1E7C,QAAA,SAAA,2GAE2B,SAAA,uBAAyB",
  "names": []
}
