{
  "version": 3,
  "sources": ["cluster-engine.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as secretsmanager from '../../aws-secretsmanager';\nimport { Construct } from 'constructs';\nimport { IEngine } from './engine';\nimport { EngineVersion } from './engine-version';\nimport { IParameterGroup, ParameterGroup } from './parameter-group';\n\n                                                                                       \nexport interface ClusterEngineBindOptions {\n                                                                          \n  readonly s3ImportRole?: iam.IRole;\n\n                                                                           \n  readonly s3ExportRole?: iam.IRole;\n\n                                                                                \n  readonly parameterGroup?: IParameterGroup;\n}\n\n                                                                                  \nexport interface ClusterEngineConfig {\n                                                                                                               \n  readonly parameterGroup?: IParameterGroup;\n\n                                                                                                                                                                      \n  readonly port?: number;\n\n                                                                                                                                                                                              \n  readonly features?: ClusterEngineFeatures;\n}\n\n                                              \nexport interface ClusterEngineFeatures {\n                                                                                                                                                                                   \n  readonly s3Import?: string;\n\n                                                                                                                                                                       \n  readonly s3Export?: string;\n}\n\n                                                                                         \nexport interface IClusterEngine extends IEngine {\n                                                                                            \n  readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n\n                                                                                           \n  readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n\n                                                               \n  readonly supportedLogTypes: string[];\n\n                                                                               \n  bindToCluster(scope: Construct, options: ClusterEngineBindOptions): ClusterEngineConfig;\n}\n\ninterface ClusterEngineBaseProps {\n  readonly engineType: string;\n  readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n  readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n  readonly defaultPort?: number;\n  readonly engineVersion?: EngineVersion;\n  readonly features?: ClusterEngineFeatures;\n}\n\nabstract class ClusterEngineBase implements IClusterEngine {\n  public readonly engineType: string;\n  public readonly engineVersion?: EngineVersion;\n  public readonly parameterGroupFamily?: string;\n  public readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n  public readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n  public abstract readonly supportedLogTypes: string[];\n\n  private readonly defaultPort?: number;\n  private readonly features?: ClusterEngineFeatures;\n\n  constructor(props: ClusterEngineBaseProps) {\n    this.engineType = props.engineType;\n    this.features = props.features;\n    this.singleUserRotationApplication = props.singleUserRotationApplication;\n    this.multiUserRotationApplication = props.multiUserRotationApplication;\n    this.defaultPort = props.defaultPort;\n    this.engineVersion = props.engineVersion;\n    this.parameterGroupFamily = this.engineVersion ? `${this.engineType}${this.engineVersion.majorVersion}` : undefined;\n  }\n\n  public bindToCluster(scope: Construct, options: ClusterEngineBindOptions): ClusterEngineConfig {\n    const parameterGroup = options.parameterGroup ?? this.defaultParameterGroup(scope);\n    return {\n      parameterGroup,\n      port: this.defaultPort,\n      features: this.features,\n    };\n  }\n\n  /**\n   * Return an optional default ParameterGroup,\n   * possibly an imported one,\n   * if one wasn't provided by the customer explicitly.\n   */\n  protected abstract defaultParameterGroup(scope: Construct): IParameterGroup | undefined;\n}\n\ninterface MysqlClusterEngineBaseProps {\n  readonly engineType: string;\n  readonly engineVersion?: EngineVersion;\n  readonly defaultMajorVersion: string;\n}\n\nabstract class MySqlClusterEngineBase extends ClusterEngineBase {\n  public readonly engineFamily = 'MYSQL';\n  public readonly supportedLogTypes: string[] = ['error', 'general', 'slowquery', 'audit'];\n\n  constructor(props: MysqlClusterEngineBaseProps) {\n    super({\n      ...props,\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n      engineVersion: props.engineVersion ? props.engineVersion : { majorVersion: props.defaultMajorVersion },\n    });\n  }\n\n  public bindToCluster(scope: Construct, options: ClusterEngineBindOptions): ClusterEngineConfig {\n    const config = super.bindToCluster(scope, options);\n    const parameterGroup = options.parameterGroup ?? (options.s3ImportRole || options.s3ExportRole\n      ? new ParameterGroup(scope, 'ClusterParameterGroup', {\n        engine: this,\n      })\n      : config.parameterGroup);\n    if (options.s3ImportRole) {\n      parameterGroup?.addParameter('aurora_load_from_s3_role', options.s3ImportRole.roleArn);\n    }\n    if (options.s3ExportRole) {\n      parameterGroup?.addParameter('aurora_select_into_s3_role', options.s3ExportRole.roleArn);\n    }\n\n    return {\n      ...config,\n      parameterGroup,\n    };\n  }\n}\n\n                                                                                                                  \nexport class AuroraEngineVersion {\n                           \n  public static readonly VER_10A = AuroraEngineVersion.builtIn_5_6('10a', false);\n                                           \n  public static readonly VER_1_17_9 = AuroraEngineVersion.builtIn_5_6('1.17.9');\n                                           \n  public static readonly VER_1_19_0 = AuroraEngineVersion.builtIn_5_6('1.19.0');\n                                           \n  public static readonly VER_1_19_1 = AuroraEngineVersion.builtIn_5_6('1.19.1');\n                                           \n  public static readonly VER_1_19_2 = AuroraEngineVersion.builtIn_5_6('1.19.2');\n                                           \n  public static readonly VER_1_19_5 = AuroraEngineVersion.builtIn_5_6('1.19.5');\n                                           \n  public static readonly VER_1_19_6 = AuroraEngineVersion.builtIn_5_6('1.19.6');\n                                           \n  public static readonly VER_1_20_0 = AuroraEngineVersion.builtIn_5_6('1.20.0');\n                                           \n  public static readonly VER_1_20_1 = AuroraEngineVersion.builtIn_5_6('1.20.1');\n                                           \n  public static readonly VER_1_21_0 = AuroraEngineVersion.builtIn_5_6('1.21.0');\n                                           \n  public static readonly VER_1_22_0 = AuroraEngineVersion.builtIn_5_6('1.22.0');\n                                           \n  public static readonly VER_1_22_1 = AuroraEngineVersion.builtIn_5_6('1.22.1');\n                                             \n  public static readonly VER_1_22_1_3 = AuroraEngineVersion.builtIn_5_6('1.22.1.3');\n                                           \n  public static readonly VER_1_22_2 = AuroraEngineVersion.builtIn_5_6('1.22.2');\n\n                                                                                                                                                                                                                                                                                \n  public static of(auroraFullVersion: string, auroraMajorVersion?: string): AuroraEngineVersion {\n    return new AuroraEngineVersion(auroraFullVersion, auroraMajorVersion);\n  }\n\n  private static builtIn_5_6(minorVersion: string, addStandardPrefix: boolean = true): AuroraEngineVersion {\n    return new AuroraEngineVersion(`5.6.${addStandardPrefix ? 'mysql_aurora.' : ''}${minorVersion}`);\n  }\n\n                                                                           \n  public readonly auroraFullVersion: string;\n                                                                       \n  public readonly auroraMajorVersion: string;\n\n  private constructor(auroraFullVersion: string, auroraMajorVersion: string = '5.6') {\n    this.auroraFullVersion = auroraFullVersion;\n    this.auroraMajorVersion = auroraMajorVersion;\n  }\n}\n\n                                                                                                                            \nexport interface AuroraClusterEngineProps {\n                                                  \n  readonly version: AuroraEngineVersion;\n}\n\nclass AuroraClusterEngine extends MySqlClusterEngineBase {\n  constructor(version?: AuroraEngineVersion) {\n    super({\n      engineType: 'aurora',\n      engineVersion: version\n        ? {\n          fullVersion: version.auroraFullVersion,\n          majorVersion: version.auroraMajorVersion,\n        }\n        : undefined,\n      defaultMajorVersion: '5.6',\n    });\n  }\n\n  protected defaultParameterGroup(_scope: Construct): IParameterGroup | undefined {\n    // the default.aurora5.6 ParameterGroup is actually the default,\n    // so just return undefined in this case\n    return undefined;\n  }\n}\n\n                                                                                                                             \nexport class AuroraMysqlEngineVersion {\n                          \n  public static readonly VER_5_7_12 = AuroraMysqlEngineVersion.builtIn_5_7('12', false);\n                                           \n  public static readonly VER_2_03_2 = AuroraMysqlEngineVersion.builtIn_5_7('2.03.2');\n                                           \n  public static readonly VER_2_03_3 = AuroraMysqlEngineVersion.builtIn_5_7('2.03.3');\n                                           \n  public static readonly VER_2_03_4 = AuroraMysqlEngineVersion.builtIn_5_7('2.03.4');\n                                           \n  public static readonly VER_2_04_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.0');\n                                           \n  public static readonly VER_2_04_1 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.1');\n                                           \n  public static readonly VER_2_04_2 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.2');\n                                           \n  public static readonly VER_2_04_3 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.3');\n                                           \n  public static readonly VER_2_04_4 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.4');\n                                           \n  public static readonly VER_2_04_5 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.5');\n                                           \n  public static readonly VER_2_04_6 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.6');\n                                           \n  public static readonly VER_2_04_7 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.7');\n                                           \n  public static readonly VER_2_04_8 = AuroraMysqlEngineVersion.builtIn_5_7('2.04.8');\n                                           \n  public static readonly VER_2_05_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.05.0');\n                                           \n  public static readonly VER_2_06_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.06.0');\n                                           \n  public static readonly VER_2_07_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.07.0');\n                                           \n  public static readonly VER_2_07_1 = AuroraMysqlEngineVersion.builtIn_5_7('2.07.1');\n                                           \n  public static readonly VER_2_07_2 = AuroraMysqlEngineVersion.builtIn_5_7('2.07.2');\n                                           \n  public static readonly VER_2_08_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.08.0');\n                                           \n  public static readonly VER_2_08_1 = AuroraMysqlEngineVersion.builtIn_5_7('2.08.1');\n                                           \n  public static readonly VER_2_08_2 = AuroraMysqlEngineVersion.builtIn_5_7('2.08.2');\n                                           \n  public static readonly VER_2_09_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.09.0');\n                                           \n  public static readonly VER_2_09_1 = AuroraMysqlEngineVersion.builtIn_5_7('2.09.1');\n                                           \n  public static readonly VER_2_09_2 = AuroraMysqlEngineVersion.builtIn_5_7('2.09.2');\n                                           \n  public static readonly VER_2_09_3 = AuroraMysqlEngineVersion.builtIn_5_7('2.09.3');\n                                           \n  public static readonly VER_2_10_0 = AuroraMysqlEngineVersion.builtIn_5_7('2.10.0');\n                                           \n  public static readonly VER_2_10_1 = AuroraMysqlEngineVersion.builtIn_5_7('2.10.1');\n                                           \n  public static readonly VER_3_01_0 = AuroraMysqlEngineVersion.builtIn_8_0('3.01.0');\n\n                                                                                                                                                                                                                                                                                               \n  public static of(auroraMysqlFullVersion: string, auroraMysqlMajorVersion?: string): AuroraMysqlEngineVersion {\n    return new AuroraMysqlEngineVersion(auroraMysqlFullVersion, auroraMysqlMajorVersion);\n  }\n\n  private static builtIn_5_7(minorVersion: string, addStandardPrefix: boolean = true): AuroraMysqlEngineVersion {\n    return new AuroraMysqlEngineVersion(`5.7.${addStandardPrefix ? 'mysql_aurora.' : ''}${minorVersion}`);\n  }\n\n  private static builtIn_8_0(minorVersion: string): AuroraMysqlEngineVersion {\n    return new AuroraMysqlEngineVersion(`8.0.mysql_aurora.${minorVersion}`, '8.0');\n  }\n\n                                                                           \n  public readonly auroraMysqlFullVersion: string;\n                                                                       \n  public readonly auroraMysqlMajorVersion: string;\n\n  private constructor(auroraMysqlFullVersion: string, auroraMysqlMajorVersion: string = '5.7') {\n    this.auroraMysqlFullVersion = auroraMysqlFullVersion;\n    this.auroraMysqlMajorVersion = auroraMysqlMajorVersion;\n  }\n}\n\n                                                                                                                                 \nexport interface AuroraMysqlClusterEngineProps {\n                                                        \n  readonly version: AuroraMysqlEngineVersion;\n}\n\nclass AuroraMysqlClusterEngine extends MySqlClusterEngineBase {\n  constructor(version?: AuroraMysqlEngineVersion) {\n    super({\n      engineType: 'aurora-mysql',\n      engineVersion: version\n        ? {\n          fullVersion: version.auroraMysqlFullVersion,\n          majorVersion: version.auroraMysqlMajorVersion,\n        }\n        : undefined,\n      defaultMajorVersion: '5.7',\n    });\n  }\n\n  protected defaultParameterGroup(scope: Construct): IParameterGroup | undefined {\n    return ParameterGroup.fromParameterGroupName(scope, 'AuroraMySqlDatabaseClusterEngineDefaultParameterGroup',\n      `default.${this.parameterGroupFamily}`);\n  }\n}\n\n                                                                                    \nexport interface AuroraPostgresEngineFeatures {\n                                                                                                                                         \n  readonly s3Import?: boolean;\n\n                                                                                                                                         \n  readonly s3Export?: boolean;\n}\n\n                                                                                                                                     \nexport class AuroraPostgresEngineVersion {\n                         \n  public static readonly VER_9_6_8 = AuroraPostgresEngineVersion.of('9.6.8', '9.6');\n                         \n  public static readonly VER_9_6_9 = AuroraPostgresEngineVersion.of('9.6.9', '9.6');\n                          \n  public static readonly VER_9_6_11 = AuroraPostgresEngineVersion.of('9.6.11', '9.6');\n                          \n  public static readonly VER_9_6_12 = AuroraPostgresEngineVersion.of('9.6.12', '9.6');\n                          \n  public static readonly VER_9_6_16 = AuroraPostgresEngineVersion.of('9.6.16', '9.6');\n                          \n  public static readonly VER_9_6_17 = AuroraPostgresEngineVersion.of('9.6.17', '9.6');\n                          \n  public static readonly VER_9_6_18 = AuroraPostgresEngineVersion.of('9.6.18', '9.6');\n                          \n  public static readonly VER_9_6_19 = AuroraPostgresEngineVersion.of('9.6.19', '9.6');\n                        \n  public static readonly VER_10_4 = AuroraPostgresEngineVersion.of('10.4', '10');\n                        \n  public static readonly VER_10_5 = AuroraPostgresEngineVersion.of('10.5', '10');\n                        \n  public static readonly VER_10_6 = AuroraPostgresEngineVersion.of('10.6', '10');\n                        \n  public static readonly VER_10_7 = AuroraPostgresEngineVersion.of('10.7', '10', { s3Import: true });\n                         \n  public static readonly VER_10_11 = AuroraPostgresEngineVersion.of('10.11', '10', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_10_12 = AuroraPostgresEngineVersion.of('10.12', '10', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_10_13 = AuroraPostgresEngineVersion.of('10.13', '10', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_10_14 = AuroraPostgresEngineVersion.of('10.14', '10', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_10_16 = AuroraPostgresEngineVersion.of('10.16', '10', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_10_18 = AuroraPostgresEngineVersion.of('10.18', '10', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_11_4 = AuroraPostgresEngineVersion.of('11.4', '11', { s3Import: true });\n                        \n  public static readonly VER_11_6 = AuroraPostgresEngineVersion.of('11.6', '11', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_11_7 = AuroraPostgresEngineVersion.of('11.7', '11', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_11_8 = AuroraPostgresEngineVersion.of('11.8', '11', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_11_9 = AuroraPostgresEngineVersion.of('11.9', '11', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_11_11 = AuroraPostgresEngineVersion.of('11.11', '11', { s3Import: true, s3Export: true });\n                         \n  public static readonly VER_11_13 = AuroraPostgresEngineVersion.of('11.13', '11', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_12_4 = AuroraPostgresEngineVersion.of('12.4', '12', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_12_6 = AuroraPostgresEngineVersion.of('12.6', '12', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_12_8 = AuroraPostgresEngineVersion.of('12.8', '12', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_13_3 = AuroraPostgresEngineVersion.of('13.3', '13', { s3Import: true, s3Export: true });\n                        \n  public static readonly VER_13_4 = AuroraPostgresEngineVersion.of('13.4', '13', { s3Import: true, s3Export: true });\n\n                                                                                                                                                                                                                                                                                       \n  public static of(auroraPostgresFullVersion: string, auroraPostgresMajorVersion: string,\n    auroraPostgresFeatures?: AuroraPostgresEngineFeatures): AuroraPostgresEngineVersion {\n\n    return new AuroraPostgresEngineVersion(auroraPostgresFullVersion, auroraPostgresMajorVersion, auroraPostgresFeatures);\n  }\n\n                                                          \n  public readonly auroraPostgresFullVersion: string;\n                                                             \n  public readonly auroraPostgresMajorVersion: string;\n  /**\n   * The supported features for the DB engine\n   *\n   * @internal\n   */\n  public readonly _features: ClusterEngineFeatures;\n\n  private constructor(auroraPostgresFullVersion: string, auroraPostgresMajorVersion: string, auroraPostgresFeatures?: AuroraPostgresEngineFeatures) {\n    this.auroraPostgresFullVersion = auroraPostgresFullVersion;\n    this.auroraPostgresMajorVersion = auroraPostgresMajorVersion;\n    this._features = {\n      s3Import: auroraPostgresFeatures?.s3Import ? 's3Import' : undefined,\n      s3Export: auroraPostgresFeatures?.s3Export ? 's3Export' : undefined,\n    };\n  }\n}\n\n                                                                                                                                         \nexport interface AuroraPostgresClusterEngineProps {\n                                                             \n  readonly version: AuroraPostgresEngineVersion;\n}\n\nclass AuroraPostgresClusterEngine extends ClusterEngineBase {\n  /**\n   * feature name for the S3 data import feature\n   */\n  private static readonly S3_IMPORT_FEATURE_NAME = 's3Import';\n\n  /**\n   * feature name for the S3 data export feature\n   */\n  private static readonly S3_EXPORT_FEATURE_NAME = 's3Export';\n\n  public readonly engineFamily = 'POSTGRESQL';\n  public readonly defaultUsername = 'postgres';\n  public readonly supportedLogTypes: string[] = ['postgresql'];\n\n  constructor(version?: AuroraPostgresEngineVersion) {\n    super({\n      engineType: 'aurora-postgresql',\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.POSTGRES_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.POSTGRES_ROTATION_MULTI_USER,\n      defaultPort: 5432,\n      engineVersion: version\n        ? {\n          fullVersion: version.auroraPostgresFullVersion,\n          majorVersion: version.auroraPostgresMajorVersion,\n        }\n        : undefined,\n      features: version\n        ? {\n          s3Import: version._features.s3Import ? AuroraPostgresClusterEngine.S3_IMPORT_FEATURE_NAME : undefined,\n          s3Export: version._features.s3Export ? AuroraPostgresClusterEngine.S3_EXPORT_FEATURE_NAME : undefined,\n        }\n        : {\n          s3Import: AuroraPostgresClusterEngine.S3_IMPORT_FEATURE_NAME,\n          s3Export: AuroraPostgresClusterEngine.S3_EXPORT_FEATURE_NAME,\n        },\n    });\n  }\n\n  public bindToCluster(scope: Construct, options: ClusterEngineBindOptions): ClusterEngineConfig {\n    const config = super.bindToCluster(scope, options);\n    // skip validation for unversioned as it might be supported/unsupported. we cannot reliably tell at compile-time\n    if (this.engineVersion?.fullVersion) {\n      if (options.s3ImportRole && !(config.features?.s3Import)) {\n        throw new Error(`s3Import is not supported for Postgres version: ${this.engineVersion.fullVersion}. Use a version that supports the s3Import feature.`);\n      }\n      if (options.s3ExportRole && !(config.features?.s3Export)) {\n        throw new Error(`s3Export is not supported for Postgres version: ${this.engineVersion.fullVersion}. Use a version that supports the s3Export feature.`);\n      }\n    }\n    return config;\n  }\n\n  protected defaultParameterGroup(scope: Construct): IParameterGroup | undefined {\n    if (!this.parameterGroupFamily) {\n      throw new Error('Could not create a new ParameterGroup for an unversioned aurora-postgresql cluster engine. ' +\n        'Please either use a versioned engine, or pass an explicit ParameterGroup when creating the cluster');\n    }\n    return ParameterGroup.fromParameterGroupName(scope, 'AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup',\n      `default.${this.parameterGroupFamily}`);\n  }\n}\n\n                                                                                                                 \nexport class DatabaseClusterEngine {\n                                                                                                                                                                                                                                                                                            \n  public static readonly AURORA: IClusterEngine = new AuroraClusterEngine();\n\n                                                                                                                                                                                                                                                                                                      \n  public static readonly AURORA_MYSQL: IClusterEngine = new AuroraMysqlClusterEngine();\n\n                                                                                                                                                                                                                                                                                                               \n  public static readonly AURORA_POSTGRESQL: IClusterEngine = new AuroraPostgresClusterEngine();\n\n                                                            \n  public static aurora(props: AuroraClusterEngineProps): IClusterEngine {\n    return new AuroraClusterEngine(props.version);\n  }\n\n                                                            \n  public static auroraMysql(props: AuroraMysqlClusterEngineProps): IClusterEngine {\n    return new AuroraMysqlClusterEngine(props.version);\n  }\n\n                                                                 \n  public static auroraPostgres(props: AuroraPostgresClusterEngineProps): IClusterEngine {\n    return new AuroraPostgresClusterEngine(props.version);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
