{
  "version": 3,
  "sources": ["props.ts"],
  "sourcesContent": ["import * as ec2 from '../../aws-ec2';\nimport * as kms from '../../aws-kms';\nimport * as secretsmanager from '../../aws-secretsmanager';\nimport { Duration, SecretValue } from '../../core';\nimport { IParameterGroup } from './parameter-group';\n\n                                                     \nexport interface InstanceProps {\n                                                                                                                                   \n  readonly instanceType?: ec2.InstanceType;\n\n                                                                                                                     \n  readonly vpc: ec2.IVpc;\n\n                                                                                                                            \n  readonly vpcSubnets?: ec2.SubnetSelection;\n\n                                                                                    \n  readonly securityGroups?: ec2.ISecurityGroup[];\n\n                                                                                                             \n  readonly parameterGroup?: IParameterGroup;\n\n                                                                                                                                                                                               \n  readonly enablePerformanceInsights?: boolean;\n\n                                                                                                       \n  readonly performanceInsightRetention?: PerformanceInsightRetention;\n\n                                                                                                                     \n  readonly performanceInsightEncryptionKey?: kms.IKey;\n\n                                                                                                                    \n  readonly autoMinorVersionUpgrade?: boolean;\n\n                                                                                                          \n  readonly allowMajorVersionUpgrade?: boolean;\n\n                                                                                                                                                 \n  readonly deleteAutomatedBackups?: boolean;\n\n                                                                                                                                                                                    \n  readonly publiclyAccessible?: boolean;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                            \nexport interface BackupProps {\n\n                                                   \n  readonly retention: Duration;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  readonly preferredWindow?: string;\n}\n\n                                                 \nexport interface CredentialsBaseOptions {\n                                                                                                    \n  readonly secretName?: string;\n\n                                                                                                            \n  readonly encryptionKey?: kms.IKey;\n\n                                                                                                                                                                                                                                         \n  readonly excludeCharacters?: string;\n\n                                                                                                                \n  readonly replicaRegions?: secretsmanager.ReplicaRegion[];\n}\n\n                                                            \nexport interface CredentialsFromUsernameOptions extends CredentialsBaseOptions {\n                                                                                                                                             \n  readonly password?: SecretValue;\n}\n\n                                            \nexport abstract class Credentials {\n                                                                                             \n  public static fromGeneratedSecret(username: string, options: CredentialsBaseOptions = {}): Credentials {\n    return {\n      ...options,\n      username,\n      usernameAsString: true,\n    };\n  }\n\n                                                                                                              \n  public static fromPassword(username: string, password: SecretValue): Credentials {\n    return {\n      username,\n      password,\n      usernameAsString: true,\n    };\n  }\n\n                                                                                                                                                                                 \n  public static fromUsername(username: string, options: CredentialsFromUsernameOptions = {}): Credentials {\n    return {\n      ...options,\n      username,\n    };\n  }\n\nn  public static fromSecret(secret: secretsmanager.ISecret, username?: string): Credentials {\n    return {\n      username: username ?? secret.secretValueFromJson('username').toString(),\n      password: secret.secretValueFromJson('password'),\n      encryptionKey: secret.encryptionKey,\n      secret,\n    };\n  }\n\n                         \n  public abstract readonly username: string;\n\n                                                                                                                                                                                            \n  public abstract readonly secretName?: string;\n\n                                                                                                                                                                  \n  public abstract readonly usernameAsString?: boolean;\n\n                                                                                                                                             \n  public abstract readonly password?: SecretValue;\n\n                                                                                                            \n  public abstract readonly encryptionKey?: kms.IKey;\n\n                                                                                 \n  public abstract readonly secret?: secretsmanager.ISecret;\n\n                                                                                                                                                                                                                                    \n  public abstract readonly excludeCharacters?: string;\n\n                                                                                                                         \n  public abstract readonly replicaRegions?: secretsmanager.ReplicaRegion[];\n}\n\n                                                                                        \nexport interface SnapshotCredentialsFromGeneratedPasswordOptions {\n                                                                                                            \n  readonly encryptionKey?: kms.IKey;\n\n                                                                                                                                                                               \n  readonly excludeCharacters?: string;\n\n                                                                                                                \n  readonly replicaRegions?: secretsmanager.ReplicaRegion[];\n}\n\n                                                                                     \nexport abstract class SnapshotCredentials {\n                                                                                                                                                                                                                                                                     \n  public static fromGeneratedSecret(username: string, options: SnapshotCredentialsFromGeneratedPasswordOptions = {}): SnapshotCredentials {\n    return {\n      ...options,\n      generatePassword: true,\n      replaceOnPasswordCriteriaChanges: true,\n      username,\n    };\n  }\n\n                                                                                                                                                                                                                                                                                         \n  public static fromGeneratedPassword(username: string, options: SnapshotCredentialsFromGeneratedPasswordOptions = {}): SnapshotCredentials {\n    return {\n      ...options,\n      generatePassword: true,\n      username,\n    };\n  }\n\n                                                                     \n  public static fromPassword(password: SecretValue): SnapshotCredentials {\n    return { generatePassword: false, password };\n  }\n\n                                                                                                                                                                                                                                             \n  public static fromSecret(secret: secretsmanager.Secret): SnapshotCredentials {\n    return {\n      generatePassword: false,\n      password: secret.secretValueFromJson('password'),\n      secret,\n    };\n  }\n\n                                                                                                                                                                                                                                                 \n  public abstract readonly username?: string;\n\n                                                            \n  public abstract readonly generatePassword: boolean;\n\n                                                                                                                            \n  public abstract readonly replaceOnPasswordCriteriaChanges?: boolean;\n\n                                                                                                                                                                 \n  public abstract readonly password?: SecretValue;\n\n                                                                                                            \n  public abstract readonly encryptionKey?: kms.IKey;\n\n                                                                                 \n  public abstract readonly secret?: secretsmanager.Secret;\n\n                                                                                                                                                                                                                                   \n  public abstract readonly excludeCharacters?: string;\n\n                                                                                                                         \n  public abstract readonly replicaRegions?: secretsmanager.ReplicaRegion[];\n}\n\n/**\n * Properties common to single-user and multi-user rotation options.\n */\ninterface CommonRotationUserOptions {\n                                                                                                                                                                        \n  readonly automaticallyAfter?: Duration;\n\n                                                                                                                               \n  readonly excludeCharacters?: string;\n\n                                                                                                                       \n  readonly vpcSubnets?: ec2.SubnetSelection;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n  readonly endpoint?: ec2.IInterfaceVpcEndpoint;\n}\n\n                                                 \nexport interface RotationSingleUserOptions extends CommonRotationUserOptions {\n}\n\n                                                 \nexport interface RotationMultiUserOptions extends CommonRotationUserOptions {\nn  readonly secret: secretsmanager.ISecret;\n}\n\n                                                        \nexport enum PerformanceInsightRetention {\n                                                    \n  DEFAULT = 7,\n\n                                                       \n  LONG_TERM = 731\n}\n"],
  "mappings": "qRA6EA,iBAAiC,OAEjB,qBAAoB,SAAkB,QAAkC,GAAE,oFAC/E,IACF,QACH,SACA,iBAAkB,UAKR,cAAa,SAAkB,SAAqB,kEACzD,CACL,SACA,SACA,iBAAkB,UAKR,cAAa,SAAkB,QAA0C,GAAE,4FAChF,IACF,QACH,gBAKU,YAAW,OAAgC,SAAiB,+EACjE,CACL,SAAU,UAAQ,KAAR,SAAY,OAAO,oBAAoB,YAAY,WAC7D,SAAU,OAAO,oBAAoB,YACrC,cAAe,OAAO,cACtB,SAjCN,QAAA,YAAA,2GA2EA,yBAAyC,OAEzB,qBAAoB,SAAkB,QAA2D,GAAE,6GACxG,IACF,QACH,iBAAkB,GAClB,iCAAkC,GAClC,gBAKU,uBAAsB,SAAkB,QAA2D,GAAE,6GAC1G,IACF,QACH,iBAAkB,GAClB,gBAKU,cAAa,SAAqB,kEACvC,CAAE,iBAAkB,GAAO,gBAItB,YAAW,OAA6B,8EAC7C,CACL,iBAAkB,GAClB,SAAU,OAAO,oBAAoB,YACrC,SA9BN,QAAA,oBAAA,mIAuFA,GAAY,6BAAZ,AAAA,UAAY,6BAA2B,CAErC,6BAAA,6BAAA,QAAA,GAAA,UAGA,6BAAA,6BAAA,UAAA,KAAA,cALU,4BAAA,QAAA,6BAAA,SAAA,4BAA2B",
  "names": []
}
