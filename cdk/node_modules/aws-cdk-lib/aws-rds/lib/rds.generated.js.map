{
  "version": 3,
  "sources": ["rds.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:06:18.558Z\",\"fingerprint\":\"6AtK9FFjD92hkTnpDpfs2NVBLukGSNoOPX0js3qS57w=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                  \nexport interface CfnDBClusterProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly engine: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly associatedRoles?: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable;\n\nn    readonly availabilityZones?: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    readonly backtrackWindow?: number;\n\n                                                                                                                                                                                                                                                                                                                                               \n    readonly backupRetentionPeriod?: number;\n\n                                                                                                                                                                                                                                                                                                                  \n    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n    readonly databaseName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly dbClusterIdentifier?: string;\n\nn    readonly dbClusterParameterGroupName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    readonly dbSubnetGroupName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                            \n    readonly deletionProtection?: boolean | cdk.IResolvable;\n\nn    readonly enableCloudwatchLogsExports?: string[];\n\nn    readonly enableHttpEndpoint?: boolean | cdk.IResolvable;\n\nn    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;\n\nn    readonly engineMode?: string;\n\nn    readonly engineVersion?: string;\n\nn    readonly globalClusterIdentifier?: string;\n\nn    readonly kmsKeyId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                       \n    readonly masterUsername?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly masterUserPassword?: string;\n\nn    readonly port?: number;\n\nn    readonly preferredBackupWindow?: string;\n\nn    readonly preferredMaintenanceWindow?: string;\n\n                                                                                                                                                                                                                                                                                                              \n    readonly replicationSourceIdentifier?: string;\n\nn    readonly restoreType?: string;\n\n                                                                                                                                                                                                                                                                                                \n    readonly scalingConfiguration?: CfnDBCluster.ScalingConfigurationProperty | cdk.IResolvable;\n\nn    readonly snapshotIdentifier?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly sourceDbClusterIdentifier?: string;\n\n                                                                                                                                                                                                                                                                                     \n    readonly sourceRegion?: string;\n\nn    readonly storageEncrypted?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                 \n    readonly tags?: cdk.CfnTag[];\n\n                                                                                                                                                                                                                                                                                                                                                                  \n    readonly useLatestRestorableTime?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                        \n    readonly vpcSecurityGroupIds?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBClusterProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBClusterProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBClusterPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associatedRoles', cdk.listValidator(CfnDBCluster_DBClusterRolePropertyValidator))(properties.associatedRoles));\n    errors.collect(cdk.propertyValidator('availabilityZones', cdk.listValidator(cdk.validateString))(properties.availabilityZones));\n    errors.collect(cdk.propertyValidator('backtrackWindow', cdk.validateNumber)(properties.backtrackWindow));\n    errors.collect(cdk.propertyValidator('backupRetentionPeriod', cdk.validateNumber)(properties.backupRetentionPeriod));\n    errors.collect(cdk.propertyValidator('copyTagsToSnapshot', cdk.validateBoolean)(properties.copyTagsToSnapshot));\n    errors.collect(cdk.propertyValidator('dbClusterIdentifier', cdk.validateString)(properties.dbClusterIdentifier));\n    errors.collect(cdk.propertyValidator('dbClusterParameterGroupName', cdk.validateString)(properties.dbClusterParameterGroupName));\n    errors.collect(cdk.propertyValidator('dbSubnetGroupName', cdk.validateString)(properties.dbSubnetGroupName));\n    errors.collect(cdk.propertyValidator('databaseName', cdk.validateString)(properties.databaseName));\n    errors.collect(cdk.propertyValidator('deletionProtection', cdk.validateBoolean)(properties.deletionProtection));\n    errors.collect(cdk.propertyValidator('enableCloudwatchLogsExports', cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));\n    errors.collect(cdk.propertyValidator('enableHttpEndpoint', cdk.validateBoolean)(properties.enableHttpEndpoint));\n    errors.collect(cdk.propertyValidator('enableIamDatabaseAuthentication', cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));\n    errors.collect(cdk.propertyValidator('engine', cdk.requiredValidator)(properties.engine));\n    errors.collect(cdk.propertyValidator('engine', cdk.validateString)(properties.engine));\n    errors.collect(cdk.propertyValidator('engineMode', cdk.validateString)(properties.engineMode));\n    errors.collect(cdk.propertyValidator('engineVersion', cdk.validateString)(properties.engineVersion));\n    errors.collect(cdk.propertyValidator('globalClusterIdentifier', cdk.validateString)(properties.globalClusterIdentifier));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('masterUserPassword', cdk.validateString)(properties.masterUserPassword));\n    errors.collect(cdk.propertyValidator('masterUsername', cdk.validateString)(properties.masterUsername));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('preferredBackupWindow', cdk.validateString)(properties.preferredBackupWindow));\n    errors.collect(cdk.propertyValidator('preferredMaintenanceWindow', cdk.validateString)(properties.preferredMaintenanceWindow));\n    errors.collect(cdk.propertyValidator('replicationSourceIdentifier', cdk.validateString)(properties.replicationSourceIdentifier));\n    errors.collect(cdk.propertyValidator('restoreType', cdk.validateString)(properties.restoreType));\n    errors.collect(cdk.propertyValidator('scalingConfiguration', CfnDBCluster_ScalingConfigurationPropertyValidator)(properties.scalingConfiguration));\n    errors.collect(cdk.propertyValidator('snapshotIdentifier', cdk.validateString)(properties.snapshotIdentifier));\n    errors.collect(cdk.propertyValidator('sourceDbClusterIdentifier', cdk.validateString)(properties.sourceDbClusterIdentifier));\n    errors.collect(cdk.propertyValidator('sourceRegion', cdk.validateString)(properties.sourceRegion));\n    errors.collect(cdk.propertyValidator('storageEncrypted', cdk.validateBoolean)(properties.storageEncrypted));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('useLatestRestorableTime', cdk.validateBoolean)(properties.useLatestRestorableTime));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroupIds', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));\n    return errors.wrap('supplied properties not correct for \"CfnDBClusterProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBCluster` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBClusterProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBCluster` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBClusterPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBClusterPropsValidator(properties).assertSuccess();\n    return {\n        Engine: cdk.stringToCloudFormation(properties.engine),\n        AssociatedRoles: cdk.listMapper(cfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),\n        AvailabilityZones: cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),\n        BacktrackWindow: cdk.numberToCloudFormation(properties.backtrackWindow),\n        BackupRetentionPeriod: cdk.numberToCloudFormation(properties.backupRetentionPeriod),\n        CopyTagsToSnapshot: cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),\n        DatabaseName: cdk.stringToCloudFormation(properties.databaseName),\n        DBClusterIdentifier: cdk.stringToCloudFormation(properties.dbClusterIdentifier),\n        DBClusterParameterGroupName: cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),\n        DBSubnetGroupName: cdk.stringToCloudFormation(properties.dbSubnetGroupName),\n        DeletionProtection: cdk.booleanToCloudFormation(properties.deletionProtection),\n        EnableCloudwatchLogsExports: cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),\n        EnableHttpEndpoint: cdk.booleanToCloudFormation(properties.enableHttpEndpoint),\n        EnableIAMDatabaseAuthentication: cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),\n        EngineMode: cdk.stringToCloudFormation(properties.engineMode),\n        EngineVersion: cdk.stringToCloudFormation(properties.engineVersion),\n        GlobalClusterIdentifier: cdk.stringToCloudFormation(properties.globalClusterIdentifier),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        MasterUsername: cdk.stringToCloudFormation(properties.masterUsername),\n        MasterUserPassword: cdk.stringToCloudFormation(properties.masterUserPassword),\n        Port: cdk.numberToCloudFormation(properties.port),\n        PreferredBackupWindow: cdk.stringToCloudFormation(properties.preferredBackupWindow),\n        PreferredMaintenanceWindow: cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),\n        ReplicationSourceIdentifier: cdk.stringToCloudFormation(properties.replicationSourceIdentifier),\n        RestoreType: cdk.stringToCloudFormation(properties.restoreType),\n        ScalingConfiguration: cfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),\n        SnapshotIdentifier: cdk.stringToCloudFormation(properties.snapshotIdentifier),\n        SourceDBClusterIdentifier: cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),\n        SourceRegion: cdk.stringToCloudFormation(properties.sourceRegion),\n        StorageEncrypted: cdk.booleanToCloudFormation(properties.storageEncrypted),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        UseLatestRestorableTime: cdk.booleanToCloudFormation(properties.useLatestRestorableTime),\n        VpcSecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBClusterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBClusterProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBClusterProps>();\n    ret.addPropertyResult('engine', 'Engine', cfn_parse.FromCloudFormation.getString(properties.Engine));\n    ret.addPropertyResult('associatedRoles', 'AssociatedRoles', properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined);\n    ret.addPropertyResult('availabilityZones', 'AvailabilityZones', properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AvailabilityZones) : undefined);\n    ret.addPropertyResult('backtrackWindow', 'BacktrackWindow', properties.BacktrackWindow != null ? cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow) : undefined);\n    ret.addPropertyResult('backupRetentionPeriod', 'BackupRetentionPeriod', properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined);\n    ret.addPropertyResult('copyTagsToSnapshot', 'CopyTagsToSnapshot', properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined);\n    ret.addPropertyResult('databaseName', 'DatabaseName', properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined);\n    ret.addPropertyResult('dbClusterIdentifier', 'DBClusterIdentifier', properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined);\n    ret.addPropertyResult('dbClusterParameterGroupName', 'DBClusterParameterGroupName', properties.DBClusterParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName) : undefined);\n    ret.addPropertyResult('dbSubnetGroupName', 'DBSubnetGroupName', properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined);\n    ret.addPropertyResult('deletionProtection', 'DeletionProtection', properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined);\n    ret.addPropertyResult('enableCloudwatchLogsExports', 'EnableCloudwatchLogsExports', properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getStringArray(properties.EnableCloudwatchLogsExports) : undefined);\n    ret.addPropertyResult('enableHttpEndpoint', 'EnableHttpEndpoint', properties.EnableHttpEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint) : undefined);\n    ret.addPropertyResult('enableIamDatabaseAuthentication', 'EnableIAMDatabaseAuthentication', properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined);\n    ret.addPropertyResult('engineMode', 'EngineMode', properties.EngineMode != null ? cfn_parse.FromCloudFormation.getString(properties.EngineMode) : undefined);\n    ret.addPropertyResult('engineVersion', 'EngineVersion', properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined);\n    ret.addPropertyResult('globalClusterIdentifier', 'GlobalClusterIdentifier', properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('masterUsername', 'MasterUsername', properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined);\n    ret.addPropertyResult('masterUserPassword', 'MasterUserPassword', properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('preferredBackupWindow', 'PreferredBackupWindow', properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined);\n    ret.addPropertyResult('preferredMaintenanceWindow', 'PreferredMaintenanceWindow', properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined);\n    ret.addPropertyResult('replicationSourceIdentifier', 'ReplicationSourceIdentifier', properties.ReplicationSourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier) : undefined);\n    ret.addPropertyResult('restoreType', 'RestoreType', properties.RestoreType != null ? cfn_parse.FromCloudFormation.getString(properties.RestoreType) : undefined);\n    ret.addPropertyResult('scalingConfiguration', 'ScalingConfiguration', properties.ScalingConfiguration != null ? CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration) : undefined);\n    ret.addPropertyResult('snapshotIdentifier', 'SnapshotIdentifier', properties.SnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier) : undefined);\n    ret.addPropertyResult('sourceDbClusterIdentifier', 'SourceDBClusterIdentifier', properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined);\n    ret.addPropertyResult('sourceRegion', 'SourceRegion', properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined);\n    ret.addPropertyResult('storageEncrypted', 'StorageEncrypted', properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('useLatestRestorableTime', 'UseLatestRestorableTime', properties.UseLatestRestorableTime != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime) : undefined);\n    ret.addPropertyResult('vpcSecurityGroupIds', 'VpcSecurityGroupIds', properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupIds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBCluster extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBCluster\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBCluster {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBClusterPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBCluster(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                               \n    public readonly attrEndpointAddress: string;\n\n                                                                                                                                                         \n    public readonly attrEndpointPort: string;\n\n                                                                                                                                                                                                  \n    public readonly attrReadEndpointAddress: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                   \n    public engine: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public associatedRoles: Array<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\nn    public availabilityZones: string[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    public backtrackWindow: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                               \n    public backupRetentionPeriod: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                  \n    public copyTagsToSnapshot: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n    public databaseName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public dbClusterIdentifier: string | undefined;\n\nn    public dbClusterParameterGroupName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    public dbSubnetGroupName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                            \n    public deletionProtection: boolean | cdk.IResolvable | undefined;\n\nn    public enableCloudwatchLogsExports: string[] | undefined;\n\nn    public enableHttpEndpoint: boolean | cdk.IResolvable | undefined;\n\nn    public enableIamDatabaseAuthentication: boolean | cdk.IResolvable | undefined;\n\nn    public engineMode: string | undefined;\n\nn    public engineVersion: string | undefined;\n\nn    public globalClusterIdentifier: string | undefined;\n\nn    public kmsKeyId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                       \n    public masterUsername: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                    \n    public masterUserPassword: string | undefined;\n\nn    public port: number | undefined;\n\nn    public preferredBackupWindow: string | undefined;\n\nn    public preferredMaintenanceWindow: string | undefined;\n\n                                                                                                                                                                                                                                                                                                              \n    public replicationSourceIdentifier: string | undefined;\n\nn    public restoreType: string | undefined;\n\n                                                                                                                                                                                                                                                                                                \n    public scalingConfiguration: CfnDBCluster.ScalingConfigurationProperty | cdk.IResolvable | undefined;\n\nn    public snapshotIdentifier: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                  \n    public sourceDbClusterIdentifier: string | undefined;\n\n                                                                                                                                                                                                                                                                                     \n    public sourceRegion: string | undefined;\n\nn    public storageEncrypted: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                 \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                                                                                                                                                  \n    public useLatestRestorableTime: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                        \n    public vpcSecurityGroupIds: string[] | undefined;\n\n                                                                                                                                                                                                                         \n    constructor(scope: constructs.Construct, id: string, props: CfnDBClusterProps) {\n        super(scope, id, { type: CfnDBCluster.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'engine', this);\n        this.attrEndpointAddress = cdk.Token.asString(this.getAtt('Endpoint.Address'));\n        this.attrEndpointPort = cdk.Token.asString(this.getAtt('Endpoint.Port'));\n        this.attrReadEndpointAddress = cdk.Token.asString(this.getAtt('ReadEndpoint.Address'));\n\n        this.engine = props.engine;\n        this.associatedRoles = props.associatedRoles;\n        this.availabilityZones = props.availabilityZones;\n        this.backtrackWindow = props.backtrackWindow;\n        this.backupRetentionPeriod = props.backupRetentionPeriod;\n        this.copyTagsToSnapshot = props.copyTagsToSnapshot;\n        this.databaseName = props.databaseName;\n        this.dbClusterIdentifier = props.dbClusterIdentifier;\n        this.dbClusterParameterGroupName = props.dbClusterParameterGroupName;\n        this.dbSubnetGroupName = props.dbSubnetGroupName;\n        this.deletionProtection = props.deletionProtection;\n        this.enableCloudwatchLogsExports = props.enableCloudwatchLogsExports;\n        this.enableHttpEndpoint = props.enableHttpEndpoint;\n        this.enableIamDatabaseAuthentication = props.enableIamDatabaseAuthentication;\n        this.engineMode = props.engineMode;\n        this.engineVersion = props.engineVersion;\n        this.globalClusterIdentifier = props.globalClusterIdentifier;\n        this.kmsKeyId = props.kmsKeyId;\n        this.masterUsername = props.masterUsername;\n        this.masterUserPassword = props.masterUserPassword;\n        this.port = props.port;\n        this.preferredBackupWindow = props.preferredBackupWindow;\n        this.preferredMaintenanceWindow = props.preferredMaintenanceWindow;\n        this.replicationSourceIdentifier = props.replicationSourceIdentifier;\n        this.restoreType = props.restoreType;\n        this.scalingConfiguration = props.scalingConfiguration;\n        this.snapshotIdentifier = props.snapshotIdentifier;\n        this.sourceDbClusterIdentifier = props.sourceDbClusterIdentifier;\n        this.sourceRegion = props.sourceRegion;\n        this.storageEncrypted = props.storageEncrypted;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBCluster\", props.tags, { tagPropertyName: 'tags' });\n        this.useLatestRestorableTime = props.useLatestRestorableTime;\n        this.vpcSecurityGroupIds = props.vpcSecurityGroupIds;\n        if (this.node.scope && cdk.Resource.isResource(this.node.scope)) {\n            this.node.addValidation({ validate: () => this.cfnOptions.deletionPolicy === undefined\n              ? ['\\'AWS::RDS::DBCluster\\' is a stateful resource type, and you must specify a Removal Policy for it. Call \\'resource.applyRemovalPolicy()\\'.']\n              : [] });\n        }\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBCluster.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            engine: this.engine,\n            associatedRoles: this.associatedRoles,\n            availabilityZones: this.availabilityZones,\n            backtrackWindow: this.backtrackWindow,\n            backupRetentionPeriod: this.backupRetentionPeriod,\n            copyTagsToSnapshot: this.copyTagsToSnapshot,\n            databaseName: this.databaseName,\n            dbClusterIdentifier: this.dbClusterIdentifier,\n            dbClusterParameterGroupName: this.dbClusterParameterGroupName,\n            dbSubnetGroupName: this.dbSubnetGroupName,\n            deletionProtection: this.deletionProtection,\n            enableCloudwatchLogsExports: this.enableCloudwatchLogsExports,\n            enableHttpEndpoint: this.enableHttpEndpoint,\n            enableIamDatabaseAuthentication: this.enableIamDatabaseAuthentication,\n            engineMode: this.engineMode,\n            engineVersion: this.engineVersion,\n            globalClusterIdentifier: this.globalClusterIdentifier,\n            kmsKeyId: this.kmsKeyId,\n            masterUsername: this.masterUsername,\n            masterUserPassword: this.masterUserPassword,\n            port: this.port,\n            preferredBackupWindow: this.preferredBackupWindow,\n            preferredMaintenanceWindow: this.preferredMaintenanceWindow,\n            replicationSourceIdentifier: this.replicationSourceIdentifier,\n            restoreType: this.restoreType,\n            scalingConfiguration: this.scalingConfiguration,\n            snapshotIdentifier: this.snapshotIdentifier,\n            sourceDbClusterIdentifier: this.sourceDbClusterIdentifier,\n            sourceRegion: this.sourceRegion,\n            storageEncrypted: this.storageEncrypted,\n            tags: this.tags.renderTags(),\n            useLatestRestorableTime: this.useLatestRestorableTime,\n            vpcSecurityGroupIds: this.vpcSecurityGroupIds,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBClusterPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBCluster {\n                                                                                                                                                                                                                                                                                                          \n    export interface DBClusterRoleProperty {\nn        readonly featureName?: string;\n                                                                                                                                                                                                                                                                                                           \n        readonly roleArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DBClusterRoleProperty`\n *\n * @param properties - the TypeScript properties of a `DBClusterRoleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBCluster_DBClusterRolePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('featureName', cdk.validateString)(properties.featureName));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    return errors.wrap('supplied properties not correct for \"DBClusterRoleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBCluster.DBClusterRole` resource\n *\n * @param properties - the TypeScript properties of a `DBClusterRoleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBCluster.DBClusterRole` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBClusterDBClusterRolePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBCluster_DBClusterRolePropertyValidator(properties).assertSuccess();\n    return {\n        FeatureName: cdk.stringToCloudFormation(properties.featureName),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBClusterDBClusterRolePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBCluster.DBClusterRoleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.DBClusterRoleProperty>();\n    ret.addPropertyResult('featureName', 'FeatureName', properties.FeatureName != null ? cfn_parse.FromCloudFormation.getString(properties.FeatureName) : undefined);\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnDBCluster {\nn    export interface ScalingConfigurationProperty {\nn        readonly autoPause?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        readonly maxCapacity?: number;\nn        readonly minCapacity?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                        \n        readonly secondsUntilAutoPause?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScalingConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `ScalingConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBCluster_ScalingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoPause', cdk.validateBoolean)(properties.autoPause));\n    errors.collect(cdk.propertyValidator('maxCapacity', cdk.validateNumber)(properties.maxCapacity));\n    errors.collect(cdk.propertyValidator('minCapacity', cdk.validateNumber)(properties.minCapacity));\n    errors.collect(cdk.propertyValidator('secondsUntilAutoPause', cdk.validateNumber)(properties.secondsUntilAutoPause));\n    return errors.wrap('supplied properties not correct for \"ScalingConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBCluster.ScalingConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `ScalingConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBCluster.ScalingConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBClusterScalingConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBCluster_ScalingConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AutoPause: cdk.booleanToCloudFormation(properties.autoPause),\n        MaxCapacity: cdk.numberToCloudFormation(properties.maxCapacity),\n        MinCapacity: cdk.numberToCloudFormation(properties.minCapacity),\n        SecondsUntilAutoPause: cdk.numberToCloudFormation(properties.secondsUntilAutoPause),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBCluster.ScalingConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBCluster.ScalingConfigurationProperty>();\n    ret.addPropertyResult('autoPause', 'AutoPause', properties.AutoPause != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoPause) : undefined);\n    ret.addPropertyResult('maxCapacity', 'MaxCapacity', properties.MaxCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacity) : undefined);\n    ret.addPropertyResult('minCapacity', 'MinCapacity', properties.MinCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinCapacity) : undefined);\n    ret.addPropertyResult('secondsUntilAutoPause', 'SecondsUntilAutoPause', properties.SecondsUntilAutoPause != null ? cfn_parse.FromCloudFormation.getNumber(properties.SecondsUntilAutoPause) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                              \nexport interface CfnDBClusterParameterGroupProps {\n\n                                                                                                                                                                                                                                                              \n    readonly description: string;\n\nn    readonly family: string;\n\n                                                                                                                                                                                                                                                                   \n    readonly parameters: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                             \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBClusterParameterGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBClusterParameterGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBClusterParameterGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.requiredValidator)(properties.description));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('family', cdk.requiredValidator)(properties.family));\n    errors.collect(cdk.propertyValidator('family', cdk.validateString)(properties.family));\n    errors.collect(cdk.propertyValidator('parameters', cdk.requiredValidator)(properties.parameters));\n    errors.collect(cdk.propertyValidator('parameters', cdk.validateObject)(properties.parameters));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDBClusterParameterGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBClusterParameterGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBClusterParameterGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBClusterParameterGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBClusterParameterGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBClusterParameterGroupPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        Family: cdk.stringToCloudFormation(properties.family),\n        Parameters: cdk.objectToCloudFormation(properties.parameters),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBClusterParameterGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBClusterParameterGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBClusterParameterGroupProps>();\n    ret.addPropertyResult('description', 'Description', cfn_parse.FromCloudFormation.getString(properties.Description));\n    ret.addPropertyResult('family', 'Family', cfn_parse.FromCloudFormation.getString(properties.Family));\n    ret.addPropertyResult('parameters', 'Parameters', cfn_parse.FromCloudFormation.getAny(properties.Parameters));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBClusterParameterGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBClusterParameterGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBClusterParameterGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBClusterParameterGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBClusterParameterGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                              \n    public description: string;\n\nn    public family: string;\n\n                                                                                                                                                                                                                                                                   \n    public parameters: any | cdk.IResolvable;\n\n                                                                                                                                                                                                                                             \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                       \n    constructor(scope: constructs.Construct, id: string, props: CfnDBClusterParameterGroupProps) {\n        super(scope, id, { type: CfnDBClusterParameterGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'description', this);\n        cdk.requireProperty(props, 'family', this);\n        cdk.requireProperty(props, 'parameters', this);\n\n        this.description = props.description;\n        this.family = props.family;\n        this.parameters = props.parameters;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBClusterParameterGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBClusterParameterGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            family: this.family,\n            parameters: this.parameters,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBClusterParameterGroupPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                             \nexport interface CfnDBInstanceProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly dbInstanceClass: string;\n\nn    readonly allocatedStorage?: string;\n\nn    readonly allowMajorVersionUpgrade?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                         \n    readonly associatedRoles?: Array<CfnDBInstance.DBInstanceRoleProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                           \n    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;\n\nn    readonly availabilityZone?: string;\n\nn    readonly backupRetentionPeriod?: number;\n\nn    readonly caCertificateIdentifier?: string;\n\nn    readonly characterSetName?: string;\n\nn    readonly copyTagsToSnapshot?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                            \n    readonly dbClusterIdentifier?: string;\n\nn    readonly dbInstanceIdentifier?: string;\n\nn    readonly dbName?: string;\n\nn    readonly dbParameterGroupName?: string;\n\nn    readonly dbSecurityGroups?: string[];\n\nn    readonly dbSnapshotIdentifier?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n    readonly dbSubnetGroupName?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly deleteAutomatedBackups?: boolean | cdk.IResolvable;\n\nn    readonly deletionProtection?: boolean | cdk.IResolvable;\n\nn    readonly domain?: string;\n\n                                                                                                                                                                                                                                                                                                                                           \n    readonly domainIamRoleName?: string;\n\nn    readonly enableCloudwatchLogsExports?: string[];\n\nn    readonly enableIamDatabaseAuthentication?: boolean | cdk.IResolvable;\n\nn    readonly enablePerformanceInsights?: boolean | cdk.IResolvable;\n\nn    readonly engine?: string;\n\nn    readonly engineVersion?: string;\n\nn    readonly iops?: number;\n\nn    readonly kmsKeyId?: string;\n\nn    readonly licenseModel?: string;\n\nn    readonly masterUsername?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly masterUserPassword?: string;\n\nn    readonly maxAllocatedStorage?: number;\n\nn    readonly monitoringInterval?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly monitoringRoleArn?: string;\n\nn    readonly multiAz?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly optionGroupName?: string;\n\nn    readonly performanceInsightsKmsKeyId?: string;\n\nn    readonly performanceInsightsRetentionPeriod?: number;\n\n                                                                                                                                                                                                                                     \n    readonly port?: string;\n\nn    readonly preferredBackupWindow?: string;\n\nn    readonly preferredMaintenanceWindow?: string;\n\n                                                                                                                                                                                                                                                                                                                                                        \n    readonly processorFeatures?: Array<CfnDBInstance.ProcessorFeatureProperty | cdk.IResolvable> | cdk.IResolvable;\n\nn    readonly promotionTier?: number;\n\nn    readonly publiclyAccessible?: boolean | cdk.IResolvable;\n\nn    readonly sourceDbInstanceIdentifier?: string;\n\n                                                                                                                                                                                                                                                                  \n    readonly sourceRegion?: string;\n\nn    readonly storageEncrypted?: boolean | cdk.IResolvable;\n\nn    readonly storageType?: string;\n\n                                                                                                                                                                                                             \n    readonly tags?: cdk.CfnTag[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly timezone?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                      \n    readonly useDefaultProcessorFeatures?: boolean | cdk.IResolvable;\n\nn    readonly vpcSecurityGroups?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBInstanceProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBInstanceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBInstancePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocatedStorage', cdk.validateString)(properties.allocatedStorage));\n    errors.collect(cdk.propertyValidator('allowMajorVersionUpgrade', cdk.validateBoolean)(properties.allowMajorVersionUpgrade));\n    errors.collect(cdk.propertyValidator('associatedRoles', cdk.listValidator(CfnDBInstance_DBInstanceRolePropertyValidator))(properties.associatedRoles));\n    errors.collect(cdk.propertyValidator('autoMinorVersionUpgrade', cdk.validateBoolean)(properties.autoMinorVersionUpgrade));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('backupRetentionPeriod', cdk.validateNumber)(properties.backupRetentionPeriod));\n    errors.collect(cdk.propertyValidator('caCertificateIdentifier', cdk.validateString)(properties.caCertificateIdentifier));\n    errors.collect(cdk.propertyValidator('characterSetName', cdk.validateString)(properties.characterSetName));\n    errors.collect(cdk.propertyValidator('copyTagsToSnapshot', cdk.validateBoolean)(properties.copyTagsToSnapshot));\n    errors.collect(cdk.propertyValidator('dbClusterIdentifier', cdk.validateString)(properties.dbClusterIdentifier));\n    errors.collect(cdk.propertyValidator('dbInstanceClass', cdk.requiredValidator)(properties.dbInstanceClass));\n    errors.collect(cdk.propertyValidator('dbInstanceClass', cdk.validateString)(properties.dbInstanceClass));\n    errors.collect(cdk.propertyValidator('dbInstanceIdentifier', cdk.validateString)(properties.dbInstanceIdentifier));\n    errors.collect(cdk.propertyValidator('dbName', cdk.validateString)(properties.dbName));\n    errors.collect(cdk.propertyValidator('dbParameterGroupName', cdk.validateString)(properties.dbParameterGroupName));\n    errors.collect(cdk.propertyValidator('dbSecurityGroups', cdk.listValidator(cdk.validateString))(properties.dbSecurityGroups));\n    errors.collect(cdk.propertyValidator('dbSnapshotIdentifier', cdk.validateString)(properties.dbSnapshotIdentifier));\n    errors.collect(cdk.propertyValidator('dbSubnetGroupName', cdk.validateString)(properties.dbSubnetGroupName));\n    errors.collect(cdk.propertyValidator('deleteAutomatedBackups', cdk.validateBoolean)(properties.deleteAutomatedBackups));\n    errors.collect(cdk.propertyValidator('deletionProtection', cdk.validateBoolean)(properties.deletionProtection));\n    errors.collect(cdk.propertyValidator('domain', cdk.validateString)(properties.domain));\n    errors.collect(cdk.propertyValidator('domainIamRoleName', cdk.validateString)(properties.domainIamRoleName));\n    errors.collect(cdk.propertyValidator('enableCloudwatchLogsExports', cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports));\n    errors.collect(cdk.propertyValidator('enableIamDatabaseAuthentication', cdk.validateBoolean)(properties.enableIamDatabaseAuthentication));\n    errors.collect(cdk.propertyValidator('enablePerformanceInsights', cdk.validateBoolean)(properties.enablePerformanceInsights));\n    errors.collect(cdk.propertyValidator('engine', cdk.validateString)(properties.engine));\n    errors.collect(cdk.propertyValidator('engineVersion', cdk.validateString)(properties.engineVersion));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('licenseModel', cdk.validateString)(properties.licenseModel));\n    errors.collect(cdk.propertyValidator('masterUserPassword', cdk.validateString)(properties.masterUserPassword));\n    errors.collect(cdk.propertyValidator('masterUsername', cdk.validateString)(properties.masterUsername));\n    errors.collect(cdk.propertyValidator('maxAllocatedStorage', cdk.validateNumber)(properties.maxAllocatedStorage));\n    errors.collect(cdk.propertyValidator('monitoringInterval', cdk.validateNumber)(properties.monitoringInterval));\n    errors.collect(cdk.propertyValidator('monitoringRoleArn', cdk.validateString)(properties.monitoringRoleArn));\n    errors.collect(cdk.propertyValidator('multiAz', cdk.validateBoolean)(properties.multiAz));\n    errors.collect(cdk.propertyValidator('optionGroupName', cdk.validateString)(properties.optionGroupName));\n    errors.collect(cdk.propertyValidator('performanceInsightsKmsKeyId', cdk.validateString)(properties.performanceInsightsKmsKeyId));\n    errors.collect(cdk.propertyValidator('performanceInsightsRetentionPeriod', cdk.validateNumber)(properties.performanceInsightsRetentionPeriod));\n    errors.collect(cdk.propertyValidator('port', cdk.validateString)(properties.port));\n    errors.collect(cdk.propertyValidator('preferredBackupWindow', cdk.validateString)(properties.preferredBackupWindow));\n    errors.collect(cdk.propertyValidator('preferredMaintenanceWindow', cdk.validateString)(properties.preferredMaintenanceWindow));\n    errors.collect(cdk.propertyValidator('processorFeatures', cdk.listValidator(CfnDBInstance_ProcessorFeaturePropertyValidator))(properties.processorFeatures));\n    errors.collect(cdk.propertyValidator('promotionTier', cdk.validateNumber)(properties.promotionTier));\n    errors.collect(cdk.propertyValidator('publiclyAccessible', cdk.validateBoolean)(properties.publiclyAccessible));\n    errors.collect(cdk.propertyValidator('sourceDbInstanceIdentifier', cdk.validateString)(properties.sourceDbInstanceIdentifier));\n    errors.collect(cdk.propertyValidator('sourceRegion', cdk.validateString)(properties.sourceRegion));\n    errors.collect(cdk.propertyValidator('storageEncrypted', cdk.validateBoolean)(properties.storageEncrypted));\n    errors.collect(cdk.propertyValidator('storageType', cdk.validateString)(properties.storageType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('timezone', cdk.validateString)(properties.timezone));\n    errors.collect(cdk.propertyValidator('useDefaultProcessorFeatures', cdk.validateBoolean)(properties.useDefaultProcessorFeatures));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroups', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroups));\n    return errors.wrap('supplied properties not correct for \"CfnDBInstanceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBInstance` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBInstanceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBInstance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBInstancePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBInstancePropsValidator(properties).assertSuccess();\n    return {\n        DBInstanceClass: cdk.stringToCloudFormation(properties.dbInstanceClass),\n        AllocatedStorage: cdk.stringToCloudFormation(properties.allocatedStorage),\n        AllowMajorVersionUpgrade: cdk.booleanToCloudFormation(properties.allowMajorVersionUpgrade),\n        AssociatedRoles: cdk.listMapper(cfnDBInstanceDBInstanceRolePropertyToCloudFormation)(properties.associatedRoles),\n        AutoMinorVersionUpgrade: cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        BackupRetentionPeriod: cdk.numberToCloudFormation(properties.backupRetentionPeriod),\n        CACertificateIdentifier: cdk.stringToCloudFormation(properties.caCertificateIdentifier),\n        CharacterSetName: cdk.stringToCloudFormation(properties.characterSetName),\n        CopyTagsToSnapshot: cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),\n        DBClusterIdentifier: cdk.stringToCloudFormation(properties.dbClusterIdentifier),\n        DBInstanceIdentifier: cdk.stringToCloudFormation(properties.dbInstanceIdentifier),\n        DBName: cdk.stringToCloudFormation(properties.dbName),\n        DBParameterGroupName: cdk.stringToCloudFormation(properties.dbParameterGroupName),\n        DBSecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.dbSecurityGroups),\n        DBSnapshotIdentifier: cdk.stringToCloudFormation(properties.dbSnapshotIdentifier),\n        DBSubnetGroupName: cdk.stringToCloudFormation(properties.dbSubnetGroupName),\n        DeleteAutomatedBackups: cdk.booleanToCloudFormation(properties.deleteAutomatedBackups),\n        DeletionProtection: cdk.booleanToCloudFormation(properties.deletionProtection),\n        Domain: cdk.stringToCloudFormation(properties.domain),\n        DomainIAMRoleName: cdk.stringToCloudFormation(properties.domainIamRoleName),\n        EnableCloudwatchLogsExports: cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),\n        EnableIAMDatabaseAuthentication: cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),\n        EnablePerformanceInsights: cdk.booleanToCloudFormation(properties.enablePerformanceInsights),\n        Engine: cdk.stringToCloudFormation(properties.engine),\n        EngineVersion: cdk.stringToCloudFormation(properties.engineVersion),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        LicenseModel: cdk.stringToCloudFormation(properties.licenseModel),\n        MasterUsername: cdk.stringToCloudFormation(properties.masterUsername),\n        MasterUserPassword: cdk.stringToCloudFormation(properties.masterUserPassword),\n        MaxAllocatedStorage: cdk.numberToCloudFormation(properties.maxAllocatedStorage),\n        MonitoringInterval: cdk.numberToCloudFormation(properties.monitoringInterval),\n        MonitoringRoleArn: cdk.stringToCloudFormation(properties.monitoringRoleArn),\n        MultiAZ: cdk.booleanToCloudFormation(properties.multiAz),\n        OptionGroupName: cdk.stringToCloudFormation(properties.optionGroupName),\n        PerformanceInsightsKMSKeyId: cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),\n        PerformanceInsightsRetentionPeriod: cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),\n        Port: cdk.stringToCloudFormation(properties.port),\n        PreferredBackupWindow: cdk.stringToCloudFormation(properties.preferredBackupWindow),\n        PreferredMaintenanceWindow: cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),\n        ProcessorFeatures: cdk.listMapper(cfnDBInstanceProcessorFeaturePropertyToCloudFormation)(properties.processorFeatures),\n        PromotionTier: cdk.numberToCloudFormation(properties.promotionTier),\n        PubliclyAccessible: cdk.booleanToCloudFormation(properties.publiclyAccessible),\n        SourceDBInstanceIdentifier: cdk.stringToCloudFormation(properties.sourceDbInstanceIdentifier),\n        SourceRegion: cdk.stringToCloudFormation(properties.sourceRegion),\n        StorageEncrypted: cdk.booleanToCloudFormation(properties.storageEncrypted),\n        StorageType: cdk.stringToCloudFormation(properties.storageType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        Timezone: cdk.stringToCloudFormation(properties.timezone),\n        UseDefaultProcessorFeatures: cdk.booleanToCloudFormation(properties.useDefaultProcessorFeatures),\n        VPCSecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroups),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBInstancePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBInstanceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBInstanceProps>();\n    ret.addPropertyResult('dbInstanceClass', 'DBInstanceClass', cfn_parse.FromCloudFormation.getString(properties.DBInstanceClass));\n    ret.addPropertyResult('allocatedStorage', 'AllocatedStorage', properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getString(properties.AllocatedStorage) : undefined);\n    ret.addPropertyResult('allowMajorVersionUpgrade', 'AllowMajorVersionUpgrade', properties.AllowMajorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AllowMajorVersionUpgrade) : undefined);\n    ret.addPropertyResult('associatedRoles', 'AssociatedRoles', properties.AssociatedRoles != null ? cfn_parse.FromCloudFormation.getArray(CfnDBInstanceDBInstanceRolePropertyFromCloudFormation)(properties.AssociatedRoles) : undefined);\n    ret.addPropertyResult('autoMinorVersionUpgrade', 'AutoMinorVersionUpgrade', properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('backupRetentionPeriod', 'BackupRetentionPeriod', properties.BackupRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod) : undefined);\n    ret.addPropertyResult('caCertificateIdentifier', 'CACertificateIdentifier', properties.CACertificateIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.CACertificateIdentifier) : undefined);\n    ret.addPropertyResult('characterSetName', 'CharacterSetName', properties.CharacterSetName != null ? cfn_parse.FromCloudFormation.getString(properties.CharacterSetName) : undefined);\n    ret.addPropertyResult('copyTagsToSnapshot', 'CopyTagsToSnapshot', properties.CopyTagsToSnapshot != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot) : undefined);\n    ret.addPropertyResult('dbClusterIdentifier', 'DBClusterIdentifier', properties.DBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier) : undefined);\n    ret.addPropertyResult('dbInstanceIdentifier', 'DBInstanceIdentifier', properties.DBInstanceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBInstanceIdentifier) : undefined);\n    ret.addPropertyResult('dbName', 'DBName', properties.DBName != null ? cfn_parse.FromCloudFormation.getString(properties.DBName) : undefined);\n    ret.addPropertyResult('dbParameterGroupName', 'DBParameterGroupName', properties.DBParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBParameterGroupName) : undefined);\n    ret.addPropertyResult('dbSecurityGroups', 'DBSecurityGroups', properties.DBSecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DBSecurityGroups) : undefined);\n    ret.addPropertyResult('dbSnapshotIdentifier', 'DBSnapshotIdentifier', properties.DBSnapshotIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.DBSnapshotIdentifier) : undefined);\n    ret.addPropertyResult('dbSubnetGroupName', 'DBSubnetGroupName', properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined);\n    ret.addPropertyResult('deleteAutomatedBackups', 'DeleteAutomatedBackups', properties.DeleteAutomatedBackups != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteAutomatedBackups) : undefined);\n    ret.addPropertyResult('deletionProtection', 'DeletionProtection', properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined);\n    ret.addPropertyResult('domain', 'Domain', properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined);\n    ret.addPropertyResult('domainIamRoleName', 'DomainIAMRoleName', properties.DomainIAMRoleName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName) : undefined);\n    ret.addPropertyResult('enableCloudwatchLogsExports', 'EnableCloudwatchLogsExports', properties.EnableCloudwatchLogsExports != null ? cfn_parse.FromCloudFormation.getStringArray(properties.EnableCloudwatchLogsExports) : undefined);\n    ret.addPropertyResult('enableIamDatabaseAuthentication', 'EnableIAMDatabaseAuthentication', properties.EnableIAMDatabaseAuthentication != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication) : undefined);\n    ret.addPropertyResult('enablePerformanceInsights', 'EnablePerformanceInsights', properties.EnablePerformanceInsights != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnablePerformanceInsights) : undefined);\n    ret.addPropertyResult('engine', 'Engine', properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined);\n    ret.addPropertyResult('engineVersion', 'EngineVersion', properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('licenseModel', 'LicenseModel', properties.LicenseModel != null ? cfn_parse.FromCloudFormation.getString(properties.LicenseModel) : undefined);\n    ret.addPropertyResult('masterUsername', 'MasterUsername', properties.MasterUsername != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUsername) : undefined);\n    ret.addPropertyResult('masterUserPassword', 'MasterUserPassword', properties.MasterUserPassword != null ? cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword) : undefined);\n    ret.addPropertyResult('maxAllocatedStorage', 'MaxAllocatedStorage', properties.MaxAllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxAllocatedStorage) : undefined);\n    ret.addPropertyResult('monitoringInterval', 'MonitoringInterval', properties.MonitoringInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval) : undefined);\n    ret.addPropertyResult('monitoringRoleArn', 'MonitoringRoleArn', properties.MonitoringRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn) : undefined);\n    ret.addPropertyResult('multiAz', 'MultiAZ', properties.MultiAZ != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZ) : undefined);\n    ret.addPropertyResult('optionGroupName', 'OptionGroupName', properties.OptionGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.OptionGroupName) : undefined);\n    ret.addPropertyResult('performanceInsightsKmsKeyId', 'PerformanceInsightsKMSKeyId', properties.PerformanceInsightsKMSKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKMSKeyId) : undefined);\n    ret.addPropertyResult('performanceInsightsRetentionPeriod', 'PerformanceInsightsRetentionPeriod', properties.PerformanceInsightsRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getString(properties.Port) : undefined);\n    ret.addPropertyResult('preferredBackupWindow', 'PreferredBackupWindow', properties.PreferredBackupWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow) : undefined);\n    ret.addPropertyResult('preferredMaintenanceWindow', 'PreferredMaintenanceWindow', properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined);\n    ret.addPropertyResult('processorFeatures', 'ProcessorFeatures', properties.ProcessorFeatures != null ? cfn_parse.FromCloudFormation.getArray(CfnDBInstanceProcessorFeaturePropertyFromCloudFormation)(properties.ProcessorFeatures) : undefined);\n    ret.addPropertyResult('promotionTier', 'PromotionTier', properties.PromotionTier != null ? cfn_parse.FromCloudFormation.getNumber(properties.PromotionTier) : undefined);\n    ret.addPropertyResult('publiclyAccessible', 'PubliclyAccessible', properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined);\n    ret.addPropertyResult('sourceDbInstanceIdentifier', 'SourceDBInstanceIdentifier', properties.SourceDBInstanceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBInstanceIdentifier) : undefined);\n    ret.addPropertyResult('sourceRegion', 'SourceRegion', properties.SourceRegion != null ? cfn_parse.FromCloudFormation.getString(properties.SourceRegion) : undefined);\n    ret.addPropertyResult('storageEncrypted', 'StorageEncrypted', properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined);\n    ret.addPropertyResult('storageType', 'StorageType', properties.StorageType != null ? cfn_parse.FromCloudFormation.getString(properties.StorageType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('timezone', 'Timezone', properties.Timezone != null ? cfn_parse.FromCloudFormation.getString(properties.Timezone) : undefined);\n    ret.addPropertyResult('useDefaultProcessorFeatures', 'UseDefaultProcessorFeatures', properties.UseDefaultProcessorFeatures != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseDefaultProcessorFeatures) : undefined);\n    ret.addPropertyResult('vpcSecurityGroups', 'VPCSecurityGroups', properties.VPCSecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VPCSecurityGroups) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBInstance extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBInstance\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBInstance {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBInstancePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBInstance(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                    \n    public readonly attrEndpointAddress: string;\n\n                                                                                                                                                   \n    public readonly attrEndpointPort: string;\n\nn    public dbInstanceClass: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public allocatedStorage: string | undefined;\n\nn    public allowMajorVersionUpgrade: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                         \n    public associatedRoles: Array<CfnDBInstance.DBInstanceRoleProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                           \n    public autoMinorVersionUpgrade: boolean | cdk.IResolvable | undefined;\n\nn    public availabilityZone: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    public backupRetentionPeriod: number | undefined;\n\nn    public caCertificateIdentifier: string | undefined;\n\nn    public characterSetName: string | undefined;\n\nn    public copyTagsToSnapshot: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                            \n    public dbClusterIdentifier: string | undefined;\n\nn    public dbInstanceIdentifier: string | undefined;\n\nn    public dbName: string | undefined;\n\nn    public dbParameterGroupName: string | undefined;\n\nn    public dbSecurityGroups: string[] | undefined;\n\nn    public dbSnapshotIdentifier: string | undefined;\n\nn    public dbSubnetGroupName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public deleteAutomatedBackups: boolean | cdk.IResolvable | undefined;\n\nn    public deletionProtection: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    public domain: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                           \n    public domainIamRoleName: string | undefined;\n\nn    public enableCloudwatchLogsExports: string[] | undefined;\n\nn    public enableIamDatabaseAuthentication: boolean | cdk.IResolvable | undefined;\n\nn    public enablePerformanceInsights: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    public engine: string | undefined;\n\nn    public engineVersion: string | undefined;\n\nn    public iops: number | undefined;\n\nn    public kmsKeyId: string | undefined;\n\nn    public licenseModel: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public masterUsername: string | undefined;\n\nn    public masterUserPassword: string | undefined;\n\nn    public maxAllocatedStorage: number | undefined;\n\nn    public monitoringInterval: number | undefined;\n\nn    public monitoringRoleArn: string | undefined;\n\nn    public multiAz: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public optionGroupName: string | undefined;\n\nn    public performanceInsightsKmsKeyId: string | undefined;\n\nn    public performanceInsightsRetentionPeriod: number | undefined;\n\n                                                                                                                                                                                                                                     \n    public port: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public preferredBackupWindow: string | undefined;\n\nn    public preferredMaintenanceWindow: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                        \n    public processorFeatures: Array<CfnDBInstance.ProcessorFeatureProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\nn    public promotionTier: number | undefined;\n\nn    public publiclyAccessible: boolean | cdk.IResolvable | undefined;\n\nn    public sourceDbInstanceIdentifier: string | undefined;\n\n                                                                                                                                                                                                                                                                  \n    public sourceRegion: string | undefined;\n\nn    public storageEncrypted: boolean | cdk.IResolvable | undefined;\n\nn    public storageType: string | undefined;\n\n                                                                                                                                                                                                             \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                \n    public timezone: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                      \n    public useDefaultProcessorFeatures: boolean | cdk.IResolvable | undefined;\n\nn    public vpcSecurityGroups: string[] | undefined;\n\n                                                                                                                                                                                                                          \n    constructor(scope: constructs.Construct, id: string, props: CfnDBInstanceProps) {\n        super(scope, id, { type: CfnDBInstance.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbInstanceClass', this);\n        this.attrEndpointAddress = cdk.Token.asString(this.getAtt('Endpoint.Address'));\n        this.attrEndpointPort = cdk.Token.asString(this.getAtt('Endpoint.Port'));\n\n        this.dbInstanceClass = props.dbInstanceClass;\n        this.allocatedStorage = props.allocatedStorage;\n        this.allowMajorVersionUpgrade = props.allowMajorVersionUpgrade;\n        this.associatedRoles = props.associatedRoles;\n        this.autoMinorVersionUpgrade = props.autoMinorVersionUpgrade;\n        this.availabilityZone = props.availabilityZone;\n        this.backupRetentionPeriod = props.backupRetentionPeriod;\n        this.caCertificateIdentifier = props.caCertificateIdentifier;\n        this.characterSetName = props.characterSetName;\n        this.copyTagsToSnapshot = props.copyTagsToSnapshot;\n        this.dbClusterIdentifier = props.dbClusterIdentifier;\n        this.dbInstanceIdentifier = props.dbInstanceIdentifier;\n        this.dbName = props.dbName;\n        this.dbParameterGroupName = props.dbParameterGroupName;\n        this.dbSecurityGroups = props.dbSecurityGroups;\n        this.dbSnapshotIdentifier = props.dbSnapshotIdentifier;\n        this.dbSubnetGroupName = props.dbSubnetGroupName;\n        this.deleteAutomatedBackups = props.deleteAutomatedBackups;\n        this.deletionProtection = props.deletionProtection;\n        this.domain = props.domain;\n        this.domainIamRoleName = props.domainIamRoleName;\n        this.enableCloudwatchLogsExports = props.enableCloudwatchLogsExports;\n        this.enableIamDatabaseAuthentication = props.enableIamDatabaseAuthentication;\n        this.enablePerformanceInsights = props.enablePerformanceInsights;\n        this.engine = props.engine;\n        this.engineVersion = props.engineVersion;\n        this.iops = props.iops;\n        this.kmsKeyId = props.kmsKeyId;\n        this.licenseModel = props.licenseModel;\n        this.masterUsername = props.masterUsername;\n        this.masterUserPassword = props.masterUserPassword;\n        this.maxAllocatedStorage = props.maxAllocatedStorage;\n        this.monitoringInterval = props.monitoringInterval;\n        this.monitoringRoleArn = props.monitoringRoleArn;\n        this.multiAz = props.multiAz;\n        this.optionGroupName = props.optionGroupName;\n        this.performanceInsightsKmsKeyId = props.performanceInsightsKmsKeyId;\n        this.performanceInsightsRetentionPeriod = props.performanceInsightsRetentionPeriod;\n        this.port = props.port;\n        this.preferredBackupWindow = props.preferredBackupWindow;\n        this.preferredMaintenanceWindow = props.preferredMaintenanceWindow;\n        this.processorFeatures = props.processorFeatures;\n        this.promotionTier = props.promotionTier;\n        this.publiclyAccessible = props.publiclyAccessible;\n        this.sourceDbInstanceIdentifier = props.sourceDbInstanceIdentifier;\n        this.sourceRegion = props.sourceRegion;\n        this.storageEncrypted = props.storageEncrypted;\n        this.storageType = props.storageType;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBInstance\", props.tags, { tagPropertyName: 'tags' });\n        this.timezone = props.timezone;\n        this.useDefaultProcessorFeatures = props.useDefaultProcessorFeatures;\n        this.vpcSecurityGroups = props.vpcSecurityGroups;\n        if (this.node.scope && cdk.Resource.isResource(this.node.scope)) {\n            this.node.addValidation({ validate: () => this.cfnOptions.deletionPolicy === undefined\n              ? ['\\'AWS::RDS::DBInstance\\' is a stateful resource type, and you must specify a Removal Policy for it. Call \\'resource.applyRemovalPolicy()\\'.']\n              : [] });\n        }\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBInstance.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbInstanceClass: this.dbInstanceClass,\n            allocatedStorage: this.allocatedStorage,\n            allowMajorVersionUpgrade: this.allowMajorVersionUpgrade,\n            associatedRoles: this.associatedRoles,\n            autoMinorVersionUpgrade: this.autoMinorVersionUpgrade,\n            availabilityZone: this.availabilityZone,\n            backupRetentionPeriod: this.backupRetentionPeriod,\n            caCertificateIdentifier: this.caCertificateIdentifier,\n            characterSetName: this.characterSetName,\n            copyTagsToSnapshot: this.copyTagsToSnapshot,\n            dbClusterIdentifier: this.dbClusterIdentifier,\n            dbInstanceIdentifier: this.dbInstanceIdentifier,\n            dbName: this.dbName,\n            dbParameterGroupName: this.dbParameterGroupName,\n            dbSecurityGroups: this.dbSecurityGroups,\n            dbSnapshotIdentifier: this.dbSnapshotIdentifier,\n            dbSubnetGroupName: this.dbSubnetGroupName,\n            deleteAutomatedBackups: this.deleteAutomatedBackups,\n            deletionProtection: this.deletionProtection,\n            domain: this.domain,\n            domainIamRoleName: this.domainIamRoleName,\n            enableCloudwatchLogsExports: this.enableCloudwatchLogsExports,\n            enableIamDatabaseAuthentication: this.enableIamDatabaseAuthentication,\n            enablePerformanceInsights: this.enablePerformanceInsights,\n            engine: this.engine,\n            engineVersion: this.engineVersion,\n            iops: this.iops,\n            kmsKeyId: this.kmsKeyId,\n            licenseModel: this.licenseModel,\n            masterUsername: this.masterUsername,\n            masterUserPassword: this.masterUserPassword,\n            maxAllocatedStorage: this.maxAllocatedStorage,\n            monitoringInterval: this.monitoringInterval,\n            monitoringRoleArn: this.monitoringRoleArn,\n            multiAz: this.multiAz,\n            optionGroupName: this.optionGroupName,\n            performanceInsightsKmsKeyId: this.performanceInsightsKmsKeyId,\n            performanceInsightsRetentionPeriod: this.performanceInsightsRetentionPeriod,\n            port: this.port,\n            preferredBackupWindow: this.preferredBackupWindow,\n            preferredMaintenanceWindow: this.preferredMaintenanceWindow,\n            processorFeatures: this.processorFeatures,\n            promotionTier: this.promotionTier,\n            publiclyAccessible: this.publiclyAccessible,\n            sourceDbInstanceIdentifier: this.sourceDbInstanceIdentifier,\n            sourceRegion: this.sourceRegion,\n            storageEncrypted: this.storageEncrypted,\n            storageType: this.storageType,\n            tags: this.tags.renderTags(),\n            timezone: this.timezone,\n            useDefaultProcessorFeatures: this.useDefaultProcessorFeatures,\n            vpcSecurityGroups: this.vpcSecurityGroups,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBInstancePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBInstance {\n                                                                                                                                                                                                                                                                                                             \n    export interface DBInstanceRoleProperty {\nn        readonly featureName: string;\n                                                                                                                                                                                                                                                                                                                \n        readonly roleArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DBInstanceRoleProperty`\n *\n * @param properties - the TypeScript properties of a `DBInstanceRoleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBInstance_DBInstanceRolePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('featureName', cdk.requiredValidator)(properties.featureName));\n    errors.collect(cdk.propertyValidator('featureName', cdk.validateString)(properties.featureName));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    return errors.wrap('supplied properties not correct for \"DBInstanceRoleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBInstance.DBInstanceRole` resource\n *\n * @param properties - the TypeScript properties of a `DBInstanceRoleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBInstance.DBInstanceRole` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBInstanceDBInstanceRolePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBInstance_DBInstanceRolePropertyValidator(properties).assertSuccess();\n    return {\n        FeatureName: cdk.stringToCloudFormation(properties.featureName),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBInstanceDBInstanceRolePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBInstance.DBInstanceRoleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBInstance.DBInstanceRoleProperty>();\n    ret.addPropertyResult('featureName', 'FeatureName', cfn_parse.FromCloudFormation.getString(properties.FeatureName));\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnDBInstance {\n                                                                                                                                                                                                                                                                                                                  \n    export interface ProcessorFeatureProperty {\n                                                                                                                                                                                                                                                                                                               \n        readonly name?: string;\n                                                                                                                                                                                                                                                                 \n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProcessorFeatureProperty`\n *\n * @param properties - the TypeScript properties of a `ProcessorFeatureProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBInstance_ProcessorFeaturePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"ProcessorFeatureProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBInstance.ProcessorFeature` resource\n *\n * @param properties - the TypeScript properties of a `ProcessorFeatureProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBInstance.ProcessorFeature` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBInstanceProcessorFeaturePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBInstance_ProcessorFeaturePropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBInstanceProcessorFeaturePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBInstance.ProcessorFeatureProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBInstance.ProcessorFeatureProperty>();\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                  \nexport interface CfnDBParameterGroupProps {\n\n                                                                                                                                                                                                                                                               \n    readonly description: string;\n\nn    readonly family: string;\n\nn    readonly parameters?: { [key: string]: (string) } | cdk.IResolvable;\n\n                                                                                                                                                                                                                         \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBParameterGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBParameterGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBParameterGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.requiredValidator)(properties.description));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('family', cdk.requiredValidator)(properties.family));\n    errors.collect(cdk.propertyValidator('family', cdk.validateString)(properties.family));\n    errors.collect(cdk.propertyValidator('parameters', cdk.hashValidator(cdk.validateString))(properties.parameters));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDBParameterGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBParameterGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBParameterGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBParameterGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBParameterGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBParameterGroupPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        Family: cdk.stringToCloudFormation(properties.family),\n        Parameters: cdk.hashMapper(cdk.stringToCloudFormation)(properties.parameters),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBParameterGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBParameterGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBParameterGroupProps>();\n    ret.addPropertyResult('description', 'Description', cfn_parse.FromCloudFormation.getString(properties.Description));\n    ret.addPropertyResult('family', 'Family', cfn_parse.FromCloudFormation.getString(properties.Family));\n    ret.addPropertyResult('parameters', 'Parameters', properties.Parameters != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Parameters) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBParameterGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBParameterGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBParameterGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBParameterGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBParameterGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                               \n    public description: string;\n\nn    public family: string;\n\nn    public parameters: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                         \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                \n    constructor(scope: constructs.Construct, id: string, props: CfnDBParameterGroupProps) {\n        super(scope, id, { type: CfnDBParameterGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'description', this);\n        cdk.requireProperty(props, 'family', this);\n\n        this.description = props.description;\n        this.family = props.family;\n        this.parameters = props.parameters;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBParameterGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBParameterGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            family: this.family,\n            parameters: this.parameters,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBParameterGroupPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                              \nexport interface CfnDBProxyProps {\n\n                                                                                                                                                                                                            \n    readonly auth: Array<CfnDBProxy.AuthFormatProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly engineFamily: string;\n\n                                                                                                                                                                                                                                                                           \n    readonly roleArn: string;\n\n                                                                                                                                                                                                                               \n    readonly vpcSubnetIds: string[];\n\nn    readonly debugLogging?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly idleClientTimeout?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    readonly requireTls?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                           \n    readonly tags?: CfnDBProxy.TagFormatProperty[];\n\n                                                                                                                                                                                                                                                                                                                                                   \n    readonly vpcSecurityGroupIds?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBProxyProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('auth', cdk.requiredValidator)(properties.auth));\n    errors.collect(cdk.propertyValidator('auth', cdk.listValidator(CfnDBProxy_AuthFormatPropertyValidator))(properties.auth));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.requiredValidator)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.validateString)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('debugLogging', cdk.validateBoolean)(properties.debugLogging));\n    errors.collect(cdk.propertyValidator('engineFamily', cdk.requiredValidator)(properties.engineFamily));\n    errors.collect(cdk.propertyValidator('engineFamily', cdk.validateString)(properties.engineFamily));\n    errors.collect(cdk.propertyValidator('idleClientTimeout', cdk.validateNumber)(properties.idleClientTimeout));\n    errors.collect(cdk.propertyValidator('requireTls', cdk.validateBoolean)(properties.requireTls));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnDBProxy_TagFormatPropertyValidator))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroupIds', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));\n    errors.collect(cdk.propertyValidator('vpcSubnetIds', cdk.requiredValidator)(properties.vpcSubnetIds));\n    errors.collect(cdk.propertyValidator('vpcSubnetIds', cdk.listValidator(cdk.validateString))(properties.vpcSubnetIds));\n    return errors.wrap('supplied properties not correct for \"CfnDBProxyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxy` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxyPropsValidator(properties).assertSuccess();\n    return {\n        Auth: cdk.listMapper(cfnDBProxyAuthFormatPropertyToCloudFormation)(properties.auth),\n        DBProxyName: cdk.stringToCloudFormation(properties.dbProxyName),\n        EngineFamily: cdk.stringToCloudFormation(properties.engineFamily),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n        VpcSubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSubnetIds),\n        DebugLogging: cdk.booleanToCloudFormation(properties.debugLogging),\n        IdleClientTimeout: cdk.numberToCloudFormation(properties.idleClientTimeout),\n        RequireTLS: cdk.booleanToCloudFormation(properties.requireTls),\n        Tags: cdk.listMapper(cfnDBProxyTagFormatPropertyToCloudFormation)(properties.tags),\n        VpcSecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxyProps>();\n    ret.addPropertyResult('auth', 'Auth', cfn_parse.FromCloudFormation.getArray(CfnDBProxyAuthFormatPropertyFromCloudFormation)(properties.Auth));\n    ret.addPropertyResult('dbProxyName', 'DBProxyName', cfn_parse.FromCloudFormation.getString(properties.DBProxyName));\n    ret.addPropertyResult('engineFamily', 'EngineFamily', cfn_parse.FromCloudFormation.getString(properties.EngineFamily));\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addPropertyResult('vpcSubnetIds', 'VpcSubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.VpcSubnetIds));\n    ret.addPropertyResult('debugLogging', 'DebugLogging', properties.DebugLogging != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DebugLogging) : undefined);\n    ret.addPropertyResult('idleClientTimeout', 'IdleClientTimeout', properties.IdleClientTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.IdleClientTimeout) : undefined);\n    ret.addPropertyResult('requireTls', 'RequireTLS', properties.RequireTLS != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RequireTLS) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBProxyTagFormatPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('vpcSecurityGroupIds', 'VpcSecurityGroupIds', properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupIds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBProxy extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBProxy\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBProxy {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBProxyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBProxy(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                               \n    public readonly attrDbProxyArn: string;\n\n                                                                                                                                 \n    public readonly attrEndpoint: string;\n\n                                                                                                                                                                                                            \n    public auth: Array<CfnDBProxy.AuthFormatProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    public dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n    public engineFamily: string;\n\n                                                                                                                                                                                                                                                                           \n    public roleArn: string;\n\n                                                                                                                                                                                                                               \n    public vpcSubnetIds: string[];\n\nn    public debugLogging: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                    \n    public idleClientTimeout: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                  \n    public requireTls: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                           \n    public tags: CfnDBProxy.TagFormatProperty[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                   \n    public vpcSecurityGroupIds: string[] | undefined;\n\n                                                                                                                                                                                                                       \n    constructor(scope: constructs.Construct, id: string, props: CfnDBProxyProps) {\n        super(scope, id, { type: CfnDBProxy.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'auth', this);\n        cdk.requireProperty(props, 'dbProxyName', this);\n        cdk.requireProperty(props, 'engineFamily', this);\n        cdk.requireProperty(props, 'roleArn', this);\n        cdk.requireProperty(props, 'vpcSubnetIds', this);\n        this.attrDbProxyArn = cdk.Token.asString(this.getAtt('DBProxyArn'));\n        this.attrEndpoint = cdk.Token.asString(this.getAtt('Endpoint'));\n\n        this.auth = props.auth;\n        this.dbProxyName = props.dbProxyName;\n        this.engineFamily = props.engineFamily;\n        this.roleArn = props.roleArn;\n        this.vpcSubnetIds = props.vpcSubnetIds;\n        this.debugLogging = props.debugLogging;\n        this.idleClientTimeout = props.idleClientTimeout;\n        this.requireTls = props.requireTls;\n        this.tags = props.tags;\n        this.vpcSecurityGroupIds = props.vpcSecurityGroupIds;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBProxy.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            auth: this.auth,\n            dbProxyName: this.dbProxyName,\n            engineFamily: this.engineFamily,\n            roleArn: this.roleArn,\n            vpcSubnetIds: this.vpcSubnetIds,\n            debugLogging: this.debugLogging,\n            idleClientTimeout: this.idleClientTimeout,\n            requireTls: this.requireTls,\n            tags: this.tags,\n            vpcSecurityGroupIds: this.vpcSecurityGroupIds,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBProxyPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBProxy {\n                                                                                                                                                                                                                                                                                                   \n    export interface AuthFormatProperty {\n                                                                                                                                                                                                                                                                                                                                                                     \n        readonly authScheme?: string;\n                                                                                                                                                                                                                                                                                                                           \n        readonly description?: string;\n                                                                                                                                                                                                                                                                                                                                                                                         \n        readonly iamAuth?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                            \n        readonly secretArn?: string;\n                                                                                                                                                                                                                                                                      \n        readonly userName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthFormatProperty`\n *\n * @param properties - the TypeScript properties of a `AuthFormatProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxy_AuthFormatPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authScheme', cdk.validateString)(properties.authScheme));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('iamAuth', cdk.validateString)(properties.iamAuth));\n    errors.collect(cdk.propertyValidator('secretArn', cdk.validateString)(properties.secretArn));\n    errors.collect(cdk.propertyValidator('userName', cdk.validateString)(properties.userName));\n    return errors.wrap('supplied properties not correct for \"AuthFormatProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxy.AuthFormat` resource\n *\n * @param properties - the TypeScript properties of a `AuthFormatProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxy.AuthFormat` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyAuthFormatPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxy_AuthFormatPropertyValidator(properties).assertSuccess();\n    return {\n        AuthScheme: cdk.stringToCloudFormation(properties.authScheme),\n        Description: cdk.stringToCloudFormation(properties.description),\n        IAMAuth: cdk.stringToCloudFormation(properties.iamAuth),\n        SecretArn: cdk.stringToCloudFormation(properties.secretArn),\n        UserName: cdk.stringToCloudFormation(properties.userName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyAuthFormatPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxy.AuthFormatProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxy.AuthFormatProperty>();\n    ret.addPropertyResult('authScheme', 'AuthScheme', properties.AuthScheme != null ? cfn_parse.FromCloudFormation.getString(properties.AuthScheme) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('iamAuth', 'IAMAuth', properties.IAMAuth != null ? cfn_parse.FromCloudFormation.getString(properties.IAMAuth) : undefined);\n    ret.addPropertyResult('secretArn', 'SecretArn', properties.SecretArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretArn) : undefined);\n    ret.addPropertyResult('userName', 'UserName', properties.UserName != null ? cfn_parse.FromCloudFormation.getString(properties.UserName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnDBProxy {\n                                                                                                                                                                                                                                                                   \n    export interface TagFormatProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n        readonly key?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagFormatProperty`\n *\n * @param properties - the TypeScript properties of a `TagFormatProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxy_TagFormatPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagFormatProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxy.TagFormat` resource\n *\n * @param properties - the TypeScript properties of a `TagFormatProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxy.TagFormat` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyTagFormatPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxy_TagFormatPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyTagFormatPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxy.TagFormatProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxy.TagFormatProperty>();\n    ret.addPropertyResult('key', 'Key', properties.Key != null ? cfn_parse.FromCloudFormation.getString(properties.Key) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                              \nexport interface CfnDBProxyEndpointProps {\n\n                                                                                                                                                                                                                                       \n    readonly dbProxyEndpointName: string;\n\n                                                                                                                                                                                                                                                                  \n    readonly dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                                               \n    readonly vpcSubnetIds: string[];\n\n                                                                                                                                                                                                                                                                           \n    readonly tags?: CfnDBProxyEndpoint.TagFormatProperty[];\n\n                                                                                                                                                                                                                                                                                                                                               \n    readonly targetRole?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                             \n    readonly vpcSecurityGroupIds?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBProxyEndpointProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyEndpointProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxyEndpointPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dbProxyEndpointName', cdk.requiredValidator)(properties.dbProxyEndpointName));\n    errors.collect(cdk.propertyValidator('dbProxyEndpointName', cdk.validateString)(properties.dbProxyEndpointName));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.requiredValidator)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.validateString)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnDBProxyEndpoint_TagFormatPropertyValidator))(properties.tags));\n    errors.collect(cdk.propertyValidator('targetRole', cdk.validateString)(properties.targetRole));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroupIds', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));\n    errors.collect(cdk.propertyValidator('vpcSubnetIds', cdk.requiredValidator)(properties.vpcSubnetIds));\n    errors.collect(cdk.propertyValidator('vpcSubnetIds', cdk.listValidator(cdk.validateString))(properties.vpcSubnetIds));\n    return errors.wrap('supplied properties not correct for \"CfnDBProxyEndpointProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxyEndpoint` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyEndpointProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxyEndpoint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyEndpointPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxyEndpointPropsValidator(properties).assertSuccess();\n    return {\n        DBProxyEndpointName: cdk.stringToCloudFormation(properties.dbProxyEndpointName),\n        DBProxyName: cdk.stringToCloudFormation(properties.dbProxyName),\n        VpcSubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSubnetIds),\n        Tags: cdk.listMapper(cfnDBProxyEndpointTagFormatPropertyToCloudFormation)(properties.tags),\n        TargetRole: cdk.stringToCloudFormation(properties.targetRole),\n        VpcSecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyEndpointPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxyEndpointProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxyEndpointProps>();\n    ret.addPropertyResult('dbProxyEndpointName', 'DBProxyEndpointName', cfn_parse.FromCloudFormation.getString(properties.DBProxyEndpointName));\n    ret.addPropertyResult('dbProxyName', 'DBProxyName', cfn_parse.FromCloudFormation.getString(properties.DBProxyName));\n    ret.addPropertyResult('vpcSubnetIds', 'VpcSubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.VpcSubnetIds));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDBProxyEndpointTagFormatPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('targetRole', 'TargetRole', properties.TargetRole != null ? cfn_parse.FromCloudFormation.getString(properties.TargetRole) : undefined);\n    ret.addPropertyResult('vpcSecurityGroupIds', 'VpcSecurityGroupIds', properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupIds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBProxyEndpoint extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBProxyEndpoint\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBProxyEndpoint {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBProxyEndpointPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBProxyEndpoint(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                            \n    public readonly attrDbProxyEndpointArn: string;\n\n                                                                                                                                 \n    public readonly attrEndpoint: string;\n\n                                                                                                                                                                                                                                                                                                                            \n    public readonly attrIsDefault: cdk.IResolvable;\n\n                                                                                                 \n    public readonly attrVpcId: string;\n\n                                                                                                                                                                                                                                       \n    public dbProxyEndpointName: string;\n\n                                                                                                                                                                                                                                                                  \n    public dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                                               \n    public vpcSubnetIds: string[];\n\n                                                                                                                                                                                                                                                                           \n    public tags: CfnDBProxyEndpoint.TagFormatProperty[] | undefined;\n\n                                                                                                                                                                                                                                                                                                                                               \n    public targetRole: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                             \n    public vpcSecurityGroupIds: string[] | undefined;\n\n                                                                                                                                                                                                                               \n    constructor(scope: constructs.Construct, id: string, props: CfnDBProxyEndpointProps) {\n        super(scope, id, { type: CfnDBProxyEndpoint.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbProxyEndpointName', this);\n        cdk.requireProperty(props, 'dbProxyName', this);\n        cdk.requireProperty(props, 'vpcSubnetIds', this);\n        this.attrDbProxyEndpointArn = cdk.Token.asString(this.getAtt('DBProxyEndpointArn'));\n        this.attrEndpoint = cdk.Token.asString(this.getAtt('Endpoint'));\n        this.attrIsDefault = this.getAtt('IsDefault');\n        this.attrVpcId = cdk.Token.asString(this.getAtt('VpcId'));\n\n        this.dbProxyEndpointName = props.dbProxyEndpointName;\n        this.dbProxyName = props.dbProxyName;\n        this.vpcSubnetIds = props.vpcSubnetIds;\n        this.tags = props.tags;\n        this.targetRole = props.targetRole;\n        this.vpcSecurityGroupIds = props.vpcSecurityGroupIds;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBProxyEndpoint.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbProxyEndpointName: this.dbProxyEndpointName,\n            dbProxyName: this.dbProxyName,\n            vpcSubnetIds: this.vpcSubnetIds,\n            tags: this.tags,\n            targetRole: this.targetRole,\n            vpcSecurityGroupIds: this.vpcSecurityGroupIds,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBProxyEndpointPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBProxyEndpoint {\n                                                                                                                                                                                                                                                                                    \n    export interface TagFormatProperty {\nn        readonly key?: string;\n                                                                                                                                                                                                                                                                                         \n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagFormatProperty`\n *\n * @param properties - the TypeScript properties of a `TagFormatProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxyEndpoint_TagFormatPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagFormatProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxyEndpoint.TagFormat` resource\n *\n * @param properties - the TypeScript properties of a `TagFormatProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxyEndpoint.TagFormat` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyEndpointTagFormatPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxyEndpoint_TagFormatPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyEndpointTagFormatPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxyEndpoint.TagFormatProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxyEndpoint.TagFormatProperty>();\n    ret.addPropertyResult('key', 'Key', properties.Key != null ? cfn_parse.FromCloudFormation.getString(properties.Key) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                    \nexport interface CfnDBProxyTargetGroupProps {\n\n                                                                                                                                                                                                                                                                           \n    readonly dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                     \n    readonly targetGroupName: string;\n\n                                                                                                                                                                                                                                                                                                                        \n    readonly connectionPoolConfigurationInfo?: CfnDBProxyTargetGroup.ConnectionPoolConfigurationInfoFormatProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                     \n    readonly dbClusterIdentifiers?: string[];\n\n                                                                                                                                                                                                                                       \n    readonly dbInstanceIdentifiers?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBProxyTargetGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyTargetGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxyTargetGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('connectionPoolConfigurationInfo', CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatPropertyValidator)(properties.connectionPoolConfigurationInfo));\n    errors.collect(cdk.propertyValidator('dbClusterIdentifiers', cdk.listValidator(cdk.validateString))(properties.dbClusterIdentifiers));\n    errors.collect(cdk.propertyValidator('dbInstanceIdentifiers', cdk.listValidator(cdk.validateString))(properties.dbInstanceIdentifiers));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.requiredValidator)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('dbProxyName', cdk.validateString)(properties.dbProxyName));\n    errors.collect(cdk.propertyValidator('targetGroupName', cdk.requiredValidator)(properties.targetGroupName));\n    errors.collect(cdk.propertyValidator('targetGroupName', cdk.validateString)(properties.targetGroupName));\n    return errors.wrap('supplied properties not correct for \"CfnDBProxyTargetGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxyTargetGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBProxyTargetGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxyTargetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyTargetGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxyTargetGroupPropsValidator(properties).assertSuccess();\n    return {\n        DBProxyName: cdk.stringToCloudFormation(properties.dbProxyName),\n        TargetGroupName: cdk.stringToCloudFormation(properties.targetGroupName),\n        ConnectionPoolConfigurationInfo: cfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyToCloudFormation(properties.connectionPoolConfigurationInfo),\n        DBClusterIdentifiers: cdk.listMapper(cdk.stringToCloudFormation)(properties.dbClusterIdentifiers),\n        DBInstanceIdentifiers: cdk.listMapper(cdk.stringToCloudFormation)(properties.dbInstanceIdentifiers),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyTargetGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxyTargetGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxyTargetGroupProps>();\n    ret.addPropertyResult('dbProxyName', 'DBProxyName', cfn_parse.FromCloudFormation.getString(properties.DBProxyName));\n    ret.addPropertyResult('targetGroupName', 'TargetGroupName', cfn_parse.FromCloudFormation.getString(properties.TargetGroupName));\n    ret.addPropertyResult('connectionPoolConfigurationInfo', 'ConnectionPoolConfigurationInfo', properties.ConnectionPoolConfigurationInfo != null ? CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyFromCloudFormation(properties.ConnectionPoolConfigurationInfo) : undefined);\n    ret.addPropertyResult('dbClusterIdentifiers', 'DBClusterIdentifiers', properties.DBClusterIdentifiers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DBClusterIdentifiers) : undefined);\n    ret.addPropertyResult('dbInstanceIdentifiers', 'DBInstanceIdentifiers', properties.DBInstanceIdentifiers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DBInstanceIdentifiers) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBProxyTargetGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBProxyTargetGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBProxyTargetGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBProxyTargetGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBProxyTargetGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                   \n    public readonly attrTargetGroupArn: string;\n\n                                                                                                                                                                                                                                                                           \n    public dbProxyName: string;\n\n                                                                                                                                                                                                                                                                                                     \n    public targetGroupName: string;\n\n                                                                                                                                                                                                                                                                                                                        \n    public connectionPoolConfigurationInfo: CfnDBProxyTargetGroup.ConnectionPoolConfigurationInfoFormatProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                     \n    public dbClusterIdentifiers: string[] | undefined;\n\n                                                                                                                                                                                                                                       \n    public dbInstanceIdentifiers: string[] | undefined;\n\n                                                                                                                                                                                                                                  \n    constructor(scope: constructs.Construct, id: string, props: CfnDBProxyTargetGroupProps) {\n        super(scope, id, { type: CfnDBProxyTargetGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbProxyName', this);\n        cdk.requireProperty(props, 'targetGroupName', this);\n        this.attrTargetGroupArn = cdk.Token.asString(this.getAtt('TargetGroupArn'));\n\n        this.dbProxyName = props.dbProxyName;\n        this.targetGroupName = props.targetGroupName;\n        this.connectionPoolConfigurationInfo = props.connectionPoolConfigurationInfo;\n        this.dbClusterIdentifiers = props.dbClusterIdentifiers;\n        this.dbInstanceIdentifiers = props.dbInstanceIdentifiers;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBProxyTargetGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbProxyName: this.dbProxyName,\n            targetGroupName: this.targetGroupName,\n            connectionPoolConfigurationInfo: this.connectionPoolConfigurationInfo,\n            dbClusterIdentifiers: this.dbClusterIdentifiers,\n            dbInstanceIdentifiers: this.dbInstanceIdentifiers,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBProxyTargetGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBProxyTargetGroup {\n                                                                                                                                                                                                                                                                                                                                                                    \n    export interface ConnectionPoolConfigurationInfoFormatProperty {\nn        readonly connectionBorrowTimeout?: number;\nn        readonly initQuery?: string;\nn        readonly maxConnectionsPercent?: number;\nn        readonly maxIdleConnectionsPercent?: number;\nn        readonly sessionPinningFilters?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ConnectionPoolConfigurationInfoFormatProperty`\n *\n * @param properties - the TypeScript properties of a `ConnectionPoolConfigurationInfoFormatProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('connectionBorrowTimeout', cdk.validateNumber)(properties.connectionBorrowTimeout));\n    errors.collect(cdk.propertyValidator('initQuery', cdk.validateString)(properties.initQuery));\n    errors.collect(cdk.propertyValidator('maxConnectionsPercent', cdk.validateNumber)(properties.maxConnectionsPercent));\n    errors.collect(cdk.propertyValidator('maxIdleConnectionsPercent', cdk.validateNumber)(properties.maxIdleConnectionsPercent));\n    errors.collect(cdk.propertyValidator('sessionPinningFilters', cdk.listValidator(cdk.validateString))(properties.sessionPinningFilters));\n    return errors.wrap('supplied properties not correct for \"ConnectionPoolConfigurationInfoFormatProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBProxyTargetGroup.ConnectionPoolConfigurationInfoFormat` resource\n *\n * @param properties - the TypeScript properties of a `ConnectionPoolConfigurationInfoFormatProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBProxyTargetGroup.ConnectionPoolConfigurationInfoFormat` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatPropertyValidator(properties).assertSuccess();\n    return {\n        ConnectionBorrowTimeout: cdk.numberToCloudFormation(properties.connectionBorrowTimeout),\n        InitQuery: cdk.stringToCloudFormation(properties.initQuery),\n        MaxConnectionsPercent: cdk.numberToCloudFormation(properties.maxConnectionsPercent),\n        MaxIdleConnectionsPercent: cdk.numberToCloudFormation(properties.maxIdleConnectionsPercent),\n        SessionPinningFilters: cdk.listMapper(cdk.stringToCloudFormation)(properties.sessionPinningFilters),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBProxyTargetGroup.ConnectionPoolConfigurationInfoFormatProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBProxyTargetGroup.ConnectionPoolConfigurationInfoFormatProperty>();\n    ret.addPropertyResult('connectionBorrowTimeout', 'ConnectionBorrowTimeout', properties.ConnectionBorrowTimeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.ConnectionBorrowTimeout) : undefined);\n    ret.addPropertyResult('initQuery', 'InitQuery', properties.InitQuery != null ? cfn_parse.FromCloudFormation.getString(properties.InitQuery) : undefined);\n    ret.addPropertyResult('maxConnectionsPercent', 'MaxConnectionsPercent', properties.MaxConnectionsPercent != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxConnectionsPercent) : undefined);\n    ret.addPropertyResult('maxIdleConnectionsPercent', 'MaxIdleConnectionsPercent', properties.MaxIdleConnectionsPercent != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxIdleConnectionsPercent) : undefined);\n    ret.addPropertyResult('sessionPinningFilters', 'SessionPinningFilters', properties.SessionPinningFilters != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SessionPinningFilters) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                               \nexport interface CfnDBSecurityGroupProps {\n\n                                                                                                                                                                                                                                                    \n    readonly dbSecurityGroupIngress: Array<CfnDBSecurityGroup.IngressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                           \n    readonly groupDescription: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    readonly ec2VpcId?: string;\n\n                                                                                                                                                                                                                     \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBSecurityGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBSecurityGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBSecurityGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dbSecurityGroupIngress', cdk.requiredValidator)(properties.dbSecurityGroupIngress));\n    errors.collect(cdk.propertyValidator('dbSecurityGroupIngress', cdk.listValidator(CfnDBSecurityGroup_IngressPropertyValidator))(properties.dbSecurityGroupIngress));\n    errors.collect(cdk.propertyValidator('ec2VpcId', cdk.validateString)(properties.ec2VpcId));\n    errors.collect(cdk.propertyValidator('groupDescription', cdk.requiredValidator)(properties.groupDescription));\n    errors.collect(cdk.propertyValidator('groupDescription', cdk.validateString)(properties.groupDescription));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDBSecurityGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBSecurityGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBSecurityGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBSecurityGroupPropsValidator(properties).assertSuccess();\n    return {\n        DBSecurityGroupIngress: cdk.listMapper(cfnDBSecurityGroupIngressPropertyToCloudFormation)(properties.dbSecurityGroupIngress),\n        GroupDescription: cdk.stringToCloudFormation(properties.groupDescription),\n        EC2VpcId: cdk.stringToCloudFormation(properties.ec2VpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBSecurityGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBSecurityGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBSecurityGroupProps>();\n    ret.addPropertyResult('dbSecurityGroupIngress', 'DBSecurityGroupIngress', cfn_parse.FromCloudFormation.getArray(CfnDBSecurityGroupIngressPropertyFromCloudFormation)(properties.DBSecurityGroupIngress));\n    ret.addPropertyResult('groupDescription', 'GroupDescription', cfn_parse.FromCloudFormation.getString(properties.GroupDescription));\n    ret.addPropertyResult('ec2VpcId', 'EC2VpcId', properties.EC2VpcId != null ? cfn_parse.FromCloudFormation.getString(properties.EC2VpcId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBSecurityGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBSecurityGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBSecurityGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBSecurityGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBSecurityGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                    \n    public dbSecurityGroupIngress: Array<CfnDBSecurityGroup.IngressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                                           \n    public groupDescription: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public ec2VpcId: string | undefined;\n\n                                                                                                                                                                                                                     \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                               \n    constructor(scope: constructs.Construct, id: string, props: CfnDBSecurityGroupProps) {\n        super(scope, id, { type: CfnDBSecurityGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbSecurityGroupIngress', this);\n        cdk.requireProperty(props, 'groupDescription', this);\n\n        this.dbSecurityGroupIngress = props.dbSecurityGroupIngress;\n        this.groupDescription = props.groupDescription;\n        this.ec2VpcId = props.ec2VpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBSecurityGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBSecurityGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbSecurityGroupIngress: this.dbSecurityGroupIngress,\n            groupDescription: this.groupDescription,\n            ec2VpcId: this.ec2VpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBSecurityGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDBSecurityGroup {\n                                                                                                                                                                                                                                                                                                                      \n    export interface IngressProperty {\n                                                                                                                                                                                                                                \n        readonly cidrip?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly ec2SecurityGroupId?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n        readonly ec2SecurityGroupName?: string;\nn        readonly ec2SecurityGroupOwnerId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IngressProperty`\n *\n * @param properties - the TypeScript properties of a `IngressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBSecurityGroup_IngressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrip', cdk.validateString)(properties.cidrip));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupId', cdk.validateString)(properties.ec2SecurityGroupId));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupName', cdk.validateString)(properties.ec2SecurityGroupName));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupOwnerId', cdk.validateString)(properties.ec2SecurityGroupOwnerId));\n    return errors.wrap('supplied properties not correct for \"IngressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroup.Ingress` resource\n *\n * @param properties - the TypeScript properties of a `IngressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroup.Ingress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBSecurityGroupIngressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBSecurityGroup_IngressPropertyValidator(properties).assertSuccess();\n    return {\n        CIDRIP: cdk.stringToCloudFormation(properties.cidrip),\n        EC2SecurityGroupId: cdk.stringToCloudFormation(properties.ec2SecurityGroupId),\n        EC2SecurityGroupName: cdk.stringToCloudFormation(properties.ec2SecurityGroupName),\n        EC2SecurityGroupOwnerId: cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBSecurityGroupIngressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBSecurityGroup.IngressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBSecurityGroup.IngressProperty>();\n    ret.addPropertyResult('cidrip', 'CIDRIP', properties.CIDRIP != null ? cfn_parse.FromCloudFormation.getString(properties.CIDRIP) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupId', 'EC2SecurityGroupId', properties.EC2SecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupId) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupName', 'EC2SecurityGroupName', properties.EC2SecurityGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupOwnerId', 'EC2SecurityGroupOwnerId', properties.EC2SecurityGroupOwnerId != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                            \nexport interface CfnDBSecurityGroupIngressProps {\n\n                                                                                                                                                                                                                                                                  \n    readonly dbSecurityGroupName: string;\n\n                                                                                                                                                                                                                     \n    readonly cidrip?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly ec2SecurityGroupId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                       \n    readonly ec2SecurityGroupName?: string;\n\nn    readonly ec2SecurityGroupOwnerId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBSecurityGroupIngressProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBSecurityGroupIngressProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBSecurityGroupIngressPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrip', cdk.validateString)(properties.cidrip));\n    errors.collect(cdk.propertyValidator('dbSecurityGroupName', cdk.requiredValidator)(properties.dbSecurityGroupName));\n    errors.collect(cdk.propertyValidator('dbSecurityGroupName', cdk.validateString)(properties.dbSecurityGroupName));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupId', cdk.validateString)(properties.ec2SecurityGroupId));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupName', cdk.validateString)(properties.ec2SecurityGroupName));\n    errors.collect(cdk.propertyValidator('ec2SecurityGroupOwnerId', cdk.validateString)(properties.ec2SecurityGroupOwnerId));\n    return errors.wrap('supplied properties not correct for \"CfnDBSecurityGroupIngressProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroupIngress` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBSecurityGroupIngressProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBSecurityGroupIngress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBSecurityGroupIngressPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBSecurityGroupIngressPropsValidator(properties).assertSuccess();\n    return {\n        DBSecurityGroupName: cdk.stringToCloudFormation(properties.dbSecurityGroupName),\n        CIDRIP: cdk.stringToCloudFormation(properties.cidrip),\n        EC2SecurityGroupId: cdk.stringToCloudFormation(properties.ec2SecurityGroupId),\n        EC2SecurityGroupName: cdk.stringToCloudFormation(properties.ec2SecurityGroupName),\n        EC2SecurityGroupOwnerId: cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBSecurityGroupIngressPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBSecurityGroupIngressProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBSecurityGroupIngressProps>();\n    ret.addPropertyResult('dbSecurityGroupName', 'DBSecurityGroupName', cfn_parse.FromCloudFormation.getString(properties.DBSecurityGroupName));\n    ret.addPropertyResult('cidrip', 'CIDRIP', properties.CIDRIP != null ? cfn_parse.FromCloudFormation.getString(properties.CIDRIP) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupId', 'EC2SecurityGroupId', properties.EC2SecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupId) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupName', 'EC2SecurityGroupName', properties.EC2SecurityGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName) : undefined);\n    ret.addPropertyResult('ec2SecurityGroupOwnerId', 'EC2SecurityGroupOwnerId', properties.EC2SecurityGroupOwnerId != null ? cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnDBSecurityGroupIngress extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBSecurityGroupIngress\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBSecurityGroupIngress {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBSecurityGroupIngressPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBSecurityGroupIngress(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                  \n    public dbSecurityGroupName: string;\n\n                                                                                                                                                                                                                     \n    public cidrip: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public ec2SecurityGroupId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                       \n    public ec2SecurityGroupName: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public ec2SecurityGroupOwnerId: string | undefined;\n\n                                                                                                                                                                                                                                      \n    constructor(scope: constructs.Construct, id: string, props: CfnDBSecurityGroupIngressProps) {\n        super(scope, id, { type: CfnDBSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbSecurityGroupName', this);\n\n        this.dbSecurityGroupName = props.dbSecurityGroupName;\n        this.cidrip = props.cidrip;\n        this.ec2SecurityGroupId = props.ec2SecurityGroupId;\n        this.ec2SecurityGroupName = props.ec2SecurityGroupName;\n        this.ec2SecurityGroupOwnerId = props.ec2SecurityGroupOwnerId;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbSecurityGroupName: this.dbSecurityGroupName,\n            cidrip: this.cidrip,\n            ec2SecurityGroupId: this.ec2SecurityGroupId,\n            ec2SecurityGroupName: this.ec2SecurityGroupName,\n            ec2SecurityGroupOwnerId: this.ec2SecurityGroupOwnerId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBSecurityGroupIngressPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                           \nexport interface CfnDBSubnetGroupProps {\n\n                                                                                                                                                                                                                                     \n    readonly dbSubnetGroupDescription: string;\n\n                                                                                                                                                                                                                         \n    readonly subnetIds: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    readonly dbSubnetGroupName?: string;\n\n                                                                                                                                                                                                               \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDBSubnetGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnDBSubnetGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDBSubnetGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dbSubnetGroupDescription', cdk.requiredValidator)(properties.dbSubnetGroupDescription));\n    errors.collect(cdk.propertyValidator('dbSubnetGroupDescription', cdk.validateString)(properties.dbSubnetGroupDescription));\n    errors.collect(cdk.propertyValidator('dbSubnetGroupName', cdk.validateString)(properties.dbSubnetGroupName));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDBSubnetGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::DBSubnetGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnDBSubnetGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::DBSubnetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDBSubnetGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDBSubnetGroupPropsValidator(properties).assertSuccess();\n    return {\n        DBSubnetGroupDescription: cdk.stringToCloudFormation(properties.dbSubnetGroupDescription),\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        DBSubnetGroupName: cdk.stringToCloudFormation(properties.dbSubnetGroupName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDBSubnetGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDBSubnetGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDBSubnetGroupProps>();\n    ret.addPropertyResult('dbSubnetGroupDescription', 'DBSubnetGroupDescription', cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupDescription));\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('dbSubnetGroupName', 'DBSubnetGroupName', properties.DBSubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \nexport class CfnDBSubnetGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::DBSubnetGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDBSubnetGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDBSubnetGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDBSubnetGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                     \n    public dbSubnetGroupDescription: string;\n\n                                                                                                                                                                                                                         \n    public subnetIds: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                        \n    public dbSubnetGroupName: string | undefined;\n\n                                                                                                                                                                                                               \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                             \n    constructor(scope: constructs.Construct, id: string, props: CfnDBSubnetGroupProps) {\n        super(scope, id, { type: CfnDBSubnetGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dbSubnetGroupDescription', this);\n        cdk.requireProperty(props, 'subnetIds', this);\n\n        this.dbSubnetGroupDescription = props.dbSubnetGroupDescription;\n        this.subnetIds = props.subnetIds;\n        this.dbSubnetGroupName = props.dbSubnetGroupName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::DBSubnetGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDBSubnetGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dbSubnetGroupDescription: this.dbSubnetGroupDescription,\n            subnetIds: this.subnetIds,\n            dbSubnetGroupName: this.dbSubnetGroupName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDBSubnetGroupPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                                  \nexport interface CfnEventSubscriptionProps {\n\n                                                                                                                                                                                                                                                                                                                                                    \n    readonly snsTopicArn: string;\n\n                                                                                                                                                                                                                                                                                                            \n    readonly enabled?: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly eventCategories?: string[];\n\nn    readonly sourceIds?: string[];\n\nn    readonly sourceType?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEventSubscriptionProps`\n *\n * @param properties - the TypeScript properties of a `CfnEventSubscriptionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEventSubscriptionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('eventCategories', cdk.listValidator(cdk.validateString))(properties.eventCategories));\n    errors.collect(cdk.propertyValidator('snsTopicArn', cdk.requiredValidator)(properties.snsTopicArn));\n    errors.collect(cdk.propertyValidator('snsTopicArn', cdk.validateString)(properties.snsTopicArn));\n    errors.collect(cdk.propertyValidator('sourceIds', cdk.listValidator(cdk.validateString))(properties.sourceIds));\n    errors.collect(cdk.propertyValidator('sourceType', cdk.validateString)(properties.sourceType));\n    return errors.wrap('supplied properties not correct for \"CfnEventSubscriptionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::EventSubscription` resource\n *\n * @param properties - the TypeScript properties of a `CfnEventSubscriptionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::EventSubscription` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEventSubscriptionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEventSubscriptionPropsValidator(properties).assertSuccess();\n    return {\n        SnsTopicArn: cdk.stringToCloudFormation(properties.snsTopicArn),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        EventCategories: cdk.listMapper(cdk.stringToCloudFormation)(properties.eventCategories),\n        SourceIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceIds),\n        SourceType: cdk.stringToCloudFormation(properties.sourceType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEventSubscriptionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEventSubscriptionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEventSubscriptionProps>();\n    ret.addPropertyResult('snsTopicArn', 'SnsTopicArn', cfn_parse.FromCloudFormation.getString(properties.SnsTopicArn));\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addPropertyResult('eventCategories', 'EventCategories', properties.EventCategories != null ? cfn_parse.FromCloudFormation.getStringArray(properties.EventCategories) : undefined);\n    ret.addPropertyResult('sourceIds', 'SourceIds', properties.SourceIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceIds) : undefined);\n    ret.addPropertyResult('sourceType', 'SourceType', properties.SourceType != null ? cfn_parse.FromCloudFormation.getString(properties.SourceType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnEventSubscription extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::EventSubscription\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEventSubscription {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEventSubscriptionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEventSubscription(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                                                                    \n    public snsTopicArn: string;\n\n                                                                                                                                                                                                                                                                                                            \n    public enabled: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public eventCategories: string[] | undefined;\n\nn    public sourceIds: string[] | undefined;\n\nn    public sourceType: string | undefined;\n\n                                                                                                                                                                                                                                 \n    constructor(scope: constructs.Construct, id: string, props: CfnEventSubscriptionProps) {\n        super(scope, id, { type: CfnEventSubscription.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'snsTopicArn', this);\n\n        this.snsTopicArn = props.snsTopicArn;\n        this.enabled = props.enabled;\n        this.eventCategories = props.eventCategories;\n        this.sourceIds = props.sourceIds;\n        this.sourceType = props.sourceType;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEventSubscription.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            snsTopicArn: this.snsTopicArn,\n            enabled: this.enabled,\n            eventCategories: this.eventCategories,\n            sourceIds: this.sourceIds,\n            sourceType: this.sourceType,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEventSubscriptionPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                          \nexport interface CfnGlobalClusterProps {\n\n                                                                                                                                                                                                                                                                                                                            \n    readonly deletionProtection?: boolean | cdk.IResolvable;\n\nn    readonly engine?: string;\n\n                                                                                                                                                                                                                                  \n    readonly engineVersion?: string;\n\n                                                                                                                                                                                                                                                 \n    readonly globalClusterIdentifier?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly sourceDbClusterIdentifier?: string;\n\n                                                                                                                                                                                                                                                   \n    readonly storageEncrypted?: boolean | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnGlobalClusterProps`\n *\n * @param properties - the TypeScript properties of a `CfnGlobalClusterProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnGlobalClusterPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deletionProtection', cdk.validateBoolean)(properties.deletionProtection));\n    errors.collect(cdk.propertyValidator('engine', cdk.validateString)(properties.engine));\n    errors.collect(cdk.propertyValidator('engineVersion', cdk.validateString)(properties.engineVersion));\n    errors.collect(cdk.propertyValidator('globalClusterIdentifier', cdk.validateString)(properties.globalClusterIdentifier));\n    errors.collect(cdk.propertyValidator('sourceDbClusterIdentifier', cdk.validateString)(properties.sourceDbClusterIdentifier));\n    errors.collect(cdk.propertyValidator('storageEncrypted', cdk.validateBoolean)(properties.storageEncrypted));\n    return errors.wrap('supplied properties not correct for \"CfnGlobalClusterProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::GlobalCluster` resource\n *\n * @param properties - the TypeScript properties of a `CfnGlobalClusterProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::GlobalCluster` resource.\n */\n// @ts-ignore TS6133\nfunction cfnGlobalClusterPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnGlobalClusterPropsValidator(properties).assertSuccess();\n    return {\n        DeletionProtection: cdk.booleanToCloudFormation(properties.deletionProtection),\n        Engine: cdk.stringToCloudFormation(properties.engine),\n        EngineVersion: cdk.stringToCloudFormation(properties.engineVersion),\n        GlobalClusterIdentifier: cdk.stringToCloudFormation(properties.globalClusterIdentifier),\n        SourceDBClusterIdentifier: cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),\n        StorageEncrypted: cdk.booleanToCloudFormation(properties.storageEncrypted),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnGlobalClusterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnGlobalClusterProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnGlobalClusterProps>();\n    ret.addPropertyResult('deletionProtection', 'DeletionProtection', properties.DeletionProtection != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection) : undefined);\n    ret.addPropertyResult('engine', 'Engine', properties.Engine != null ? cfn_parse.FromCloudFormation.getString(properties.Engine) : undefined);\n    ret.addPropertyResult('engineVersion', 'EngineVersion', properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined);\n    ret.addPropertyResult('globalClusterIdentifier', 'GlobalClusterIdentifier', properties.GlobalClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier) : undefined);\n    ret.addPropertyResult('sourceDbClusterIdentifier', 'SourceDBClusterIdentifier', properties.SourceDBClusterIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier) : undefined);\n    ret.addPropertyResult('storageEncrypted', 'StorageEncrypted', properties.StorageEncrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnGlobalCluster extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::GlobalCluster\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnGlobalCluster {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnGlobalClusterPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnGlobalCluster(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                                            \n    public deletionProtection: boolean | cdk.IResolvable | undefined;\n\nn    public engine: string | undefined;\n\n                                                                                                                                                                                                                                  \n    public engineVersion: string | undefined;\n\n                                                                                                                                                                                                                                                 \n    public globalClusterIdentifier: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public sourceDbClusterIdentifier: string | undefined;\n\n                                                                                                                                                                                                                                                   \n    public storageEncrypted: boolean | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                             \n    constructor(scope: constructs.Construct, id: string, props: CfnGlobalClusterProps = {}) {\n        super(scope, id, { type: CfnGlobalCluster.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.deletionProtection = props.deletionProtection;\n        this.engine = props.engine;\n        this.engineVersion = props.engineVersion;\n        this.globalClusterIdentifier = props.globalClusterIdentifier;\n        this.sourceDbClusterIdentifier = props.sourceDbClusterIdentifier;\n        this.storageEncrypted = props.storageEncrypted;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnGlobalCluster.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            deletionProtection: this.deletionProtection,\n            engine: this.engine,\n            engineVersion: this.engineVersion,\n            globalClusterIdentifier: this.globalClusterIdentifier,\n            sourceDbClusterIdentifier: this.sourceDbClusterIdentifier,\n            storageEncrypted: this.storageEncrypted,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnGlobalClusterPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                      \nexport interface CfnOptionGroupProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    readonly engineName: string;\n\n                                                                                                                                                                                                                                                                             \n    readonly majorEngineVersion: string;\n\n                                                                                                                                                                                                                                       \n    readonly optionConfigurations: Array<CfnOptionGroup.OptionConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                          \n    readonly optionGroupDescription: string;\n\n                                                                                                                                                                                                       \n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnOptionGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnOptionGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnOptionGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('engineName', cdk.requiredValidator)(properties.engineName));\n    errors.collect(cdk.propertyValidator('engineName', cdk.validateString)(properties.engineName));\n    errors.collect(cdk.propertyValidator('majorEngineVersion', cdk.requiredValidator)(properties.majorEngineVersion));\n    errors.collect(cdk.propertyValidator('majorEngineVersion', cdk.validateString)(properties.majorEngineVersion));\n    errors.collect(cdk.propertyValidator('optionConfigurations', cdk.requiredValidator)(properties.optionConfigurations));\n    errors.collect(cdk.propertyValidator('optionConfigurations', cdk.listValidator(CfnOptionGroup_OptionConfigurationPropertyValidator))(properties.optionConfigurations));\n    errors.collect(cdk.propertyValidator('optionGroupDescription', cdk.requiredValidator)(properties.optionGroupDescription));\n    errors.collect(cdk.propertyValidator('optionGroupDescription', cdk.validateString)(properties.optionGroupDescription));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnOptionGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::OptionGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnOptionGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::OptionGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnOptionGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnOptionGroupPropsValidator(properties).assertSuccess();\n    return {\n        EngineName: cdk.stringToCloudFormation(properties.engineName),\n        MajorEngineVersion: cdk.stringToCloudFormation(properties.majorEngineVersion),\n        OptionConfigurations: cdk.listMapper(cfnOptionGroupOptionConfigurationPropertyToCloudFormation)(properties.optionConfigurations),\n        OptionGroupDescription: cdk.stringToCloudFormation(properties.optionGroupDescription),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnOptionGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnOptionGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnOptionGroupProps>();\n    ret.addPropertyResult('engineName', 'EngineName', cfn_parse.FromCloudFormation.getString(properties.EngineName));\n    ret.addPropertyResult('majorEngineVersion', 'MajorEngineVersion', cfn_parse.FromCloudFormation.getString(properties.MajorEngineVersion));\n    ret.addPropertyResult('optionConfigurations', 'OptionConfigurations', cfn_parse.FromCloudFormation.getArray(CfnOptionGroupOptionConfigurationPropertyFromCloudFormation)(properties.OptionConfigurations));\n    ret.addPropertyResult('optionGroupDescription', 'OptionGroupDescription', cfn_parse.FromCloudFormation.getString(properties.OptionGroupDescription));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                       \nexport class CfnOptionGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RDS::OptionGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnOptionGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnOptionGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnOptionGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\nn    public engineName: string;\n\n                                                                                                                                                                                                                                                                             \n    public majorEngineVersion: string;\n\n                                                                                                                                                                                                                                       \n    public optionConfigurations: Array<CfnOptionGroup.OptionConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n                                                                                                                                                                                                                          \n    public optionGroupDescription: string;\n\n                                                                                                                                                                                                       \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                           \n    constructor(scope: constructs.Construct, id: string, props: CfnOptionGroupProps) {\n        super(scope, id, { type: CfnOptionGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'engineName', this);\n        cdk.requireProperty(props, 'majorEngineVersion', this);\n        cdk.requireProperty(props, 'optionConfigurations', this);\n        cdk.requireProperty(props, 'optionGroupDescription', this);\n\n        this.engineName = props.engineName;\n        this.majorEngineVersion = props.majorEngineVersion;\n        this.optionConfigurations = props.optionConfigurations;\n        this.optionGroupDescription = props.optionGroupDescription;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RDS::OptionGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnOptionGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            engineName: this.engineName,\n            majorEngineVersion: this.majorEngineVersion,\n            optionConfigurations: this.optionConfigurations,\n            optionGroupDescription: this.optionGroupDescription,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnOptionGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnOptionGroup {\n                                                                                                                                                                                                                                                                                                                                                        \n    export interface OptionConfigurationProperty {\n                                                                                                                                                                                                                                                                                                                                \n        readonly dbSecurityGroupMemberships?: string[];\n                                                                                                                                                                                                                                                                                             \n        readonly optionName: string;\n                                                                                                                                                                                                                                                                                                \n        readonly optionSettings?: Array<CfnOptionGroup.OptionSettingProperty | cdk.IResolvable> | cdk.IResolvable;\n                                                                                                                                                                                                                                                                       \n        readonly optionVersion?: string;\n                                                                                                                                                                                                                                                                     \n        readonly port?: number;\n                                                                                                                                                                                                                                                                                                                                  \n        readonly vpcSecurityGroupMemberships?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `OptionConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `OptionConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnOptionGroup_OptionConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dbSecurityGroupMemberships', cdk.listValidator(cdk.validateString))(properties.dbSecurityGroupMemberships));\n    errors.collect(cdk.propertyValidator('optionName', cdk.requiredValidator)(properties.optionName));\n    errors.collect(cdk.propertyValidator('optionName', cdk.validateString)(properties.optionName));\n    errors.collect(cdk.propertyValidator('optionSettings', cdk.listValidator(CfnOptionGroup_OptionSettingPropertyValidator))(properties.optionSettings));\n    errors.collect(cdk.propertyValidator('optionVersion', cdk.validateString)(properties.optionVersion));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroupMemberships', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupMemberships));\n    return errors.wrap('supplied properties not correct for \"OptionConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::OptionGroup.OptionConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `OptionConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::OptionGroup.OptionConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnOptionGroupOptionConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnOptionGroup_OptionConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        DBSecurityGroupMemberships: cdk.listMapper(cdk.stringToCloudFormation)(properties.dbSecurityGroupMemberships),\n        OptionName: cdk.stringToCloudFormation(properties.optionName),\n        OptionSettings: cdk.listMapper(cfnOptionGroupOptionSettingPropertyToCloudFormation)(properties.optionSettings),\n        OptionVersion: cdk.stringToCloudFormation(properties.optionVersion),\n        Port: cdk.numberToCloudFormation(properties.port),\n        VpcSecurityGroupMemberships: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupMemberships),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnOptionGroupOptionConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnOptionGroup.OptionConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnOptionGroup.OptionConfigurationProperty>();\n    ret.addPropertyResult('dbSecurityGroupMemberships', 'DBSecurityGroupMemberships', properties.DBSecurityGroupMemberships != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DBSecurityGroupMemberships) : undefined);\n    ret.addPropertyResult('optionName', 'OptionName', cfn_parse.FromCloudFormation.getString(properties.OptionName));\n    ret.addPropertyResult('optionSettings', 'OptionSettings', properties.OptionSettings != null ? cfn_parse.FromCloudFormation.getArray(CfnOptionGroupOptionSettingPropertyFromCloudFormation)(properties.OptionSettings) : undefined);\n    ret.addPropertyResult('optionVersion', 'OptionVersion', properties.OptionVersion != null ? cfn_parse.FromCloudFormation.getString(properties.OptionVersion) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('vpcSecurityGroupMemberships', 'VpcSecurityGroupMemberships', properties.VpcSecurityGroupMemberships != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupMemberships) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnOptionGroup {\n                                                                                                                                                                                                                                                                                                                                         \n    export interface OptionSettingProperty {\n                                                                                                                                                                                                                                                                                                                            \n        readonly name?: string;\n                                                                                                                                                                                                                                                                                                           \n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `OptionSettingProperty`\n *\n * @param properties - the TypeScript properties of a `OptionSettingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnOptionGroup_OptionSettingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"OptionSettingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RDS::OptionGroup.OptionSetting` resource\n *\n * @param properties - the TypeScript properties of a `OptionSettingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RDS::OptionGroup.OptionSetting` resource.\n */\n// @ts-ignore TS6133\nfunction cfnOptionGroupOptionSettingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnOptionGroup_OptionSettingPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnOptionGroupOptionSettingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnOptionGroup.OptionSettingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnOptionGroup.OptionSettingProperty>();\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
