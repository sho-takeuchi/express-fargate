{
  "version": 3,
  "sources": ["route53.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:00:46.434Z\",\"fingerprint\":\"Sm+/8lpTjquvptRpAQyw1II9odmmWDrY2gE/UPU/Gkk=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                \nexport interface CfnDNSSECProps {\n\n                                                                                                                                                                                                                                                                             \n    readonly hostedZoneId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDNSSECProps`\n *\n * @param properties - the TypeScript properties of a `CfnDNSSECProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDNSSECPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.requiredValidator)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    return errors.wrap('supplied properties not correct for \"CfnDNSSECProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::DNSSEC` resource\n *\n * @param properties - the TypeScript properties of a `CfnDNSSECProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::DNSSEC` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDNSSECPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDNSSECPropsValidator(properties).assertSuccess();\n    return {\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDNSSECPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDNSSECProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDNSSECProps>();\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', cfn_parse.FromCloudFormation.getString(properties.HostedZoneId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                    \nexport class CfnDNSSEC extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::DNSSEC\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDNSSEC {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDNSSECPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDNSSEC(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                             \n    public hostedZoneId: string;\n\n                                                                                                                                                                                                                          \n    constructor(scope: constructs.Construct, id: string, props: CfnDNSSECProps) {\n        super(scope, id, { type: CfnDNSSEC.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'hostedZoneId', this);\n\n        this.hostedZoneId = props.hostedZoneId;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDNSSEC.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            hostedZoneId: this.hostedZoneId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDNSSECPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                          \nexport interface CfnHealthCheckProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    readonly healthCheckConfig: CfnHealthCheck.HealthCheckConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                 \n    readonly healthCheckTags?: Array<CfnHealthCheck.HealthCheckTagProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnHealthCheckProps`\n *\n * @param properties - the TypeScript properties of a `CfnHealthCheckProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnHealthCheckPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('healthCheckConfig', cdk.requiredValidator)(properties.healthCheckConfig));\n    errors.collect(cdk.propertyValidator('healthCheckConfig', CfnHealthCheck_HealthCheckConfigPropertyValidator)(properties.healthCheckConfig));\n    errors.collect(cdk.propertyValidator('healthCheckTags', cdk.listValidator(CfnHealthCheck_HealthCheckTagPropertyValidator))(properties.healthCheckTags));\n    return errors.wrap('supplied properties not correct for \"CfnHealthCheckProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HealthCheck` resource\n *\n * @param properties - the TypeScript properties of a `CfnHealthCheckProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HealthCheck` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHealthCheckPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHealthCheckPropsValidator(properties).assertSuccess();\n    return {\n        HealthCheckConfig: cfnHealthCheckHealthCheckConfigPropertyToCloudFormation(properties.healthCheckConfig),\n        HealthCheckTags: cdk.listMapper(cfnHealthCheckHealthCheckTagPropertyToCloudFormation)(properties.healthCheckTags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHealthCheckPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHealthCheckProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHealthCheckProps>();\n    ret.addPropertyResult('healthCheckConfig', 'HealthCheckConfig', CfnHealthCheckHealthCheckConfigPropertyFromCloudFormation(properties.HealthCheckConfig));\n    ret.addPropertyResult('healthCheckTags', 'HealthCheckTags', properties.HealthCheckTags != null ? cfn_parse.FromCloudFormation.getArray(CfnHealthCheckHealthCheckTagPropertyFromCloudFormation)(properties.HealthCheckTags) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnHealthCheck extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::HealthCheck\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnHealthCheck {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnHealthCheckPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnHealthCheck(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                                            \n    public readonly attrHealthCheckId: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    public healthCheckConfig: CfnHealthCheck.HealthCheckConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                 \n    public healthCheckTags: Array<CfnHealthCheck.HealthCheckTagProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                               \n    constructor(scope: constructs.Construct, id: string, props: CfnHealthCheckProps) {\n        super(scope, id, { type: CfnHealthCheck.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'healthCheckConfig', this);\n        this.attrHealthCheckId = cdk.Token.asString(this.getAtt('HealthCheckId'));\n\n        this.healthCheckConfig = props.healthCheckConfig;\n        this.healthCheckTags = props.healthCheckTags;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnHealthCheck.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            healthCheckConfig: this.healthCheckConfig,\n            healthCheckTags: this.healthCheckTags,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnHealthCheckPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnHealthCheck {\n                                                                                                                                                                                                                 \n    export interface AlarmIdentifierProperty {\n                                                                                                                                                                                                                                                                               \n        readonly name: string;\n                                                                                                                                                                                                                                                                                   \n        readonly region: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AlarmIdentifierProperty`\n *\n * @param properties - the TypeScript properties of a `AlarmIdentifierProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHealthCheck_AlarmIdentifierPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('region', cdk.requiredValidator)(properties.region));\n    errors.collect(cdk.propertyValidator('region', cdk.validateString)(properties.region));\n    return errors.wrap('supplied properties not correct for \"AlarmIdentifierProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.AlarmIdentifier` resource\n *\n * @param properties - the TypeScript properties of a `AlarmIdentifierProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.AlarmIdentifier` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHealthCheckAlarmIdentifierPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHealthCheck_AlarmIdentifierPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Region: cdk.stringToCloudFormation(properties.region),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHealthCheckAlarmIdentifierPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHealthCheck.AlarmIdentifierProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHealthCheck.AlarmIdentifierProperty>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('region', 'Region', cfn_parse.FromCloudFormation.getString(properties.Region));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHealthCheck {\n                                                                                                                                                                                                                   \n    export interface HealthCheckConfigProperty {\n                                                                                                                                                                                                                                                                                                           \n        readonly alarmIdentifier?: CfnHealthCheck.AlarmIdentifierProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                               \n        readonly childHealthChecks?: string[];\n                                                                                                                                                                                                                                                                                               \n        readonly enableSni?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                             \n        readonly failureThreshold?: number;\n                                                                                                                                                                                                                                                                                                                             \n        readonly fullyQualifiedDomainName?: string;\n                                                                                                                                                                                                                                                                                                           \n        readonly healthThreshold?: number;\n                                                                                                                                                                                                                                                                                               \n        readonly ipAddress?: string;\n                                                                                                                                                                                                                                                                                                                                     \n        readonly insufficientDataHealthStatus?: string;\n                                                                                                                                                                                                                                                                                             \n        readonly inverted?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                         \n        readonly measureLatency?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                     \n        readonly port?: number;\n                                                                                                                                                                                                                                                                                           \n        readonly regions?: string[];\n                                                                                                                                                                                                                                                                                                           \n        readonly requestInterval?: number;\n                                                                                                                                                                                                                                                                                                     \n        readonly resourcePath?: string;\n                                                                                                                                                                                                                                                                                                               \n        readonly routingControlArn?: string;\n                                                                                                                                                                                                                                                                                                     \n        readonly searchString?: string;\n                                                                                                                                                                                                                                                                                     \n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HealthCheckConfigProperty`\n *\n * @param properties - the TypeScript properties of a `HealthCheckConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHealthCheck_HealthCheckConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('alarmIdentifier', CfnHealthCheck_AlarmIdentifierPropertyValidator)(properties.alarmIdentifier));\n    errors.collect(cdk.propertyValidator('childHealthChecks', cdk.listValidator(cdk.validateString))(properties.childHealthChecks));\n    errors.collect(cdk.propertyValidator('enableSni', cdk.validateBoolean)(properties.enableSni));\n    errors.collect(cdk.propertyValidator('failureThreshold', cdk.validateNumber)(properties.failureThreshold));\n    errors.collect(cdk.propertyValidator('fullyQualifiedDomainName', cdk.validateString)(properties.fullyQualifiedDomainName));\n    errors.collect(cdk.propertyValidator('healthThreshold', cdk.validateNumber)(properties.healthThreshold));\n    errors.collect(cdk.propertyValidator('ipAddress', cdk.validateString)(properties.ipAddress));\n    errors.collect(cdk.propertyValidator('insufficientDataHealthStatus', cdk.validateString)(properties.insufficientDataHealthStatus));\n    errors.collect(cdk.propertyValidator('inverted', cdk.validateBoolean)(properties.inverted));\n    errors.collect(cdk.propertyValidator('measureLatency', cdk.validateBoolean)(properties.measureLatency));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('regions', cdk.listValidator(cdk.validateString))(properties.regions));\n    errors.collect(cdk.propertyValidator('requestInterval', cdk.validateNumber)(properties.requestInterval));\n    errors.collect(cdk.propertyValidator('resourcePath', cdk.validateString)(properties.resourcePath));\n    errors.collect(cdk.propertyValidator('routingControlArn', cdk.validateString)(properties.routingControlArn));\n    errors.collect(cdk.propertyValidator('searchString', cdk.validateString)(properties.searchString));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"HealthCheckConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.HealthCheckConfig` resource\n *\n * @param properties - the TypeScript properties of a `HealthCheckConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.HealthCheckConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHealthCheckHealthCheckConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHealthCheck_HealthCheckConfigPropertyValidator(properties).assertSuccess();\n    return {\n        AlarmIdentifier: cfnHealthCheckAlarmIdentifierPropertyToCloudFormation(properties.alarmIdentifier),\n        ChildHealthChecks: cdk.listMapper(cdk.stringToCloudFormation)(properties.childHealthChecks),\n        EnableSNI: cdk.booleanToCloudFormation(properties.enableSni),\n        FailureThreshold: cdk.numberToCloudFormation(properties.failureThreshold),\n        FullyQualifiedDomainName: cdk.stringToCloudFormation(properties.fullyQualifiedDomainName),\n        HealthThreshold: cdk.numberToCloudFormation(properties.healthThreshold),\n        IPAddress: cdk.stringToCloudFormation(properties.ipAddress),\n        InsufficientDataHealthStatus: cdk.stringToCloudFormation(properties.insufficientDataHealthStatus),\n        Inverted: cdk.booleanToCloudFormation(properties.inverted),\n        MeasureLatency: cdk.booleanToCloudFormation(properties.measureLatency),\n        Port: cdk.numberToCloudFormation(properties.port),\n        Regions: cdk.listMapper(cdk.stringToCloudFormation)(properties.regions),\n        RequestInterval: cdk.numberToCloudFormation(properties.requestInterval),\n        ResourcePath: cdk.stringToCloudFormation(properties.resourcePath),\n        RoutingControlArn: cdk.stringToCloudFormation(properties.routingControlArn),\n        SearchString: cdk.stringToCloudFormation(properties.searchString),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHealthCheckHealthCheckConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHealthCheck.HealthCheckConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHealthCheck.HealthCheckConfigProperty>();\n    ret.addPropertyResult('alarmIdentifier', 'AlarmIdentifier', properties.AlarmIdentifier != null ? CfnHealthCheckAlarmIdentifierPropertyFromCloudFormation(properties.AlarmIdentifier) : undefined);\n    ret.addPropertyResult('childHealthChecks', 'ChildHealthChecks', properties.ChildHealthChecks != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ChildHealthChecks) : undefined);\n    ret.addPropertyResult('enableSni', 'EnableSNI', properties.EnableSNI != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableSNI) : undefined);\n    ret.addPropertyResult('failureThreshold', 'FailureThreshold', properties.FailureThreshold != null ? cfn_parse.FromCloudFormation.getNumber(properties.FailureThreshold) : undefined);\n    ret.addPropertyResult('fullyQualifiedDomainName', 'FullyQualifiedDomainName', properties.FullyQualifiedDomainName != null ? cfn_parse.FromCloudFormation.getString(properties.FullyQualifiedDomainName) : undefined);\n    ret.addPropertyResult('healthThreshold', 'HealthThreshold', properties.HealthThreshold != null ? cfn_parse.FromCloudFormation.getNumber(properties.HealthThreshold) : undefined);\n    ret.addPropertyResult('ipAddress', 'IPAddress', properties.IPAddress != null ? cfn_parse.FromCloudFormation.getString(properties.IPAddress) : undefined);\n    ret.addPropertyResult('insufficientDataHealthStatus', 'InsufficientDataHealthStatus', properties.InsufficientDataHealthStatus != null ? cfn_parse.FromCloudFormation.getString(properties.InsufficientDataHealthStatus) : undefined);\n    ret.addPropertyResult('inverted', 'Inverted', properties.Inverted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Inverted) : undefined);\n    ret.addPropertyResult('measureLatency', 'MeasureLatency', properties.MeasureLatency != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MeasureLatency) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('regions', 'Regions', properties.Regions != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Regions) : undefined);\n    ret.addPropertyResult('requestInterval', 'RequestInterval', properties.RequestInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.RequestInterval) : undefined);\n    ret.addPropertyResult('resourcePath', 'ResourcePath', properties.ResourcePath != null ? cfn_parse.FromCloudFormation.getString(properties.ResourcePath) : undefined);\n    ret.addPropertyResult('routingControlArn', 'RoutingControlArn', properties.RoutingControlArn != null ? cfn_parse.FromCloudFormation.getString(properties.RoutingControlArn) : undefined);\n    ret.addPropertyResult('searchString', 'SearchString', properties.SearchString != null ? cfn_parse.FromCloudFormation.getString(properties.SearchString) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHealthCheck {\n                                                                                                                                                                                                                                                                                                                                            \n    export interface HealthCheckTagProperty {\nn        readonly key: string;\nn        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HealthCheckTagProperty`\n *\n * @param properties - the TypeScript properties of a `HealthCheckTagProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHealthCheck_HealthCheckTagPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"HealthCheckTagProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.HealthCheckTag` resource\n *\n * @param properties - the TypeScript properties of a `HealthCheckTagProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HealthCheck.HealthCheckTag` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHealthCheckHealthCheckTagPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHealthCheck_HealthCheckTagPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHealthCheckHealthCheckTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHealthCheck.HealthCheckTagProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHealthCheck.HealthCheckTagProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                        \nexport interface CfnHostedZoneProps {\n\n                                                                                                                                                                                                                                                                                                                                                 \n    readonly hostedZoneConfig?: CfnHostedZone.HostedZoneConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    readonly hostedZoneTags?: CfnHostedZone.HostedZoneTagProperty[];\n\nn    readonly name?: string;\n\nn    readonly queryLoggingConfig?: CfnHostedZone.QueryLoggingConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    readonly vpcs?: Array<CfnHostedZone.VPCProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnHostedZoneProps`\n *\n * @param properties - the TypeScript properties of a `CfnHostedZoneProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostedZonePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('hostedZoneConfig', CfnHostedZone_HostedZoneConfigPropertyValidator)(properties.hostedZoneConfig));\n    errors.collect(cdk.propertyValidator('hostedZoneTags', cdk.listValidator(CfnHostedZone_HostedZoneTagPropertyValidator))(properties.hostedZoneTags));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('queryLoggingConfig', CfnHostedZone_QueryLoggingConfigPropertyValidator)(properties.queryLoggingConfig));\n    errors.collect(cdk.propertyValidator('vpcs', cdk.listValidator(CfnHostedZone_VPCPropertyValidator))(properties.vpcs));\n    return errors.wrap('supplied properties not correct for \"CfnHostedZoneProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HostedZone` resource\n *\n * @param properties - the TypeScript properties of a `CfnHostedZoneProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HostedZone` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostedZonePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostedZonePropsValidator(properties).assertSuccess();\n    return {\n        HostedZoneConfig: cfnHostedZoneHostedZoneConfigPropertyToCloudFormation(properties.hostedZoneConfig),\n        HostedZoneTags: cdk.listMapper(cfnHostedZoneHostedZoneTagPropertyToCloudFormation)(properties.hostedZoneTags),\n        Name: cdk.stringToCloudFormation(properties.name),\n        QueryLoggingConfig: cfnHostedZoneQueryLoggingConfigPropertyToCloudFormation(properties.queryLoggingConfig),\n        VPCs: cdk.listMapper(cfnHostedZoneVPCPropertyToCloudFormation)(properties.vpcs),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostedZonePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostedZoneProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostedZoneProps>();\n    ret.addPropertyResult('hostedZoneConfig', 'HostedZoneConfig', properties.HostedZoneConfig != null ? CfnHostedZoneHostedZoneConfigPropertyFromCloudFormation(properties.HostedZoneConfig) : undefined);\n    ret.addPropertyResult('hostedZoneTags', 'HostedZoneTags', properties.HostedZoneTags != null ? cfn_parse.FromCloudFormation.getArray(CfnHostedZoneHostedZoneTagPropertyFromCloudFormation)(properties.HostedZoneTags) : undefined as any);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('queryLoggingConfig', 'QueryLoggingConfig', properties.QueryLoggingConfig != null ? CfnHostedZoneQueryLoggingConfigPropertyFromCloudFormation(properties.QueryLoggingConfig) : undefined);\n    ret.addPropertyResult('vpcs', 'VPCs', properties.VPCs != null ? cfn_parse.FromCloudFormation.getArray(CfnHostedZoneVPCPropertyFromCloudFormation)(properties.VPCs) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnHostedZone extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::HostedZone\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnHostedZone {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnHostedZonePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnHostedZone(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                      \n    public readonly attrId: string;\n\n                                                                                                                                                                                                                                         \n    public readonly attrNameServers: string[];\n\n                                                                                                                                                                                                                                                                                                                                                 \n    public hostedZoneConfig: CfnHostedZone.HostedZoneConfigProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public readonly tags: cdk.TagManager;\n\nn    public name: string | undefined;\n\nn    public queryLoggingConfig: CfnHostedZone.QueryLoggingConfigProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                \n    public vpcs: Array<CfnHostedZone.VPCProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                              \n    constructor(scope: constructs.Construct, id: string, props: CfnHostedZoneProps = {}) {\n        super(scope, id, { type: CfnHostedZone.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n        this.attrNameServers = cdk.Token.asList(this.getAtt('NameServers'));\n\n        this.hostedZoneConfig = props.hostedZoneConfig;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Route53::HostedZone\", props.hostedZoneTags, { tagPropertyName: 'hostedZoneTags' });\n        this.name = props.name;\n        this.queryLoggingConfig = props.queryLoggingConfig;\n        this.vpcs = props.vpcs;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnHostedZone.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            hostedZoneConfig: this.hostedZoneConfig,\n            hostedZoneTags: this.tags.renderTags(),\n            name: this.name,\n            queryLoggingConfig: this.queryLoggingConfig,\n            vpcs: this.vpcs,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnHostedZonePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnHostedZone {\n                                                                                                                                                                                                                                                                                                                                                                                           \n    export interface HostedZoneConfigProperty {\n                                                                                                                                                                                                                                                                                                 \n        readonly comment?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HostedZoneConfigProperty`\n *\n * @param properties - the TypeScript properties of a `HostedZoneConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostedZone_HostedZoneConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('comment', cdk.validateString)(properties.comment));\n    return errors.wrap('supplied properties not correct for \"HostedZoneConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HostedZone.HostedZoneConfig` resource\n *\n * @param properties - the TypeScript properties of a `HostedZoneConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HostedZone.HostedZoneConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostedZoneHostedZoneConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostedZone_HostedZoneConfigPropertyValidator(properties).assertSuccess();\n    return {\n        Comment: cdk.stringToCloudFormation(properties.comment),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostedZoneHostedZoneConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostedZone.HostedZoneConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostedZone.HostedZoneConfigProperty>();\n    ret.addPropertyResult('comment', 'Comment', properties.Comment != null ? cfn_parse.FromCloudFormation.getString(properties.Comment) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHostedZone {\n                                                                                                                                                                                                                                                                                                                                               \n    export interface HostedZoneTagProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly key: string;\nn        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HostedZoneTagProperty`\n *\n * @param properties - the TypeScript properties of a `HostedZoneTagProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostedZone_HostedZoneTagPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"HostedZoneTagProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HostedZone.HostedZoneTag` resource\n *\n * @param properties - the TypeScript properties of a `HostedZoneTagProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HostedZone.HostedZoneTag` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostedZoneHostedZoneTagPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostedZone_HostedZoneTagPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostedZoneHostedZoneTagPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostedZone.HostedZoneTagProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostedZone.HostedZoneTagProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHostedZone {\n                                                                                                                                                                                                                                                                                                         \n    export interface QueryLoggingConfigProperty {\n                                                                                                                                                                                                                                                                                                                                                                      \n        readonly cloudWatchLogsLogGroupArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `QueryLoggingConfigProperty`\n *\n * @param properties - the TypeScript properties of a `QueryLoggingConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostedZone_QueryLoggingConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cloudWatchLogsLogGroupArn', cdk.requiredValidator)(properties.cloudWatchLogsLogGroupArn));\n    errors.collect(cdk.propertyValidator('cloudWatchLogsLogGroupArn', cdk.validateString)(properties.cloudWatchLogsLogGroupArn));\n    return errors.wrap('supplied properties not correct for \"QueryLoggingConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HostedZone.QueryLoggingConfig` resource\n *\n * @param properties - the TypeScript properties of a `QueryLoggingConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HostedZone.QueryLoggingConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostedZoneQueryLoggingConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostedZone_QueryLoggingConfigPropertyValidator(properties).assertSuccess();\n    return {\n        CloudWatchLogsLogGroupArn: cdk.stringToCloudFormation(properties.cloudWatchLogsLogGroupArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostedZoneQueryLoggingConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostedZone.QueryLoggingConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostedZone.QueryLoggingConfigProperty>();\n    ret.addPropertyResult('cloudWatchLogsLogGroupArn', 'CloudWatchLogsLogGroupArn', cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsLogGroupArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHostedZone {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    export interface VPCProperty {\n                                                                                                                                                                                                                                                                                                                                                         \n        readonly vpcId: string;\n                                                                                                                                                                                                                                                                                                                                                                                  \n        readonly vpcRegion: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VPCProperty`\n *\n * @param properties - the TypeScript properties of a `VPCProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostedZone_VPCPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcRegion', cdk.requiredValidator)(properties.vpcRegion));\n    errors.collect(cdk.propertyValidator('vpcRegion', cdk.validateString)(properties.vpcRegion));\n    return errors.wrap('supplied properties not correct for \"VPCProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::HostedZone.VPC` resource\n *\n * @param properties - the TypeScript properties of a `VPCProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::HostedZone.VPC` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostedZoneVPCPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostedZone_VPCPropertyValidator(properties).assertSuccess();\n    return {\n        VPCId: cdk.stringToCloudFormation(properties.vpcId),\n        VPCRegion: cdk.stringToCloudFormation(properties.vpcRegion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostedZoneVPCPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostedZone.VPCProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostedZone.VPCProperty>();\n    ret.addPropertyResult('vpcId', 'VPCId', cfn_parse.FromCloudFormation.getString(properties.VPCId));\n    ret.addPropertyResult('vpcRegion', 'VPCRegion', cfn_parse.FromCloudFormation.getString(properties.VPCRegion));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                              \nexport interface CfnKeySigningKeyProps {\n\n                                                                                                                                                                                                                                                                                             \n    readonly hostedZoneId: string;\n\nn    readonly keyManagementServiceArn: string;\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    readonly name: string;\n\nn    readonly status: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnKeySigningKeyProps`\n *\n * @param properties - the TypeScript properties of a `CfnKeySigningKeyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnKeySigningKeyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.requiredValidator)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('keyManagementServiceArn', cdk.requiredValidator)(properties.keyManagementServiceArn));\n    errors.collect(cdk.propertyValidator('keyManagementServiceArn', cdk.validateString)(properties.keyManagementServiceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('status', cdk.requiredValidator)(properties.status));\n    errors.collect(cdk.propertyValidator('status', cdk.validateString)(properties.status));\n    return errors.wrap('supplied properties not correct for \"CfnKeySigningKeyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::KeySigningKey` resource\n *\n * @param properties - the TypeScript properties of a `CfnKeySigningKeyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::KeySigningKey` resource.\n */\n// @ts-ignore TS6133\nfunction cfnKeySigningKeyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnKeySigningKeyPropsValidator(properties).assertSuccess();\n    return {\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n        KeyManagementServiceArn: cdk.stringToCloudFormation(properties.keyManagementServiceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Status: cdk.stringToCloudFormation(properties.status),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnKeySigningKeyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnKeySigningKeyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnKeySigningKeyProps>();\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', cfn_parse.FromCloudFormation.getString(properties.HostedZoneId));\n    ret.addPropertyResult('keyManagementServiceArn', 'KeyManagementServiceArn', cfn_parse.FromCloudFormation.getString(properties.KeyManagementServiceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('status', 'Status', cfn_parse.FromCloudFormation.getString(properties.Status));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnKeySigningKey extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::KeySigningKey\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnKeySigningKey {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnKeySigningKeyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnKeySigningKey(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                             \n    public hostedZoneId: string;\n\nn    public keyManagementServiceArn: string;\n\n                                                                                                                                                                                                                                                                                                                                                                    \n    public name: string;\n\nn    public status: string;\n\n                                                                                                                                                                                                                                 \n    constructor(scope: constructs.Construct, id: string, props: CfnKeySigningKeyProps) {\n        super(scope, id, { type: CfnKeySigningKey.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'hostedZoneId', this);\n        cdk.requireProperty(props, 'keyManagementServiceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'status', this);\n\n        this.hostedZoneId = props.hostedZoneId;\n        this.keyManagementServiceArn = props.keyManagementServiceArn;\n        this.name = props.name;\n        this.status = props.status;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnKeySigningKey.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            hostedZoneId: this.hostedZoneId,\n            keyManagementServiceArn: this.keyManagementServiceArn,\n            name: this.name,\n            status: this.status,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnKeySigningKeyPropsToCloudFormation(props);\n    }\n}\n\n                                                                                                                                                                                                        \nexport interface CfnRecordSetProps {\n\nn    readonly name: string;\n\nn    readonly type: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n    readonly aliasTarget?: CfnRecordSet.AliasTargetProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                       \n    readonly comment?: string;\n\nn    readonly failover?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    readonly geoLocation?: CfnRecordSet.GeoLocationProperty | cdk.IResolvable;\n\nn    readonly healthCheckId?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly hostedZoneId?: string;\n\nn    readonly hostedZoneName?: string;\n\nn    readonly multiValueAnswer?: boolean | cdk.IResolvable;\n\nn    readonly region?: string;\n\nn    readonly resourceRecords?: string[];\n\nn    readonly setIdentifier?: string;\n\nn    readonly ttl?: string;\n\nn    readonly weight?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRecordSetProps`\n *\n * @param properties - the TypeScript properties of a `CfnRecordSetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('aliasTarget', CfnRecordSet_AliasTargetPropertyValidator)(properties.aliasTarget));\n    errors.collect(cdk.propertyValidator('comment', cdk.validateString)(properties.comment));\n    errors.collect(cdk.propertyValidator('failover', cdk.validateString)(properties.failover));\n    errors.collect(cdk.propertyValidator('geoLocation', CfnRecordSet_GeoLocationPropertyValidator)(properties.geoLocation));\n    errors.collect(cdk.propertyValidator('healthCheckId', cdk.validateString)(properties.healthCheckId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneName', cdk.validateString)(properties.hostedZoneName));\n    errors.collect(cdk.propertyValidator('multiValueAnswer', cdk.validateBoolean)(properties.multiValueAnswer));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('region', cdk.validateString)(properties.region));\n    errors.collect(cdk.propertyValidator('resourceRecords', cdk.listValidator(cdk.validateString))(properties.resourceRecords));\n    errors.collect(cdk.propertyValidator('setIdentifier', cdk.validateString)(properties.setIdentifier));\n    errors.collect(cdk.propertyValidator('ttl', cdk.validateString)(properties.ttl));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('weight', cdk.validateNumber)(properties.weight));\n    return errors.wrap('supplied properties not correct for \"CfnRecordSetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSet` resource\n *\n * @param properties - the TypeScript properties of a `CfnRecordSetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSetPropsValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Type: cdk.stringToCloudFormation(properties.type),\n        AliasTarget: cfnRecordSetAliasTargetPropertyToCloudFormation(properties.aliasTarget),\n        Comment: cdk.stringToCloudFormation(properties.comment),\n        Failover: cdk.stringToCloudFormation(properties.failover),\n        GeoLocation: cfnRecordSetGeoLocationPropertyToCloudFormation(properties.geoLocation),\n        HealthCheckId: cdk.stringToCloudFormation(properties.healthCheckId),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n        HostedZoneName: cdk.stringToCloudFormation(properties.hostedZoneName),\n        MultiValueAnswer: cdk.booleanToCloudFormation(properties.multiValueAnswer),\n        Region: cdk.stringToCloudFormation(properties.region),\n        ResourceRecords: cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceRecords),\n        SetIdentifier: cdk.stringToCloudFormation(properties.setIdentifier),\n        TTL: cdk.stringToCloudFormation(properties.ttl),\n        Weight: cdk.numberToCloudFormation(properties.weight),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSetProps>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('aliasTarget', 'AliasTarget', properties.AliasTarget != null ? CfnRecordSetAliasTargetPropertyFromCloudFormation(properties.AliasTarget) : undefined);\n    ret.addPropertyResult('comment', 'Comment', properties.Comment != null ? cfn_parse.FromCloudFormation.getString(properties.Comment) : undefined);\n    ret.addPropertyResult('failover', 'Failover', properties.Failover != null ? cfn_parse.FromCloudFormation.getString(properties.Failover) : undefined);\n    ret.addPropertyResult('geoLocation', 'GeoLocation', properties.GeoLocation != null ? CfnRecordSetGeoLocationPropertyFromCloudFormation(properties.GeoLocation) : undefined);\n    ret.addPropertyResult('healthCheckId', 'HealthCheckId', properties.HealthCheckId != null ? cfn_parse.FromCloudFormation.getString(properties.HealthCheckId) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', properties.HostedZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneId) : undefined);\n    ret.addPropertyResult('hostedZoneName', 'HostedZoneName', properties.HostedZoneName != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneName) : undefined);\n    ret.addPropertyResult('multiValueAnswer', 'MultiValueAnswer', properties.MultiValueAnswer != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MultiValueAnswer) : undefined);\n    ret.addPropertyResult('region', 'Region', properties.Region != null ? cfn_parse.FromCloudFormation.getString(properties.Region) : undefined);\n    ret.addPropertyResult('resourceRecords', 'ResourceRecords', properties.ResourceRecords != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ResourceRecords) : undefined);\n    ret.addPropertyResult('setIdentifier', 'SetIdentifier', properties.SetIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SetIdentifier) : undefined);\n    ret.addPropertyResult('ttl', 'TTL', properties.TTL != null ? cfn_parse.FromCloudFormation.getString(properties.TTL) : undefined);\n    ret.addPropertyResult('weight', 'Weight', properties.Weight != null ? cfn_parse.FromCloudFormation.getNumber(properties.Weight) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnRecordSet extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::RecordSet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRecordSet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRecordSetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRecordSet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\nn    public name: string;\n\nn    public type: string;\n\nn    public aliasTarget: CfnRecordSet.AliasTargetProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                       \n    public comment: string | undefined;\n\nn    public failover: string | undefined;\n\nn    public geoLocation: CfnRecordSet.GeoLocationProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n    public healthCheckId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    public hostedZoneId: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \n    public hostedZoneName: string | undefined;\n\nn    public multiValueAnswer: boolean | cdk.IResolvable | undefined;\n\nn    public region: string | undefined;\n\nn    public resourceRecords: string[] | undefined;\n\nn    public setIdentifier: string | undefined;\n\nn    public ttl: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    public weight: number | undefined;\n\n                                                                                                                                                                                                                             \n    constructor(scope: constructs.Construct, id: string, props: CfnRecordSetProps) {\n        super(scope, id, { type: CfnRecordSet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'type', this);\n\n        this.name = props.name;\n        this.type = props.type;\n        this.aliasTarget = props.aliasTarget;\n        this.comment = props.comment;\n        this.failover = props.failover;\n        this.geoLocation = props.geoLocation;\n        this.healthCheckId = props.healthCheckId;\n        this.hostedZoneId = props.hostedZoneId;\n        this.hostedZoneName = props.hostedZoneName;\n        this.multiValueAnswer = props.multiValueAnswer;\n        this.region = props.region;\n        this.resourceRecords = props.resourceRecords;\n        this.setIdentifier = props.setIdentifier;\n        this.ttl = props.ttl;\n        this.weight = props.weight;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRecordSet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            name: this.name,\n            type: this.type,\n            aliasTarget: this.aliasTarget,\n            comment: this.comment,\n            failover: this.failover,\n            geoLocation: this.geoLocation,\n            healthCheckId: this.healthCheckId,\n            hostedZoneId: this.hostedZoneId,\n            hostedZoneName: this.hostedZoneName,\n            multiValueAnswer: this.multiValueAnswer,\n            region: this.region,\n            resourceRecords: this.resourceRecords,\n            setIdentifier: this.setIdentifier,\n            ttl: this.ttl,\n            weight: this.weight,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRecordSetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnRecordSet {\nn    export interface AliasTargetProperty {\nn        readonly dnsName: string;\nn        readonly evaluateTargetHealth?: boolean | cdk.IResolvable;\nn        readonly hostedZoneId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AliasTargetProperty`\n *\n * @param properties - the TypeScript properties of a `AliasTargetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSet_AliasTargetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dnsName', cdk.requiredValidator)(properties.dnsName));\n    errors.collect(cdk.propertyValidator('dnsName', cdk.validateString)(properties.dnsName));\n    errors.collect(cdk.propertyValidator('evaluateTargetHealth', cdk.validateBoolean)(properties.evaluateTargetHealth));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.requiredValidator)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    return errors.wrap('supplied properties not correct for \"AliasTargetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSet.AliasTarget` resource\n *\n * @param properties - the TypeScript properties of a `AliasTargetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSet.AliasTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetAliasTargetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSet_AliasTargetPropertyValidator(properties).assertSuccess();\n    return {\n        DNSName: cdk.stringToCloudFormation(properties.dnsName),\n        EvaluateTargetHealth: cdk.booleanToCloudFormation(properties.evaluateTargetHealth),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetAliasTargetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSet.AliasTargetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSet.AliasTargetProperty>();\n    ret.addPropertyResult('dnsName', 'DNSName', cfn_parse.FromCloudFormation.getString(properties.DNSName));\n    ret.addPropertyResult('evaluateTargetHealth', 'EvaluateTargetHealth', properties.EvaluateTargetHealth != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EvaluateTargetHealth) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', cfn_parse.FromCloudFormation.getString(properties.HostedZoneId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnRecordSet {\n                                                                                                                                                                                                                                                                                 \n    export interface GeoLocationProperty {\nn        readonly continentCode?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n        readonly countryCode?: string;\nn        readonly subdivisionCode?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `GeoLocationProperty`\n *\n * @param properties - the TypeScript properties of a `GeoLocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSet_GeoLocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('continentCode', cdk.validateString)(properties.continentCode));\n    errors.collect(cdk.propertyValidator('countryCode', cdk.validateString)(properties.countryCode));\n    errors.collect(cdk.propertyValidator('subdivisionCode', cdk.validateString)(properties.subdivisionCode));\n    return errors.wrap('supplied properties not correct for \"GeoLocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSet.GeoLocation` resource\n *\n * @param properties - the TypeScript properties of a `GeoLocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSet.GeoLocation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetGeoLocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSet_GeoLocationPropertyValidator(properties).assertSuccess();\n    return {\n        ContinentCode: cdk.stringToCloudFormation(properties.continentCode),\n        CountryCode: cdk.stringToCloudFormation(properties.countryCode),\n        SubdivisionCode: cdk.stringToCloudFormation(properties.subdivisionCode),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetGeoLocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSet.GeoLocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSet.GeoLocationProperty>();\n    ret.addPropertyResult('continentCode', 'ContinentCode', properties.ContinentCode != null ? cfn_parse.FromCloudFormation.getString(properties.ContinentCode) : undefined);\n    ret.addPropertyResult('countryCode', 'CountryCode', properties.CountryCode != null ? cfn_parse.FromCloudFormation.getString(properties.CountryCode) : undefined);\n    ret.addPropertyResult('subdivisionCode', 'SubdivisionCode', properties.SubdivisionCode != null ? cfn_parse.FromCloudFormation.getString(properties.SubdivisionCode) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                \nexport interface CfnRecordSetGroupProps {\n\n                                                                                                                                                                                                                                                               \n    readonly comment?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    readonly hostedZoneId?: string;\n\nn    readonly hostedZoneName?: string;\n\n                                                                                                                                                                                                                                                                                     \n    readonly recordSets?: Array<CfnRecordSetGroup.RecordSetProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRecordSetGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnRecordSetGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSetGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('comment', cdk.validateString)(properties.comment));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneName', cdk.validateString)(properties.hostedZoneName));\n    errors.collect(cdk.propertyValidator('recordSets', cdk.listValidator(CfnRecordSetGroup_RecordSetPropertyValidator))(properties.recordSets));\n    return errors.wrap('supplied properties not correct for \"CfnRecordSetGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnRecordSetGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSetGroupPropsValidator(properties).assertSuccess();\n    return {\n        Comment: cdk.stringToCloudFormation(properties.comment),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n        HostedZoneName: cdk.stringToCloudFormation(properties.hostedZoneName),\n        RecordSets: cdk.listMapper(cfnRecordSetGroupRecordSetPropertyToCloudFormation)(properties.recordSets),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSetGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSetGroupProps>();\n    ret.addPropertyResult('comment', 'Comment', properties.Comment != null ? cfn_parse.FromCloudFormation.getString(properties.Comment) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', properties.HostedZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneId) : undefined);\n    ret.addPropertyResult('hostedZoneName', 'HostedZoneName', properties.HostedZoneName != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneName) : undefined);\n    ret.addPropertyResult('recordSets', 'RecordSets', properties.RecordSets != null ? cfn_parse.FromCloudFormation.getArray(CfnRecordSetGroupRecordSetPropertyFromCloudFormation)(properties.RecordSets) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                \nexport class CfnRecordSetGroup extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53::RecordSetGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRecordSetGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRecordSetGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRecordSetGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                               \n    public comment: string | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n    public hostedZoneId: string | undefined;\n\nn    public hostedZoneName: string | undefined;\n\n                                                                                                                                                                                                                                                                                     \n    public recordSets: Array<CfnRecordSetGroup.RecordSetProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                  \n    constructor(scope: constructs.Construct, id: string, props: CfnRecordSetGroupProps = {}) {\n        super(scope, id, { type: CfnRecordSetGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.comment = props.comment;\n        this.hostedZoneId = props.hostedZoneId;\n        this.hostedZoneName = props.hostedZoneName;\n        this.recordSets = props.recordSets;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRecordSetGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            comment: this.comment,\n            hostedZoneId: this.hostedZoneId,\n            hostedZoneName: this.hostedZoneName,\n            recordSets: this.recordSets,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRecordSetGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnRecordSetGroup {\nn    export interface AliasTargetProperty {\nn        readonly dnsName: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly evaluateTargetHealth?: boolean | cdk.IResolvable;\nn        readonly hostedZoneId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AliasTargetProperty`\n *\n * @param properties - the TypeScript properties of a `AliasTargetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSetGroup_AliasTargetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dnsName', cdk.requiredValidator)(properties.dnsName));\n    errors.collect(cdk.propertyValidator('dnsName', cdk.validateString)(properties.dnsName));\n    errors.collect(cdk.propertyValidator('evaluateTargetHealth', cdk.validateBoolean)(properties.evaluateTargetHealth));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.requiredValidator)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    return errors.wrap('supplied properties not correct for \"AliasTargetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.AliasTarget` resource\n *\n * @param properties - the TypeScript properties of a `AliasTargetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.AliasTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetGroupAliasTargetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSetGroup_AliasTargetPropertyValidator(properties).assertSuccess();\n    return {\n        DNSName: cdk.stringToCloudFormation(properties.dnsName),\n        EvaluateTargetHealth: cdk.booleanToCloudFormation(properties.evaluateTargetHealth),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetGroupAliasTargetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSetGroup.AliasTargetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSetGroup.AliasTargetProperty>();\n    ret.addPropertyResult('dnsName', 'DNSName', cfn_parse.FromCloudFormation.getString(properties.DNSName));\n    ret.addPropertyResult('evaluateTargetHealth', 'EvaluateTargetHealth', properties.EvaluateTargetHealth != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EvaluateTargetHealth) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', cfn_parse.FromCloudFormation.getString(properties.HostedZoneId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnRecordSetGroup {\n                                                                                                                                                                                                                                                                                 \n    export interface GeoLocationProperty {\nn        readonly continentCode?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n        readonly countryCode?: string;\nn        readonly subdivisionCode?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `GeoLocationProperty`\n *\n * @param properties - the TypeScript properties of a `GeoLocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSetGroup_GeoLocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('continentCode', cdk.validateString)(properties.continentCode));\n    errors.collect(cdk.propertyValidator('countryCode', cdk.validateString)(properties.countryCode));\n    errors.collect(cdk.propertyValidator('subdivisionCode', cdk.validateString)(properties.subdivisionCode));\n    return errors.wrap('supplied properties not correct for \"GeoLocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.GeoLocation` resource\n *\n * @param properties - the TypeScript properties of a `GeoLocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.GeoLocation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetGroupGeoLocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSetGroup_GeoLocationPropertyValidator(properties).assertSuccess();\n    return {\n        ContinentCode: cdk.stringToCloudFormation(properties.continentCode),\n        CountryCode: cdk.stringToCloudFormation(properties.countryCode),\n        SubdivisionCode: cdk.stringToCloudFormation(properties.subdivisionCode),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetGroupGeoLocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSetGroup.GeoLocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSetGroup.GeoLocationProperty>();\n    ret.addPropertyResult('continentCode', 'ContinentCode', properties.ContinentCode != null ? cfn_parse.FromCloudFormation.getString(properties.ContinentCode) : undefined);\n    ret.addPropertyResult('countryCode', 'CountryCode', properties.CountryCode != null ? cfn_parse.FromCloudFormation.getString(properties.CountryCode) : undefined);\n    ret.addPropertyResult('subdivisionCode', 'SubdivisionCode', properties.SubdivisionCode != null ? cfn_parse.FromCloudFormation.getString(properties.SubdivisionCode) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnRecordSetGroup {\n                                                                                                                                                                                                                                                     \n    export interface RecordSetProperty {\nn        readonly aliasTarget?: CfnRecordSetGroup.AliasTargetProperty | cdk.IResolvable;\n                                                                                                                                                                                                                                                                           \n        readonly comment?: string;\nn        readonly failover?: string;\nn        readonly geoLocation?: CfnRecordSetGroup.GeoLocationProperty | cdk.IResolvable;\nn        readonly healthCheckId?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n        readonly hostedZoneId?: string;\nn        readonly hostedZoneName?: string;\nn        readonly multiValueAnswer?: boolean | cdk.IResolvable;\nn        readonly name: string;\nn        readonly region?: string;\nn        readonly resourceRecords?: string[];\nn        readonly setIdentifier?: string;\nn        readonly ttl?: string;\nn        readonly type: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \n        readonly weight?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RecordSetProperty`\n *\n * @param properties - the TypeScript properties of a `RecordSetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecordSetGroup_RecordSetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('aliasTarget', CfnRecordSetGroup_AliasTargetPropertyValidator)(properties.aliasTarget));\n    errors.collect(cdk.propertyValidator('comment', cdk.validateString)(properties.comment));\n    errors.collect(cdk.propertyValidator('failover', cdk.validateString)(properties.failover));\n    errors.collect(cdk.propertyValidator('geoLocation', CfnRecordSetGroup_GeoLocationPropertyValidator)(properties.geoLocation));\n    errors.collect(cdk.propertyValidator('healthCheckId', cdk.validateString)(properties.healthCheckId));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneName', cdk.validateString)(properties.hostedZoneName));\n    errors.collect(cdk.propertyValidator('multiValueAnswer', cdk.validateBoolean)(properties.multiValueAnswer));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('region', cdk.validateString)(properties.region));\n    errors.collect(cdk.propertyValidator('resourceRecords', cdk.listValidator(cdk.validateString))(properties.resourceRecords));\n    errors.collect(cdk.propertyValidator('setIdentifier', cdk.validateString)(properties.setIdentifier));\n    errors.collect(cdk.propertyValidator('ttl', cdk.validateString)(properties.ttl));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('weight', cdk.validateNumber)(properties.weight));\n    return errors.wrap('supplied properties not correct for \"RecordSetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.RecordSet` resource\n *\n * @param properties - the TypeScript properties of a `RecordSetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53::RecordSetGroup.RecordSet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecordSetGroupRecordSetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecordSetGroup_RecordSetPropertyValidator(properties).assertSuccess();\n    return {\n        AliasTarget: cfnRecordSetGroupAliasTargetPropertyToCloudFormation(properties.aliasTarget),\n        Comment: cdk.stringToCloudFormation(properties.comment),\n        Failover: cdk.stringToCloudFormation(properties.failover),\n        GeoLocation: cfnRecordSetGroupGeoLocationPropertyToCloudFormation(properties.geoLocation),\n        HealthCheckId: cdk.stringToCloudFormation(properties.healthCheckId),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n        HostedZoneName: cdk.stringToCloudFormation(properties.hostedZoneName),\n        MultiValueAnswer: cdk.booleanToCloudFormation(properties.multiValueAnswer),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Region: cdk.stringToCloudFormation(properties.region),\n        ResourceRecords: cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceRecords),\n        SetIdentifier: cdk.stringToCloudFormation(properties.setIdentifier),\n        TTL: cdk.stringToCloudFormation(properties.ttl),\n        Type: cdk.stringToCloudFormation(properties.type),\n        Weight: cdk.numberToCloudFormation(properties.weight),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecordSetGroupRecordSetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecordSetGroup.RecordSetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecordSetGroup.RecordSetProperty>();\n    ret.addPropertyResult('aliasTarget', 'AliasTarget', properties.AliasTarget != null ? CfnRecordSetGroupAliasTargetPropertyFromCloudFormation(properties.AliasTarget) : undefined);\n    ret.addPropertyResult('comment', 'Comment', properties.Comment != null ? cfn_parse.FromCloudFormation.getString(properties.Comment) : undefined);\n    ret.addPropertyResult('failover', 'Failover', properties.Failover != null ? cfn_parse.FromCloudFormation.getString(properties.Failover) : undefined);\n    ret.addPropertyResult('geoLocation', 'GeoLocation', properties.GeoLocation != null ? CfnRecordSetGroupGeoLocationPropertyFromCloudFormation(properties.GeoLocation) : undefined);\n    ret.addPropertyResult('healthCheckId', 'HealthCheckId', properties.HealthCheckId != null ? cfn_parse.FromCloudFormation.getString(properties.HealthCheckId) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', properties.HostedZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneId) : undefined);\n    ret.addPropertyResult('hostedZoneName', 'HostedZoneName', properties.HostedZoneName != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneName) : undefined);\n    ret.addPropertyResult('multiValueAnswer', 'MultiValueAnswer', properties.MultiValueAnswer != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MultiValueAnswer) : undefined);\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('region', 'Region', properties.Region != null ? cfn_parse.FromCloudFormation.getString(properties.Region) : undefined);\n    ret.addPropertyResult('resourceRecords', 'ResourceRecords', properties.ResourceRecords != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ResourceRecords) : undefined);\n    ret.addPropertyResult('setIdentifier', 'SetIdentifier', properties.SetIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.SetIdentifier) : undefined);\n    ret.addPropertyResult('ttl', 'TTL', properties.TTL != null ? cfn_parse.FromCloudFormation.getString(properties.TTL) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('weight', 'Weight', properties.Weight != null ? cfn_parse.FromCloudFormation.getNumber(properties.Weight) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
