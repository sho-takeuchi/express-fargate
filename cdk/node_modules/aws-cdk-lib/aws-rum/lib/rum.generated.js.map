{
  "version": 3,
  "sources": ["rum.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:33.409Z\",\"fingerprint\":\"Y1jG5avB9fxOQAX+7775WlTkfN6nHDRnJ5tDN1Vf5AI=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                    \nexport interface CfnAppMonitorProps {\n\n                                                                                                                                                                                                                                                                                           \n    readonly domain: string;\n\n                                                                                                                                                                                                                         \n    readonly name: string;\n\nn    readonly appMonitorConfiguration?: CfnAppMonitor.AppMonitorConfigurationProperty | cdk.IResolvable;\n\nn    readonly cwLogEnabled?: boolean | cdk.IResolvable;\n\nn    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnAppMonitorProps`\n *\n * @param properties - the TypeScript properties of a `CfnAppMonitorProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnAppMonitorPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('appMonitorConfiguration', CfnAppMonitor_AppMonitorConfigurationPropertyValidator)(properties.appMonitorConfiguration));\n    errors.collect(cdk.propertyValidator('cwLogEnabled', cdk.validateBoolean)(properties.cwLogEnabled));\n    errors.collect(cdk.propertyValidator('domain', cdk.requiredValidator)(properties.domain));\n    errors.collect(cdk.propertyValidator('domain', cdk.validateString)(properties.domain));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnAppMonitorProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RUM::AppMonitor` resource\n *\n * @param properties - the TypeScript properties of a `CfnAppMonitorProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RUM::AppMonitor` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAppMonitorPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAppMonitorPropsValidator(properties).assertSuccess();\n    return {\n        Domain: cdk.stringToCloudFormation(properties.domain),\n        Name: cdk.stringToCloudFormation(properties.name),\n        AppMonitorConfiguration: cfnAppMonitorAppMonitorConfigurationPropertyToCloudFormation(properties.appMonitorConfiguration),\n        CwLogEnabled: cdk.booleanToCloudFormation(properties.cwLogEnabled),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAppMonitorPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAppMonitorProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAppMonitorProps>();\n    ret.addPropertyResult('domain', 'Domain', cfn_parse.FromCloudFormation.getString(properties.Domain));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('appMonitorConfiguration', 'AppMonitorConfiguration', properties.AppMonitorConfiguration != null ? CfnAppMonitorAppMonitorConfigurationPropertyFromCloudFormation(properties.AppMonitorConfiguration) : undefined);\n    ret.addPropertyResult('cwLogEnabled', 'CwLogEnabled', properties.CwLogEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CwLogEnabled) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnAppMonitor extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::RUM::AppMonitor\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnAppMonitor {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnAppMonitorPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnAppMonitor(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                                                                                                                                                                                                                                           \n    public domain: string;\n\n                                                                                                                                                                                                                         \n    public name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public appMonitorConfiguration: CfnAppMonitor.AppMonitorConfigurationProperty | cdk.IResolvable | undefined;\n\nn    public cwLogEnabled: boolean | cdk.IResolvable | undefined;\n\nn    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                          \n    constructor(scope: constructs.Construct, id: string, props: CfnAppMonitorProps) {\n        super(scope, id, { type: CfnAppMonitor.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'domain', this);\n        cdk.requireProperty(props, 'name', this);\n\n        this.domain = props.domain;\n        this.name = props.name;\n        this.appMonitorConfiguration = props.appMonitorConfiguration;\n        this.cwLogEnabled = props.cwLogEnabled;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::RUM::AppMonitor\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnAppMonitor.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            domain: this.domain,\n            name: this.name,\n            appMonitorConfiguration: this.appMonitorConfiguration,\n            cwLogEnabled: this.cwLogEnabled,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnAppMonitorPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnAppMonitor {\n                                                                                                                                                                                                                                                                                                \n    export interface AppMonitorConfigurationProperty {\nn        readonly allowCookies?: boolean | cdk.IResolvable;\nn        readonly enableXRay?: boolean | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly excludedPages?: string[];\n                                                                                                                                                                                                                                                                                                                                                                   \n        readonly favoritePages?: string[];\n                                                                                                                                                                                                                                                                                                                                                                                                   \n        readonly guestRoleArn?: string;\n                                                                                                                                                                                                                                                                                                                                                             \n        readonly identityPoolId?: string;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n        readonly includedPages?: string[];\nn        readonly sessionSampleRate?: number;\nn        readonly telemetries?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AppMonitorConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `AppMonitorConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAppMonitor_AppMonitorConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowCookies', cdk.validateBoolean)(properties.allowCookies));\n    errors.collect(cdk.propertyValidator('enableXRay', cdk.validateBoolean)(properties.enableXRay));\n    errors.collect(cdk.propertyValidator('excludedPages', cdk.listValidator(cdk.validateString))(properties.excludedPages));\n    errors.collect(cdk.propertyValidator('favoritePages', cdk.listValidator(cdk.validateString))(properties.favoritePages));\n    errors.collect(cdk.propertyValidator('guestRoleArn', cdk.validateString)(properties.guestRoleArn));\n    errors.collect(cdk.propertyValidator('identityPoolId', cdk.validateString)(properties.identityPoolId));\n    errors.collect(cdk.propertyValidator('includedPages', cdk.listValidator(cdk.validateString))(properties.includedPages));\n    errors.collect(cdk.propertyValidator('sessionSampleRate', cdk.validateNumber)(properties.sessionSampleRate));\n    errors.collect(cdk.propertyValidator('telemetries', cdk.listValidator(cdk.validateString))(properties.telemetries));\n    return errors.wrap('supplied properties not correct for \"AppMonitorConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::RUM::AppMonitor.AppMonitorConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `AppMonitorConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::RUM::AppMonitor.AppMonitorConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAppMonitorAppMonitorConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAppMonitor_AppMonitorConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AllowCookies: cdk.booleanToCloudFormation(properties.allowCookies),\n        EnableXRay: cdk.booleanToCloudFormation(properties.enableXRay),\n        ExcludedPages: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludedPages),\n        FavoritePages: cdk.listMapper(cdk.stringToCloudFormation)(properties.favoritePages),\n        GuestRoleArn: cdk.stringToCloudFormation(properties.guestRoleArn),\n        IdentityPoolId: cdk.stringToCloudFormation(properties.identityPoolId),\n        IncludedPages: cdk.listMapper(cdk.stringToCloudFormation)(properties.includedPages),\n        SessionSampleRate: cdk.numberToCloudFormation(properties.sessionSampleRate),\n        Telemetries: cdk.listMapper(cdk.stringToCloudFormation)(properties.telemetries),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAppMonitorAppMonitorConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAppMonitor.AppMonitorConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAppMonitor.AppMonitorConfigurationProperty>();\n    ret.addPropertyResult('allowCookies', 'AllowCookies', properties.AllowCookies != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AllowCookies) : undefined);\n    ret.addPropertyResult('enableXRay', 'EnableXRay', properties.EnableXRay != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableXRay) : undefined);\n    ret.addPropertyResult('excludedPages', 'ExcludedPages', properties.ExcludedPages != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludedPages) : undefined);\n    ret.addPropertyResult('favoritePages', 'FavoritePages', properties.FavoritePages != null ? cfn_parse.FromCloudFormation.getStringArray(properties.FavoritePages) : undefined);\n    ret.addPropertyResult('guestRoleArn', 'GuestRoleArn', properties.GuestRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.GuestRoleArn) : undefined);\n    ret.addPropertyResult('identityPoolId', 'IdentityPoolId', properties.IdentityPoolId != null ? cfn_parse.FromCloudFormation.getString(properties.IdentityPoolId) : undefined);\n    ret.addPropertyResult('includedPages', 'IncludedPages', properties.IncludedPages != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IncludedPages) : undefined);\n    ret.addPropertyResult('sessionSampleRate', 'SessionSampleRate', properties.SessionSampleRate != null ? cfn_parse.FromCloudFormation.getNumber(properties.SessionSampleRate) : undefined);\n    ret.addPropertyResult('telemetries', 'Telemetries', properties.Telemetries != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Telemetries) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
