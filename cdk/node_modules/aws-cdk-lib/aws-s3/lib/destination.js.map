{
  "version": 3,
  "sources": ["destination.ts"],
  "sourcesContent": ["import { Construct, IDependable } from 'constructs';\nimport { IBucket } from './bucket';\n\n                                                                                          \nexport interface IBucketNotificationDestination {\n                                                                                                                                                                                                                                                                                                                                 \n  bind(scope: Construct, bucket: IBucket): BucketNotificationDestinationConfig;\n}\n\n                                                                   \nexport interface BucketNotificationDestinationConfig {\n                                       \n  readonly type: BucketNotificationDestinationType;\n\n                                                                    \n  readonly arn: string;\n\n                                                                                                                                                                        \n  readonly dependencies?: IDependable[]\n}\n\n                                                        \nexport enum BucketNotificationDestinationType {\n  LAMBDA,\n  QUEUE,\n  TOPIC\n}\n"],
  "mappings": "qHAsBA,GAAY,mCAAZ,AAAA,UAAY,mCAAiC,CAC3C,mCAAA,mCAAA,OAAA,GAAA,SACA,mCAAA,mCAAA,MAAA,GAAA,QACA,mCAAA,mCAAA,MAAA,GAAA,UAHU,kCAAA,QAAA,mCAAA,SAAA,kCAAiC",
  "names": []
}
