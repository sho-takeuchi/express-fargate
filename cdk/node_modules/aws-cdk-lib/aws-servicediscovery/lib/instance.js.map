{
  "version": 3,
  "sources": ["instance.ts"],
  "sourcesContent": ["import { IResource, Names, Resource } from '../../core';\nimport { IService } from './service';\n\nexport interface IInstance extends IResource {\n                                                                \n  readonly instanceId: string;\n\n                                                                     \n  readonly service: IService;\n}\n\n                                                                                                                                                                                        \nexport interface BaseInstanceProps {\n                                                                                                \n  readonly instanceId?: string;\n\n                                                                           \n  readonly customAttributes?: { [key: string]: string };\n}\n\nexport abstract class InstanceBase extends Resource implements IInstance {\n                                       \n  public abstract readonly instanceId: string;\n\n                                                                          \n  public abstract readonly service: IService;\n\n                                                                               \n  protected uniqueInstanceId() {\n    // Max length of 64 chars, get the last 64 chars\n    const id = Names.uniqueId(this);\n    return id.substring(Math.max(id.length - 64, 0), id.length);\n  }\n}\n"],
  "mappings": "wJAAA,OAAA,QAAA,cAoBA,0BAA2C,QAAA,QAAQ,CAQvC,kBAAgB,CAExB,KAAM,IAAK,OAAA,MAAM,SAAS,MAC1B,MAAO,IAAG,UAAU,KAAK,IAAI,GAAG,OAAS,GAAI,GAAI,GAAG,SAXxD,QAAA,aAAA",
  "names": []
}
