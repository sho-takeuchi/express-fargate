{
  "version": 3,
  "sources": ["receipt-rule.ts"],
  "sourcesContent": ["import * as path from 'path';\nimport * as iam from '../../aws-iam';\nimport * as lambda from '../../aws-lambda';\nimport { Aws, IResource, Lazy, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IReceiptRuleAction } from './receipt-rule-action';\nimport { IReceiptRuleSet } from './receipt-rule-set';\nimport { CfnReceiptRule } from './ses.generated';\n\n                          \nexport interface IReceiptRule extends IResource {\n                                                              \n  readonly receiptRuleName: string;\n}\n\n                                                     \nexport enum TlsPolicy {\n                                      \n  OPTIONAL = 'Optional',\n\n                                                              \n  REQUIRE = 'Require'\n}\n\n                                                               \nexport interface ReceiptRuleOptions {\n                                                                                                                                                                                                                \n  readonly actions?: IReceiptRuleAction[];\n\n                                                                                                                                                           \n  readonly after?: IReceiptRule;\n\n                                                                    \n  readonly enabled?: boolean;\n\n                                                                                            \n  readonly receiptRuleName?: string;\n\n                                                                                                                                                                  \n  readonly recipients?: string[];\n\n                                                                               \n  readonly scanEnabled?: boolean;\n\n                                                                                                                                                                                                                     \n  readonly tlsPolicy?: TlsPolicy;\n}\n\n                                                     \nexport interface ReceiptRuleProps extends ReceiptRuleOptions {\n                                                                                 \n  readonly ruleSet: IReceiptRuleSet;\n}\n\n                              \nexport class ReceiptRule extends Resource implements IReceiptRule {\n\n  public static fromReceiptRuleName(scope: Construct, id: string, receiptRuleName: string): IReceiptRule {\n    class Import extends Resource implements IReceiptRule {\n      public readonly receiptRuleName = receiptRuleName;\n    }\n    return new Import(scope, id);\n  }\n\n  public readonly receiptRuleName: string;\n  private readonly actions = new Array<CfnReceiptRule.ActionProperty>();\n\n  constructor(scope: Construct, id: string, props: ReceiptRuleProps) {\n    super(scope, id, {\n      physicalName: props.receiptRuleName,\n    });\n\n    const resource = new CfnReceiptRule(this, 'Resource', {\n      after: props.after?.receiptRuleName,\n      rule: {\n        actions: Lazy.any({ produce: () => this.renderActions() }),\n        enabled: props.enabled ?? true,\n        name: this.physicalName,\n        recipients: props.recipients,\n        scanEnabled: props.scanEnabled,\n        tlsPolicy: props.tlsPolicy,\n      },\n      ruleSetName: props.ruleSet.receiptRuleSetName,\n    });\n\n    this.receiptRuleName = resource.ref;\n\n    for (const action of props.actions || []) {\n      this.addAction(action);\n    }\n  }\n\n                                                     \n  public addAction(action: IReceiptRuleAction) {\n    this.actions.push(action.bind(this));\n  }\n\n  private renderActions() {\n    if (this.actions.length === 0) {\n      return undefined;\n    }\n\n    return this.actions;\n  }\n}\n\nexport interface DropSpamReceiptRuleProps extends ReceiptRuleProps {\n\n}\n\n                                                                                                                                                                                            \nexport class DropSpamReceiptRule extends Construct {\n  public readonly rule: ReceiptRule;\n\n  constructor(scope: Construct, id: string, props: DropSpamReceiptRuleProps) {\n    super(scope, id);\n\n    const fn = new lambda.SingletonFunction(this, 'Function', {\n      runtime: lambda.Runtime.NODEJS_12_X,\n      handler: 'index.handler',\n      code: lambda.Code.fromAsset(path.join(__dirname, 'drop-spam-handler')),\n      uuid: '224e77f9-a32e-4b4d-ac32-983477abba16',\n    });\n\n    fn.addPermission('AllowSes', {\n      action: 'lambda:InvokeFunction',\n      principal: new iam.ServicePrincipal('ses.amazonaws.com'),\n      sourceAccount: Aws.ACCOUNT_ID,\n    });\n\n    this.rule = new ReceiptRule(this, 'Rule', {\n      actions: [\n        {\n          bind: () => ({\n            lambdaAction: {\n              functionArn: fn.functionArn,\n              invocationType: 'RequestResponse',\n            },\n          }),\n        },\n      ],\n      scanEnabled: true,\n      ruleSet: props.ruleSet,\n    });\n  }\n}\n"],
  "mappings": "mQAAA,KAAA,QAAA,QACA,IAAA,QAAA,iBACA,OAAA,QAAA,oBACA,OAAA,QAAA,cACA,aAAA,QAAA,cAGA,gBAAA,QAAA,mBASA,GAAY,WAAZ,AAAA,UAAY,WAAS,CAEnB,WAAA,SAAA,WAGA,WAAA,QAAA,YALU,UAAA,QAAA,WAAA,SAAA,UAAS,KAuCrB,yBAAiC,QAAA,QAAQ,CAYvC,YAAY,MAAkB,GAAY,MAAuB,WAC/D,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,kBAJP,KAAA,QAAU,GAAI,2EAO7B,KAAM,UAAW,GAAI,iBAAA,eAAe,KAAM,WAAY,CACpD,MAAK,IAAE,MAAM,SAAK,MAAA,KAAA,OAAA,OAAA,GAAE,gBACpB,KAAM,CACJ,QAAS,OAAA,KAAK,IAAI,CAAE,QAAS,IAAM,KAAK,kBACxC,QAAO,IAAE,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,GAC1B,KAAM,KAAK,aACX,WAAY,MAAM,WAClB,YAAa,MAAM,YACnB,UAAW,MAAM,WAEnB,YAAa,MAAM,QAAQ,qBAG7B,KAAK,gBAAkB,SAAS,IAEhC,SAAW,UAAU,OAAM,SAAW,GACpC,KAAK,UAAU,cA/BL,qBAAoB,MAAkB,GAAY,gBAAuB,CACrF,oBAAqB,QAAA,QAAQ,CAA7B,aAAA,qBACkB,KAAA,gBAAkB,iBAEpC,MAAO,IAAI,QAAO,MAAO,IAgCpB,UAAU,OAA0B,wEACzC,KAAK,QAAQ,KAAK,OAAO,KAAK,OAGxB,eAAa,CACnB,GAAI,KAAK,QAAQ,SAAW,EAI5B,MAAO,MAAK,SA/ChB,QAAA,YAAA,2GAwDA,iCAAyC,cAAA,SAAS,CAGhD,YAAY,MAAkB,GAAY,MAA+B,CACvE,MAAM,MAAO,gFAEb,KAAM,IAAK,GAAI,QAAO,kBAAkB,KAAM,WAAY,CACxD,QAAS,OAAO,QAAQ,YACxB,QAAS,gBACT,KAAM,OAAO,KAAK,UAAU,KAAK,KAAK,UAAW,sBACjD,KAAM,yCAGR,GAAG,cAAc,WAAY,CAC3B,OAAQ,wBACR,UAAW,GAAI,KAAI,iBAAiB,qBACpC,cAAe,OAAA,IAAI,aAGrB,KAAK,KAAO,GAAI,aAAY,KAAM,OAAQ,CACxC,QAAS,CACP,CACE,KAAM,IAAO,EACX,aAAc,CACZ,YAAa,GAAG,YAChB,eAAgB,uBAKxB,YAAa,GACb,QAAS,MAAM,WA/BrB,QAAA,oBAAA",
  "names": []
}
