{
  "version": 3,
  "sources": ["topic.ts"],
  "sourcesContent": ["import { IKey } from '../../aws-kms';\nimport { ArnFormat, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnTopic } from './sns.generated';\nimport { ITopic, TopicBase } from './topic-base';\n\n                                         \nexport interface TopicProps {\n                                                                                                                \n  readonly displayName?: string;\n\n                                                                                                                                                                                                                                                     \n  readonly topicName?: string;\n\n                                                                                                \n  readonly masterKey?: IKey;\n\n                                                                                             \n  readonly contentBasedDeduplication?: boolean;\n\n                                                                            \n  readonly fifo?: boolean;\n}\n\n                          \nexport class Topic extends TopicBase {\n\n                                                                                                                                                                                                                                       \n  public static fromTopicArn(scope: Construct, id: string, topicArn: string): ITopic {\n    class Import extends TopicBase {\n      public readonly topicArn = topicArn;\n      public readonly topicName = Stack.of(scope).splitArn(topicArn, ArnFormat.NO_RESOURCE_NAME).resource;\n      protected autoCreatePolicy: boolean = false;\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly topicArn: string;\n  public readonly topicName: string;\n\n  protected readonly autoCreatePolicy: boolean = true;\n\n  constructor(scope: Construct, id: string, props: TopicProps = {}) {\n    super(scope, id, {\n      physicalName: props.topicName,\n    });\n\n    if (props.fifo && !props.topicName) {\n      // NOTE: Workaround for CloudFormation problem reported in CDK issue 12386\n      // see https://github.com/aws/aws-cdk/issues/12386\n      throw new Error('FIFO SNS topics must be given a topic name.');\n    }\n\n    if (props.contentBasedDeduplication && !props.fifo) {\n      throw new Error('Content based deduplication can only be enabled for FIFO SNS topics.');\n    }\n\n    let cfnTopicName: string;\n    if (props.fifo && props.topicName && !props.topicName.endsWith('.fifo')) {\n      cfnTopicName = this.physicalName + '.fifo';\n    } else {\n      cfnTopicName = this.physicalName;\n    }\n\n    const resource = new CfnTopic(this, 'Resource', {\n      displayName: props.displayName,\n      topicName: cfnTopicName,\n      kmsMasterKeyId: props.masterKey && props.masterKey.keyArn,\n      contentBasedDeduplication: props.contentBasedDeduplication,\n      fifoTopic: props.fifo,\n    });\n\n    this.topicArn = this.getResourceArnAttribute(resource.ref, {\n      service: 'sns',\n      resource: this.physicalName,\n    });\n    this.topicName = this.getResourceNameAttribute(resource.attrTopicName);\n  }\n}\n"],
  "mappings": "4MACA,OAAA,QAAA,cAEA,gBAAA,QAAA,mBACA,aAAA,QAAA,gBAqBA,mBAA2B,cAAA,SAAS,CAkBlC,YAAY,MAAkB,GAAY,MAAoB,GAAE,CAC9D,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,YAGtB,GAPiB,KAAA,iBAA4B,iEAOzC,MAAM,MAAQ,CAAC,MAAM,UAGvB,KAAM,IAAI,OAAM,+CAGlB,GAAI,MAAM,2BAA6B,CAAC,MAAM,KAC5C,KAAM,IAAI,OAAM,wEAGlB,GAAI,cACJ,AAAI,MAAM,MAAQ,MAAM,WAAa,CAAC,MAAM,UAAU,SAAS,SAC7D,aAAe,KAAK,aAAe,QAEnC,aAAe,KAAK,aAGtB,KAAM,UAAW,GAAI,iBAAA,SAAS,KAAM,WAAY,CAC9C,YAAa,MAAM,YACnB,UAAW,aACX,eAAgB,MAAM,WAAa,MAAM,UAAU,OACnD,0BAA2B,MAAM,0BACjC,UAAW,MAAM,OAGnB,KAAK,SAAW,KAAK,wBAAwB,SAAS,IAAK,CACzD,QAAS,MACT,SAAU,KAAK,eAEjB,KAAK,UAAY,KAAK,yBAAyB,SAAS,qBAjD5C,cAAa,MAAkB,GAAY,SAAgB,CACvE,oBAAqB,cAAA,SAAS,CAA9B,aAAA,qBACkB,KAAA,SAAW,SACX,KAAA,UAAY,OAAA,MAAM,GAAG,OAAO,SAAS,SAAU,OAAA,UAAU,kBAAkB,SACjF,KAAA,iBAA4B,IAGxC,MAAO,IAAI,QAAO,MAAO,KAV7B,QAAA,MAAA",
  "names": []
}
