{
  "version": 3,
  "sources": ["call-rest-api.ts"],
  "sourcesContent": ["import * as apigateway from '../../../aws-apigateway';\nimport * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { CallApiGatewayEndpointBase } from './base';\nimport { CallApiGatewayEndpointBaseProps } from './base-types';\n\n                                                      \nexport interface CallApiGatewayRestApiEndpointProps extends CallApiGatewayEndpointBaseProps {\n                            \n  readonly api: apigateway.IRestApi;\n\n                                                                              \n  readonly stageName: string;\n}\n\nnexport class CallApiGatewayRestApiEndpoint extends CallApiGatewayEndpointBase {\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig | undefined;\n  protected readonly taskPolicies?: iam.PolicyStatement[] | undefined;\n\n  protected readonly apiEndpoint: string;\n  protected readonly arnForExecuteApi: string;\n  protected readonly stageName?: string;\n\n  constructor(scope: Construct, id: string, private readonly props: CallApiGatewayRestApiEndpointProps) {\n    super(scope, id, props);\n\n    this.apiEndpoint = this.getApiEndpoint();\n    this.arnForExecuteApi = props.api.arnForExecuteApi(props.method, props.apiPath, props.stageName);\n    this.stageName = props.stageName;\n\n    this.taskPolicies = this.createPolicyStatements();\n  }\n\n  private getApiEndpoint(): string {\n    const apiStack = cdk.Stack.of(this.props.api);\n    return `${this.props.api.restApiId}.execute-api.${apiStack.region}.${apiStack.urlSuffix}`;\n  }\n}\n"],
  "mappings": "uOAGA,IAAA,QAAA,iBAEA,OAAA,QAAA,UAaA,2CAAmD,QAAA,0BAA0B,CAQ3E,YAAY,MAAkB,GAA6B,MAAyC,CAClG,MAAM,MAAO,GAAI,OADwC,KAAA,MAAA,4GAGzD,KAAK,YAAc,KAAK,iBACxB,KAAK,iBAAmB,MAAM,IAAI,iBAAiB,MAAM,OAAQ,MAAM,QAAS,MAAM,WACtF,KAAK,UAAY,MAAM,UAEvB,KAAK,aAAe,KAAK,yBAGnB,gBAAc,CACpB,KAAM,UAAW,IAAI,MAAM,GAAG,KAAK,MAAM,KACzC,MAAO,GAAG,KAAK,MAAM,IAAI,yBAAyB,SAAS,UAAU,SAAS,aApBlF,QAAA,8BAAA",
  "names": []
}
