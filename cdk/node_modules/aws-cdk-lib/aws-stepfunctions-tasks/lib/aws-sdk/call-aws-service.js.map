{
  "version": 3,
  "sources": ["call-aws-service.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Token } from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn } from '../private/task-utils';\n\n                                                                                                                                                                                        \nexport interface CallAwsServiceProps extends sfn.TaskStateBaseProps {\n                                                                                                                                            \n  readonly service: string;\n\n                                                                 \n  readonly action: string;\n\n                                                                                                                                         \n  readonly parameters?: { [key: string]: any };\n\n                                                                                                                                                                                                                                                 \n  readonly iamResources: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                 \n  readonly iamAction?: string;\n}\n\n                                                          \nexport class CallAwsService extends sfn.TaskStateBase {\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  constructor(scope: Construct, id: string, private readonly props: CallAwsServiceProps) {\n    super(scope, id, props);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: props.iamResources,\n        // The prefix and the action name are case insensitive\n        // https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html\n        actions: [props.iamAction ?? `${props.service}:${props.action}`],\n      }),\n    ];\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    let service = this.props.service;\n\n    if (!Token.isUnresolved(service)) {\n      service = service.toLowerCase();\n    }\n\n    return {\n      Resource: integrationResourceArn(\n        'aws-sdk',\n        `${service}:${this.props.action}`,\n        this.props.integrationPattern,\n      ),\n      Parameters: sfn.FieldUtils.renderObject(this.props.parameters) ?? {}, // Parameters is required for aws-sdk\n    };\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,oBACA,IAAA,QAAA,8BACA,OAAA,QAAA,iBAEA,aAAA,QAAA,yBAqBA,4BAAoC,KAAI,aAAa,CAInD,YAAY,MAAkB,GAA6B,MAA0B,QACnF,MAAM,MAAO,GAAI,OADwC,KAAA,MAAA,6FAGzD,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,MAAM,aAGjB,QAAS,CAAA,IAAC,MAAM,aAAS,MAAA,KAAA,OAAA,GAAI,GAAG,MAAM,WAAW,MAAM,aAQnD,aAAW,QACnB,GAAI,SAAU,KAAK,MAAM,QAEzB,MAAK,QAAA,MAAM,aAAa,UACtB,SAAU,QAAQ,eAGb,CACL,SAAU,aAAA,uBACR,UACA,GAAG,WAAW,KAAK,MAAM,SACzB,KAAK,MAAM,oBAEb,WAAU,IAAE,IAAI,WAAW,aAAa,KAAK,MAAM,eAAW,MAAA,KAAA,OAAA,GAAI,KAjCxE,QAAA,eAAA",
  "names": []
}
