{
  "version": 3,
  "sources": ["update-item.ts"],
  "sourcesContent": ["import * as ddb from '../../../aws-dynamodb';\nimport * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { DynamoMethod, getDynamoResourceArn, transformAttributeValueMap } from './private/utils';\nimport { DynamoAttributeValue, DynamoConsumedCapacity, DynamoItemCollectionMetrics, DynamoReturnValues } from './shared-types';\n\n                                               \nexport interface DynamoUpdateItemProps extends sfn.TaskStateBaseProps {\n                                                                     \n  readonly table: ddb.ITable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n  readonly key: { [key: string]: DynamoAttributeValue };\n\n                                                                                                                                                                                                                                                                                               \n  readonly conditionExpression?: string;\n\n                                                                                                                                                                                                                                                                                          \n  readonly expressionAttributeNames?: { [key: string]: string };\n\n                                                                                                                                                                                                                                                                                    \n  readonly expressionAttributeValues?: { [key: string]: DynamoAttributeValue };\n\n                                                                                                                                                                                                                                                                                                                        \n  readonly returnConsumedCapacity?: DynamoConsumedCapacity;\n\n                                                                                                                                                                                                                                                                                                                                                             \n  readonly returnItemCollectionMetrics?: DynamoItemCollectionMetrics;\n\n                                                                                                                                                                                                                                                                                                    \n  readonly returnValues?: DynamoReturnValues;\n\n                                                                                                                                                                                                                                                                                                                                       \n  readonly updateExpression?: string;\n}\n\n                                                        \nexport class DynamoUpdateItem extends sfn.TaskStateBase {\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  constructor(scope: Construct, id: string, private readonly props: DynamoUpdateItemProps) {\n    super(scope, id, props);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: [\n          Stack.of(this).formatArn({\n            service: 'dynamodb',\n            resource: 'table',\n            resourceName: props.table.tableName,\n          }),\n        ],\n        actions: [`dynamodb:${DynamoMethod.UPDATE}Item`],\n      }),\n    ];\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: getDynamoResourceArn(DynamoMethod.UPDATE),\n      Parameters: sfn.FieldUtils.renderObject({\n        Key: transformAttributeValueMap(this.props.key),\n        TableName: this.props.table.tableName,\n        ConditionExpression: this.props.conditionExpression,\n        ExpressionAttributeNames: this.props.expressionAttributeNames,\n        ExpressionAttributeValues: transformAttributeValueMap(this.props.expressionAttributeValues),\n        ReturnConsumedCapacity: this.props.returnConsumedCapacity,\n        ReturnItemCollectionMetrics: this.props.returnItemCollectionMetrics,\n        ReturnValues: this.props.returnValues,\n        UpdateExpression: this.props.updateExpression,\n      }),\n    };\n  }\n}\n"],
  "mappings": "0NACA,IAAA,QAAA,oBACA,IAAA,QAAA,8BACA,OAAA,QAAA,iBAEA,QAAA,QAAA,mBAkCA,8BAAsC,KAAI,aAAa,CAIrD,YAAY,MAAkB,GAA6B,MAA4B,CACrF,MAAM,MAAO,GAAI,OADwC,KAAA,MAAA,+FAGzD,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,CACT,OAAA,MAAM,GAAG,MAAM,UAAU,CACvB,QAAS,WACT,SAAU,QACV,aAAc,MAAM,MAAM,aAG9B,QAAS,CAAC,YAAY,QAAA,aAAa,iBAQ/B,aAAW,CACnB,MAAO,CACL,SAAU,QAAA,qBAAqB,QAAA,aAAa,QAC5C,WAAY,IAAI,WAAW,aAAa,CACtC,IAAK,QAAA,2BAA2B,KAAK,MAAM,KAC3C,UAAW,KAAK,MAAM,MAAM,UAC5B,oBAAqB,KAAK,MAAM,oBAChC,yBAA0B,KAAK,MAAM,yBACrC,0BAA2B,QAAA,2BAA2B,KAAK,MAAM,2BACjE,uBAAwB,KAAK,MAAM,uBACnC,4BAA6B,KAAK,MAAM,4BACxC,aAAc,KAAK,MAAM,aACzB,iBAAkB,KAAK,MAAM,qBApCrC,QAAA,iBAAA",
  "names": []
}
