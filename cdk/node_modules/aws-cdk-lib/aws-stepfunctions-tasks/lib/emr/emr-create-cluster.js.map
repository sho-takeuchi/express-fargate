{
  "version": 3,
  "sources": ["emr-create-cluster.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\nimport {\n  ApplicationConfigPropertyToJson,\n  BootstrapActionConfigToJson,\n  ConfigurationPropertyToJson,\n  InstancesConfigPropertyToJson,\n  KerberosAttributesPropertyToJson,\n} from './private/cluster-utils';\n\n                                                                                                                                                                                                            \nexport interface EmrCreateClusterProps extends sfn.TaskStateBaseProps {\n                                                                                \n  readonly instances: EmrCreateCluster.InstancesConfigProperty;\n\n                                                                                                                                                                                                                                                                                                                                   \n  readonly clusterRole?: iam.IRole;\n\n                                        \n  readonly name: string;\n\n                                                                                                                                                                                                    \n  readonly serviceRole?: iam.IRole;\n\n                                                                                           \n  readonly additionalInfo?: string;\n\n                                                                                                                                                                      \n  readonly applications?: EmrCreateCluster.ApplicationConfigProperty[];\n\n                                                                                                         \n  readonly autoScalingRole?: iam.IRole;\n\n                                                                                                                        \n  readonly bootstrapActions?: EmrCreateCluster.BootstrapActionConfigProperty[];\n\n                                                                                                                    \n  readonly configurations?: EmrCreateCluster.ConfigurationProperty[];\n\n                                                                                          \n  readonly customAmiId?: string;\n\n                                                                                                                                                      \n  readonly ebsRootVolumeSize?: cdk.Size;\n\n                                                                                                                                                        \n  readonly kerberosAttributes?: EmrCreateCluster.KerberosAttributesProperty;\n\n                                                                                                            \n  readonly logUri?: string;\n\n                                                                                                                                                                                   \n  readonly releaseLabel?: string;\n\n                                                                                                                                                                                                       \n  readonly scaleDownBehavior?: EmrCreateCluster.EmrClusterScaleDownBehavior;\n\n                                                                                                        \n  readonly securityConfiguration?: string;\n\n                                                                                                                                                                                                                                         \n  readonly stepConcurrencyLevel?: number;\n\n                                                                                                                            \n  readonly tags?: { [key: string]: string };\n\n                                                                                                                                                                                    \n  readonly visibleToAllUsers?: boolean;\n}\n\n                                                                                                                                                                                   \nexport class EmrCreateCluster extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.RUN_JOB,\n  ];\n\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n\n  private readonly visibleToAllUsers: boolean;\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  private _serviceRole: iam.IRole;\n  private _clusterRole: iam.IRole;\n  private _autoScalingRole?: iam.IRole;\n\n  constructor(scope: Construct, id: string, private readonly props: EmrCreateClusterProps) {\n    super(scope, id, props);\n    this.visibleToAllUsers = this.props.visibleToAllUsers ?? true;\n    this.integrationPattern = props.integrationPattern || sfn.IntegrationPattern.RUN_JOB;\n    validatePatternSupported(this.integrationPattern, EmrCreateCluster.SUPPORTED_INTEGRATION_PATTERNS);\n\n    this._autoScalingRole = this.props.autoScalingRole;\n\n    // If the Roles are undefined then they weren't provided, so create them\n    this._serviceRole = this.props.serviceRole ?? this.createServiceRole();\n    this._clusterRole = this.props.clusterRole ?? this.createClusterRole();\n\n    // AutoScaling roles are not valid with InstanceFleet clusters.\n    // Attempt to create only if .instances.instanceFleets is undefined or empty\n    if (this.props.instances.instanceFleets === undefined || this.props.instances.instanceFleets.length === 0) {\n      this._autoScalingRole = this._autoScalingRole || this.createAutoScalingRole();\n      // If InstanceFleets are used and an AutoScaling Role is specified, throw an error\n    } else if (this._autoScalingRole !== undefined) {\n      throw new Error('Auto Scaling roles can not be specified with instance fleets.');\n    }\n\n    this.taskPolicies = this.createPolicyStatements(this._serviceRole, this._clusterRole, this._autoScalingRole);\n\n    if (this.props.releaseLabel !== undefined && !cdk.Token.isUnresolved(this.props.releaseLabel)) {\n      this.validateReleaseLabel(this.props.releaseLabel);\n    }\n\n    if (this.props.stepConcurrencyLevel !== undefined) {\n      if (this.props.stepConcurrencyLevel < 1 || this.props.stepConcurrencyLevel > 256) {\n        throw new Error(`Step concurrency level must be in range [1, 256], but got ${this.props.stepConcurrencyLevel}.`);\n      }\n      if (this.props.releaseLabel && this.props.stepConcurrencyLevel !== 1) {\n        const [major, minor] = this.props.releaseLabel.substr(4).split('.');\n        if (Number(major) < 5 || (Number(major) === 5 && Number(minor) < 28)) {\n          throw new Error(`Step concurrency is only supported in EMR release version 5.28.0 and above but got ${this.props.releaseLabel}.`);\n        }\n      }\n    }\n  }\n\n                                                                                                                             \n  public get serviceRole(): iam.IRole {\n    if (this._serviceRole === undefined) {\n      throw new Error('role not available yet--use the object in a Task first');\n    }\n    return this._serviceRole;\n  }\n\n                                                                                                                              \n  public get clusterRole(): iam.IRole {\n    if (this._clusterRole === undefined) {\n      throw new Error('role not available yet--use the object in a Task first');\n    }\n    return this._clusterRole;\n  }\n\n                                                                                                                                 \n  public get autoScalingRole(): iam.IRole {\n    if (this._autoScalingRole === undefined) {\n      throw new Error('role not available yet--use the object in a Task first');\n    }\n    return this._autoScalingRole;\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('elasticmapreduce', 'createCluster', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        Instances: InstancesConfigPropertyToJson(this.props.instances),\n        JobFlowRole: cdk.stringToCloudFormation(this._clusterRole.roleName),\n        Name: cdk.stringToCloudFormation(this.props.name),\n        ServiceRole: cdk.stringToCloudFormation(this._serviceRole.roleName),\n        AdditionalInfo: cdk.stringToCloudFormation(this.props.additionalInfo),\n        Applications: cdk.listMapper(ApplicationConfigPropertyToJson)(this.props.applications),\n        AutoScalingRole: cdk.stringToCloudFormation(this._autoScalingRole?.roleName),\n        BootstrapActions: cdk.listMapper(BootstrapActionConfigToJson)(this.props.bootstrapActions),\n        Configurations: cdk.listMapper(ConfigurationPropertyToJson)(this.props.configurations),\n        CustomAmiId: cdk.stringToCloudFormation(this.props.customAmiId),\n        EbsRootVolumeSize: this.props.ebsRootVolumeSize?.toGibibytes(),\n        KerberosAttributes: this.props.kerberosAttributes ? KerberosAttributesPropertyToJson(this.props.kerberosAttributes) : undefined,\n        LogUri: cdk.stringToCloudFormation(this.props.logUri),\n        ReleaseLabel: cdk.stringToCloudFormation(this.props.releaseLabel),\n        ScaleDownBehavior: cdk.stringToCloudFormation(this.props.scaleDownBehavior?.valueOf()),\n        SecurityConfiguration: cdk.stringToCloudFormation(this.props.securityConfiguration),\n        StepConcurrencyLevel: cdk.numberToCloudFormation(this.props.stepConcurrencyLevel),\n        ...(this.props.tags ? this.renderTags(this.props.tags) : undefined),\n        VisibleToAllUsers: cdk.booleanToCloudFormation(this.visibleToAllUsers),\n      }),\n    };\n  }\n\n  private renderTags(tags: { [key: string]: any } | undefined): { [key: string]: any } {\n    return tags ? { Tags: Object.keys(tags).map((key) => ({ Key: key, Value: tags[key] })) } : {};\n  }\n\n  /**\n   * This generates the PolicyStatements required by the Task to call CreateCluster.\n   */\n  private createPolicyStatements(serviceRole: iam.IRole, clusterRole: iam.IRole, autoScalingRole?: iam.IRole): iam.PolicyStatement[] {\n    const stack = cdk.Stack.of(this);\n\n    const policyStatements = [\n      new iam.PolicyStatement({\n        actions: ['elasticmapreduce:RunJobFlow', 'elasticmapreduce:DescribeCluster', 'elasticmapreduce:TerminateJobFlows'],\n        resources: ['*'],\n      }),\n    ];\n\n    // Allow the StateMachine to PassRole to Cluster roles\n    policyStatements.push(\n      new iam.PolicyStatement({\n        actions: ['iam:PassRole'],\n        resources: [serviceRole.roleArn, clusterRole.roleArn],\n      }),\n    );\n    if (autoScalingRole !== undefined) {\n      policyStatements.push(\n        new iam.PolicyStatement({\n          actions: ['iam:PassRole'],\n          resources: [autoScalingRole.roleArn],\n        }),\n      );\n    }\n\n    if (this.integrationPattern === sfn.IntegrationPattern.RUN_JOB) {\n      policyStatements.push(\n        new iam.PolicyStatement({\n          actions: ['events:PutTargets', 'events:PutRule', 'events:DescribeRule'],\n          resources: [\n            stack.formatArn({\n              service: 'events',\n              resource: 'rule',\n              resourceName: 'StepFunctionsGetEventForEMRRunJobFlowRule',\n            }),\n          ],\n        }),\n      );\n    }\n\n    return policyStatements;\n  }\n\n  /**\n   * Generate the Role used by the EMR Service\n   */\n  private createServiceRole(): iam.IRole {\n    return new iam.Role(this, 'ServiceRole', {\n      assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n      managedPolicies: [iam.ManagedPolicy.fromAwsManagedPolicyName('service-role/AmazonElasticMapReduceRole')],\n    });\n  }\n\n  /**\n   * Generate the Role and Instance Profile used by the EC2 instances\n   *\n   * Data access permissions will need to be updated by the user\n   */\n  private createClusterRole(): iam.IRole {\n    const role = new iam.Role(this, 'InstanceRole', {\n      assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n    });\n\n    new iam.CfnInstanceProfile(this, 'InstanceProfile', {\n      roles: [role.roleName],\n      instanceProfileName: role.roleName,\n    });\n\n    return role;\n  }\n\n  /**\n   * Generate the Role used to AutoScale the Cluster\n   */\n  private createAutoScalingRole(): iam.IRole {\n    const role = new iam.Role(this, 'AutoScalingRole', {\n      assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n      managedPolicies: [iam.ManagedPolicy.fromAwsManagedPolicyName('service-role/AmazonElasticMapReduceforAutoScalingRole')],\n    });\n\n    role.assumeRolePolicy?.addStatements(\n      new iam.PolicyStatement({\n        effect: iam.Effect.ALLOW,\n        principals: [new iam.ServicePrincipal('application-autoscaling.amazonaws.com')],\n        actions: ['sts:AssumeRole'],\n      }),\n    );\n\n    return role;\n  }\n\n  /**\n   * Validates the release label string is in proper format.\n   * Release labels are in the form `emr-x.x.x`. For example, `emr-5.33.0`.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html\n   */\n  private validateReleaseLabel(releaseLabel: string): string {\n    const prefix = releaseLabel.substr(0, 4);\n    const versions = releaseLabel.substr(4).split('.');\n    if (prefix !== 'emr-' || versions.length !== 3 || versions.some((e) => isNotANumber(e))) {\n      throw new Error(`The release label must be in the format 'emr-x.x.x' but got ${releaseLabel}`);\n    }\n    return releaseLabel;\n\n    function isNotANumber(value: string): boolean {\n      return value === '' || isNaN(Number(value));\n    }\n  }\n}\n\nexport namespace EmrCreateCluster {\n                                                                                                                                                                                                                                                                                                                                \n  export enum EmrClusterScaleDownBehavior {\n                                                                                                                                                                                                                                                                                                        \n    TERMINATE_AT_INSTANCE_HOUR = 'TERMINATE_AT_INSTANCE_HOUR',\n\n                                                                                                                                                                                                    \n    TERMINATE_AT_TASK_COMPLETION = 'TERMINATE_AT_TASK_COMPLETION',\n  }\n\n                                         \n  export enum InstanceRoleType {\n                                  \n    MASTER = 'MASTER',\n                                \n    CORE = 'CORE',\n                                \n    TASK = 'TASK',\n  }\n\n                                      \n  export enum EbsBlockDeviceVolumeType {\n                                      \n    GP2 = 'gp2',\n                                      \n    IO1 = 'io1',\n                                           \n    STANDARD = 'standard',\n  }\n\n                                                                                                                                                                                                                                                                                    \n  export interface VolumeSpecificationProperty {\n                                                                                                                                             \n    readonly iops?: number;\n\n                                                                                                                                    \n    readonly volumeSize: cdk.Size;\n\n                                                                                      \n    readonly volumeType: EbsBlockDeviceVolumeType;\n  }\n\n                                                                                                                                                                                                                                                                           \n  export interface EbsBlockDeviceConfigProperty {\n                                                                                                                                                                                       \n    readonly volumeSpecification: VolumeSpecificationProperty;\n\n                                                                                                                                                                                               \n    readonly volumesPerInstance?: number;\n  }\n\n                                                                                                                                                                      \n  export interface EbsConfigurationProperty {\n                                                                                                                                 \n    readonly ebsBlockDeviceConfigs?: EbsBlockDeviceConfigProperty[];\n\n                                                                                                                             \n    readonly ebsOptimized?: boolean;\n  }\n\n                                                                                                                                                                                                                                                                                                                          \n  export interface InstanceTypeConfigProperty {\n                                                                                                                                                \n    readonly bidPrice?: string;\n\n                                                                                                       \n    readonly bidPriceAsPercentageOfOnDemandPrice?: number;\n\n                                                                                                                                                                                                                                    \n    readonly configurations?: ConfigurationProperty[];\n\n                                                                                                                                                                  \n    readonly ebsConfiguration?: EbsConfigurationProperty;\n\n                                           \n    readonly instanceType: string;\n\n                                                                                                                                                                                                             \n    readonly weightedCapacity?: number;\n  }\n\n                                          \n  export enum SpotTimeoutAction {\n                                          \n    SWITCH_TO_ON_DEMAND = 'SWITCH_TO_ON_DEMAND',\n                                        \n    TERMINATE_CLUSTER = 'TERMINATE_CLUSTER',\n  }\n\n  /**\n   * Spot Allocation Strategies\n   *\n   * Specifies the strategy to use in launching Spot Instance fleets. For example, \"capacity-optimized\" launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_SpotProvisioningSpecification.html\n   *\n   */\n  export enum SpotAllocationStrategy {\n                                                                                                                                                                  \n    CAPACITY_OPTIMIZED = 'capacity-optimized',\n  }\n\n                                                                                                                                                                                                                                                                           \n  export interface SpotProvisioningSpecificationProperty {\n                                                                                                                                                                                                           \n    readonly allocationStrategy?: SpotAllocationStrategy;\n                                                                                                                                                       \n    readonly blockDurationMinutes?: number;\n\n                                                                                                                                    \n    readonly timeoutAction: SpotTimeoutAction;\n\n                                                                       \n    readonly timeoutDurationMinutes: number;\n  }\n\n                                                                                                                                                                                                                                                                            \n  export interface InstanceFleetProvisioningSpecificationsProperty {\n                                                                                                                                                         \n    readonly spotSpecification: SpotProvisioningSpecificationProperty;\n  }\n\n                                                                                                                                                                       \n  export interface InstanceFleetConfigProperty {\n                                                                                                          \n    readonly instanceFleetType: InstanceRoleType;\n\n                                                                                                                                                         \n    readonly instanceTypeConfigs?: InstanceTypeConfigProperty[];\n\n                                                                                                                      \n    readonly launchSpecifications?: InstanceFleetProvisioningSpecificationsProperty;\n\n                                                                                              \n    readonly name?: string;\n\n                                                                                                                                                                                                  \n    readonly targetOnDemandCapacity?: number;\n\n                                                                                                                                                                                   \n    readonly targetSpotCapacity?: number;\n  }\n\n                                                           \n  export enum CloudWatchAlarmComparisonOperator {\n                                            \n    GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL',\n                                   \n    GREATER_THAN = 'GREATER_THAN',\n                                \n    LESS_THAN = 'LESS_THAN',\n                                         \n    LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL',\n  }\n\n                                                 \n  export enum CloudWatchAlarmStatistic {\n                                   \n    SAMPLE_COUNT = 'SAMPLE_COUNT',\n                              \n    AVERAGE = 'AVERAGE',\n                          \n    SUM = 'SUM',\n                              \n    MINIMUM = 'MINIMUM',\n                              \n    MAXIMUM = 'MAXIMUM',\n  }\n\n                                            \n  export enum CloudWatchAlarmUnit {\n                           \n    NONE = 'NONE',\n                              \n    SECONDS = 'SECONDS',\n                                    \n    MICRO_SECONDS = 'MICRO_SECONDS',\n                                    \n    MILLI_SECONDS = 'MILLI_SECONDS',\n                            \n    BYTES = 'BYTES',\n                                 \n    KILO_BYTES = 'KILO_BYTES',\n                                 \n    MEGA_BYTES = 'MEGA_BYTES',\n                                 \n    GIGA_BYTES = 'GIGA_BYTES',\n                                 \n    TERA_BYTES = 'TERA_BYTES',\n                           \n    BITS = 'BITS',\n                                \n    KILO_BITS = 'KILO_BITS',\n                                \n    MEGA_BITS = 'MEGA_BITS',\n                                \n    GIGA_BITS = 'GIGA_BITS',\n                                \n    TERA_BITS = 'TERA_BITS',\n                              \n    PERCENT = 'PERCENT',\n                            \n    COUNT = 'COUNT',\n                                       \n    BYTES_PER_SECOND = 'BYTES_PER_SECOND',\n                                            \n    KILO_BYTES_PER_SECOND = 'KILO_BYTES_PER_SECOND',\n                                            \n    MEGA_BYTES_PER_SECOND = 'MEGA_BYTES_PER_SECOND',\n                                            \n    GIGA_BYTES_PER_SECOND = 'GIGA_BYTES_PER_SECOND',\n                                            \n    TERA_BYTES_PER_SECOND = 'TERA_BYTES_PER_SECOND',\n                                      \n    BITS_PER_SECOND = 'BITS_PER_SECOND',\n                                           \n    KILO_BITS_PER_SECOND = 'KILO_BITS_PER_SECOND',\n                                           \n    MEGA_BITS_PER_SECOND = 'MEGA_BITS_PER_SECOND',\n                                           \n    GIGA_BITS_PER_SECOND = 'GIGA_BITS_PER_SECOND',\n                                           \n    TERA_BITS_PER_SECOND = 'TERA_BITS_PER_SECOND',\n                                       \n    COUNT_PER_SECOND = 'COUNT_PER_SECOND',\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n  export interface MetricDimensionProperty {\n                                         \n    readonly key: string;\n\n                                          \n    readonly value: string;\n  }\n\n                                                                                                                                                                                                                                                                                                                         \n  export interface CloudWatchAlarmDefinitionProperty {\n                                                                                                                        \n    readonly comparisonOperator: CloudWatchAlarmComparisonOperator;\n\n                                                                                           \n    readonly dimensions?: MetricDimensionProperty[];\n\n                                                                                                                                                                                                          \n    readonly evaluationPeriods?: number;\n\n                                                                                                         \n    readonly metricName: string;\n\n                                                                                                             \n    readonly namespace?: string;\n\n                                                                                                                                                                                                                         \n    readonly period: cdk.Duration;\n\n                                                                                                                                              \n    readonly statistic?: CloudWatchAlarmStatistic;\n\n                                                                                                                 \n    readonly threshold?: number;\n\n                                                                                                                                                                                                                                                    \n    readonly unit?: CloudWatchAlarmUnit;\n  }\n\n                                                                                                                                                                                                                                                                                                                                        \n  export interface ScalingTriggerProperty {\n                                                                                                                                                                                  \n    readonly cloudWatchAlarmDefinition: CloudWatchAlarmDefinitionProperty;\n  }\n\n                                         \n  export enum InstanceMarket {\n                                         \n    ON_DEMAND = 'ON_DEMAND',\n                                    \n    SPOT = 'SPOT',\n  }\n\n                                                 \n  export enum ScalingAdjustmentType {\n                                         \n    CHANGE_IN_CAPACITY = 'CHANGE_IN_CAPACITY',\n                                                 \n    PERCENT_CHANGE_IN_CAPACITY = 'PERCENT_CHANGE_IN_CAPACITY',\n                                     \n    EXACT_CAPACITY = 'EXACT_CAPACITY',\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                           \n  export interface SimpleScalingPolicyConfigurationProperty {\n                                                                                                                                                                                                                                                       \n    readonly adjustmentType?: ScalingAdjustmentType;\n\n                                                                                                                                                                                   \n    readonly coolDown?: number;\n\n                                                                                                                                                                                                                                                                                                                               \n    readonly scalingAdjustment: number;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  export interface ScalingActionProperty {\n                                                                                                                                                                    \n    readonly market?: InstanceMarket;\n\n                                                                                                                                         \n    readonly simpleScalingPolicyConfiguration: SimpleScalingPolicyConfigurationProperty;\n  }\n\n                                                                                                                                                                                                                                                                                                                        \n  export interface ScalingRuleProperty {\n                                                                                 \n    readonly action: ScalingActionProperty;\n\n                                                                                                                        \n    readonly description?: string;\n\n                                                                                                                              \n    readonly name: string;\n\n                                                                                                                    \n    readonly trigger: ScalingTriggerProperty;\n  }\n\n                                                                                                                                                                                                                                                                                                                                          \n  export interface ScalingConstraintsProperty {\n                                                                                                                                                                                                                 \n    readonly maxCapacity: number;\n\n                                                                                                                                                                                                                      \n    readonly minCapacity: number;\n  }\n\n                                                                                                                                                                                                                          \n  export interface AutoScalingPolicyProperty {\n                                                                                                                                                                                                       \n    readonly constraints: ScalingConstraintsProperty;\n\n                                                                                                   \n    readonly rules: ScalingRuleProperty[];\n  }\n\n                                                                                                                                                                  \n  export interface InstanceGroupConfigProperty {\n                                                                                                                                                           \n    readonly autoScalingPolicy?: AutoScalingPolicyProperty;\n\n                                                                                                                                                \n    readonly bidPrice?: string;\n\n                                                                                                                           \n    readonly configurations?: ConfigurationProperty[];\n\n                                                                                                                                         \n    readonly ebsConfiguration?: EbsConfigurationProperty;\n\n                                                                         \n    readonly instanceCount: number;\n\n                                                                     \n    readonly instanceRole: InstanceRoleType;\n\n                                                                                     \n    readonly instanceType: string;\n\n                                                                                                                                    \n    readonly market?: InstanceMarket;\n\n                                                                                               \n    readonly name?: string;\n  }\n\n                                                                                                                                                                                         \n  export interface PlacementTypeProperty {\n                                                                                                                                                                                                                                                 \n    readonly availabilityZone?: string;\n\n                                                                                                                                                                                                                                                                                                                                    \n    readonly availabilityZones?: string[];\n  }\n\n                                                                                                                                                                                                                                                                        \n  export interface InstancesConfigProperty {\n                                                                                                                            \n    readonly additionalMasterSecurityGroups?: string[];\n\n                                                                                                                                    \n    readonly additionalSlaveSecurityGroups?: string[];\n\n                                                                                                                                                         \n    readonly ec2KeyName?: string;\n\n                                                                                                                                                                                                                                                                                                                        \n    readonly ec2SubnetId?: string;\n\n                                                                                                                                                                                                                                                            \n    readonly ec2SubnetIds?: string[];\n\n                                                                                                                         \n    readonly emrManagedMasterSecurityGroup?: string;\n\n                                                                                                                                 \n    readonly emrManagedSlaveSecurityGroup?: string;\n\n                                                                                                                                                                                                                                                                        \n    readonly hadoopVersion?: string;\n\n                                                                                           \n    readonly instanceCount?: number;\n\n                                                                                                                                                                                                                                                                                                \n    readonly instanceFleets?: InstanceFleetConfigProperty[];\n\n                                                                                                        \n    readonly instanceGroups?: InstanceGroupConfigProperty[];\n\n                                                                                              \n    readonly masterInstanceType?: string;\n\n                                                                                                                     \n    readonly placement?: PlacementTypeProperty;\n\n                                                                                                                                                                          \n    readonly serviceAccessSecurityGroup?: string;\n\n                                                                                                      \n    readonly slaveInstanceType?: string;\n\n                                                                                                                                                                                                                               \n    readonly terminationProtected?: boolean;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                  \n  export interface ApplicationConfigProperty {\n                                                                                                                                                                                                                         \n    readonly additionalInfo?: { [key: string]: string };\n\n                                                                                                          \n    readonly args?: string[];\n\n                                                   \n    readonly name: string;\n\n                                                                                        \n    readonly version?: string;\n  }\n\n                                                                                                                                                                                           \n  export interface ScriptBootstrapActionConfigProperty {\n                                                                                                                                                \n    readonly path: string;\n\n                                                                                                                              \n    readonly args?: string[];\n  }\n\n                                                                                                                                                                                                                                            \n  export interface BootstrapActionConfigProperty {\n                                                        \n    readonly name: string;\n\n                                                             \n    readonly scriptBootstrapAction: ScriptBootstrapActionConfigProperty;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                    \n  export interface ConfigurationProperty {\n                                                                                                          \n    readonly classification?: string;\n\n                                                                                                                                \n    readonly properties?: { [key: string]: string };\n\n                                                                                                                                           \n    readonly configurations?: ConfigurationProperty[];\n  }\n\n                                                                                                                                                                                                                                                                                                                  \n  export interface KerberosAttributesProperty {\n                                                                                                                         \n    readonly adDomainJoinPassword?: string;\n\n                                                                                                                                                                                                                                \n    readonly adDomainJoinUser?: string;\n\n                                                                                                                                                                                                                                                        \n    readonly crossRealmTrustPrincipalPassword?: string;\n\n                                                                                                                                                                                                                                                       \n    readonly kdcAdminPassword?: string;\n\n                                                                                                                        \n    readonly realm: string;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
