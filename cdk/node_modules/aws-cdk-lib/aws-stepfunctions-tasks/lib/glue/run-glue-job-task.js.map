{
  "version": 3,
  "sources": ["run-glue-job-task.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Duration, Stack } from '../../../core';\nimport { getResourceArn } from '../resource-arn-suffix';\n\n                                                                                \nexport interface RunGlueJobTaskProps {\n\n                                                                                                                                                                                                         \n  readonly integrationPattern?: sfn.ServiceIntegrationPattern;\n\n                                                                                                                                                                                                                               \n  readonly arguments?: { [key: string]: string };\n\n                                                                                                                                                                                                                                                               \n  readonly timeout?: Duration;\n\n                                                                                                                                                                                                                                                                                                                                             \n  readonly securityConfiguration?: string;\n\n                                                                                                                                                                                                                     \n  readonly notifyDelayAfter?: Duration;\n}\n\n                                                                                                                                                                                                                                                                                                                                                         \nexport class RunGlueJobTask implements sfn.IStepFunctionsTask {\n  private readonly integrationPattern: sfn.ServiceIntegrationPattern;\n\n  constructor(private readonly glueJobName: string, private readonly props: RunGlueJobTaskProps = {}) {\n    this.integrationPattern = props.integrationPattern || sfn.ServiceIntegrationPattern.FIRE_AND_FORGET;\n\n    const supportedPatterns = [\n      sfn.ServiceIntegrationPattern.FIRE_AND_FORGET,\n      sfn.ServiceIntegrationPattern.SYNC,\n    ];\n\n    if (!supportedPatterns.includes(this.integrationPattern)) {\n      throw new Error(`Invalid Service Integration Pattern: ${this.integrationPattern} is not supported to call Glue.`);\n    }\n  }\n\n  public bind(task: sfn.Task): sfn.StepFunctionsTaskConfig {\n    const notificationProperty = this.props.notifyDelayAfter ? { NotifyDelayAfter: this.props.notifyDelayAfter.toMinutes() } : null;\n    let iamActions: string[] | undefined;\n    if (this.integrationPattern === sfn.ServiceIntegrationPattern.FIRE_AND_FORGET) {\n      iamActions = ['glue:StartJobRun'];\n    } else if (this.integrationPattern === sfn.ServiceIntegrationPattern.SYNC) {\n      iamActions = [\n        'glue:StartJobRun',\n        'glue:GetJobRun',\n        'glue:GetJobRuns',\n        'glue:BatchStopJobRun',\n      ];\n    }\n    return {\n      resourceArn: getResourceArn('glue', 'startJobRun', this.integrationPattern),\n      policyStatements: [new iam.PolicyStatement({\n        resources: [\n          Stack.of(task).formatArn({\n            service: 'glue',\n            resource: 'job',\n            resourceName: this.glueJobName,\n          }),\n        ],\n        actions: iamActions,\n      })],\n      metricPrefixSingular: 'GlueJob',\n      metricPrefixPlural: 'GlueJobs',\n      metricDimensions: { GlueJobName: this.glueJobName },\n      parameters: {\n        JobName: this.glueJobName,\n        Arguments: this.props.arguments,\n        Timeout: this.props.timeout?.toMinutes(),\n        SecurityConfiguration: this.props.securityConfiguration,\n        NotificationProperty: notificationProperty,\n      },\n    };\n  }\n}\n"],
  "mappings": "0JAAA,IAAA,QAAA,oBACA,IAAA,QAAA,8BACA,OAAA,QAAA,iBACA,sBAAA,QAAA,0BAsBA,oBAA2B,CAGzB,YAA6B,YAAsC,MAA6B,GAAE,CAQhG,GAR2B,KAAA,YAAA,YAAsC,KAAA,MAAA,MACjE,KAAK,mBAAqB,MAAM,oBAAsB,IAAI,0BAA0B,gBAOhF,CAAC,AALqB,CACxB,IAAI,0BAA0B,gBAC9B,IAAI,0BAA0B,MAGT,SAAS,KAAK,oBACnC,KAAM,IAAI,OAAM,wCAAwC,KAAK,qDAI1D,KAAK,KAAc,QACxB,KAAM,sBAAuB,KAAK,MAAM,iBAAmB,CAAE,iBAAkB,KAAK,MAAM,iBAAiB,aAAgB,KAC3H,GAAI,YACJ,MAAI,MAAK,qBAAuB,IAAI,0BAA0B,gBAC5D,WAAa,CAAC,oBACL,KAAK,qBAAuB,IAAI,0BAA0B,MACnE,YAAa,CACX,mBACA,iBACA,kBACA,yBAGG,CACL,YAAa,sBAAA,eAAe,OAAQ,cAAe,KAAK,oBACxD,iBAAkB,CAAC,GAAI,KAAI,gBAAgB,CACzC,UAAW,CACT,OAAA,MAAM,GAAG,MAAM,UAAU,CACvB,QAAS,OACT,SAAU,MACV,aAAc,KAAK,eAGvB,QAAS,cAEX,qBAAsB,UACtB,mBAAoB,WACpB,iBAAkB,CAAE,YAAa,KAAK,aACtC,WAAY,CACV,QAAS,KAAK,YACd,UAAW,KAAK,MAAM,UACtB,QAAO,IAAE,KAAK,MAAM,WAAO,MAAA,KAAA,OAAA,OAAA,GAAE,YAC7B,sBAAuB,KAAK,MAAM,sBAClC,qBAAsB,wBAjD9B,QAAA,eAAA",
  "names": []
}
