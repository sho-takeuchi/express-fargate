{
  "version": 3,
  "sources": ["publish-to-topic.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sns from '../../../aws-sns';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { getResourceArn } from '../resource-arn-suffix';\n\n                                                                        \nexport interface PublishToTopicProps {\n                                                       \n  readonly message: sfn.TaskInput;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n  readonly messagePerSubscriptionType?: boolean;\n\n                                                                                                                                                                                                                         \n  readonly subject?: string;\n\n                                                                                                                                                                                                                \n  readonly integrationPattern?: sfn.ServiceIntegrationPattern;\n}\n\n                                                                                                                                                                                                                                                       \nexport class PublishToTopic implements sfn.IStepFunctionsTask {\n\n  private readonly integrationPattern: sfn.ServiceIntegrationPattern;\n\n  constructor(private readonly topic: sns.ITopic, private readonly props: PublishToTopicProps) {\n    this.integrationPattern = props.integrationPattern || sfn.ServiceIntegrationPattern.FIRE_AND_FORGET;\n\n    const supportedPatterns = [\n      sfn.ServiceIntegrationPattern.FIRE_AND_FORGET,\n      sfn.ServiceIntegrationPattern.WAIT_FOR_TASK_TOKEN,\n    ];\n\n    if (!supportedPatterns.includes(this.integrationPattern)) {\n      throw new Error(`Invalid Service Integration Pattern: ${this.integrationPattern} is not supported to call SNS.`);\n    }\n\n    if (this.integrationPattern === sfn.ServiceIntegrationPattern.WAIT_FOR_TASK_TOKEN) {\n      if (!sfn.FieldUtils.containsTaskToken(props.message)) {\n        throw new Error('Task Token is missing in message (pass JsonPath.taskToken somewhere in message)');\n      }\n    }\n  }\n\n  public bind(_task: sfn.Task): sfn.StepFunctionsTaskConfig {\n    return {\n      resourceArn: getResourceArn('sns', 'publish', this.integrationPattern),\n      policyStatements: [new iam.PolicyStatement({\n        actions: ['sns:Publish'],\n        resources: [this.topic.topicArn],\n      })],\n      parameters: {\n        TopicArn: this.topic.topicArn,\n        Message: this.props.message.value,\n        MessageStructure: this.props.messagePerSubscriptionType ? 'json' : undefined,\n        Subject: this.props.subject,\n      },\n    };\n  }\n}\n"],
  "mappings": "0JAAA,IAAA,QAAA,oBAEA,IAAA,QAAA,8BACA,sBAAA,QAAA,0BAkBA,oBAA2B,CAIzB,YAA6B,MAAoC,MAA0B,CAQzF,GAR2B,KAAA,MAAA,MAAoC,KAAA,MAAA,MAC/D,KAAK,mBAAqB,MAAM,oBAAsB,IAAI,0BAA0B,gBAOhF,CAAC,AALqB,CACxB,IAAI,0BAA0B,gBAC9B,IAAI,0BAA0B,qBAGT,SAAS,KAAK,oBACnC,KAAM,IAAI,OAAM,wCAAwC,KAAK,oDAG/D,GAAI,KAAK,qBAAuB,IAAI,0BAA0B,qBACxD,CAAC,IAAI,WAAW,kBAAkB,MAAM,SAC1C,KAAM,IAAI,OAAM,mFAKf,KAAK,MAAe,CACzB,MAAO,CACL,YAAa,sBAAA,eAAe,MAAO,UAAW,KAAK,oBACnD,iBAAkB,CAAC,GAAI,KAAI,gBAAgB,CACzC,QAAS,CAAC,eACV,UAAW,CAAC,KAAK,MAAM,aAEzB,WAAY,CACV,SAAU,KAAK,MAAM,SACrB,QAAS,KAAK,MAAM,QAAQ,MAC5B,iBAAkB,KAAK,MAAM,2BAA6B,OAAS,OACnE,QAAS,KAAK,MAAM,WAlC5B,QAAA,eAAA",
  "names": []
}
