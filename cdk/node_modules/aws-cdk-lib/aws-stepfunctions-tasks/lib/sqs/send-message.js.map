{
  "version": 3,
  "sources": ["send-message.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sqs from '../../../aws-sqs';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n                                                           \nexport interface SqsSendMessageProps extends sfn.TaskStateBaseProps {\n\n                                                            \n  readonly queue: sqs.IQueue\n\n                                                       \n  readonly messageBody: sfn.TaskInput;\n\n                                                                                                                                                                                                                                                                                                                                                                \n  readonly delay?: cdk.Duration;\n\n                                                                                                                                                                                                                                                    \n  readonly messageDeduplicationId?: string;\n\n                                                                                                                                                                                                                                                                                         \n  readonly messageGroupId?: string;\n}\n\n                                                                 \nexport class SqsSendMessage extends sfn.TaskStateBase {\n\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  ];\n\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: SqsSendMessageProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.REQUEST_RESPONSE;\n\n    validatePatternSupported(this.integrationPattern, SqsSendMessage.SUPPORTED_INTEGRATION_PATTERNS);\n\n    if (props.integrationPattern === sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN) {\n      if (!sfn.FieldUtils.containsTaskToken(props.messageBody)) {\n        throw new Error('Task Token is required in `messageBody` Use JsonPath.taskToken to set the token.');\n      }\n    }\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        actions: ['sqs:SendMessage'],\n        resources: [this.props.queue.queueArn],\n      }),\n    ];\n  }\n\n  /**\n   * Provides the SQS SendMessage service integration task configuration\n   */\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('sqs', 'sendMessage', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        QueueUrl: this.props.queue.queueUrl,\n        MessageBody: this.props.messageBody.value,\n        DelaySeconds: this.props.delay?.toSeconds(),\n        MessageDeduplicationId: this.props.messageDeduplicationId,\n        MessageGroupId: this.props.messageGroupId,\n      }),\n    };\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,oBAEA,IAAA,QAAA,8BAGA,aAAA,QAAA,yBAsBA,4BAAoC,KAAI,aAAa,CAYnD,YAAY,MAAkB,GAA6B,MAA0B,QACnF,MAAM,MAAO,GAAI,OAKjB,GANyD,KAAA,MAAA,6FAEzD,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,iBAE7E,aAAA,yBAAyB,KAAK,mBAAoB,eAAe,gCAE7D,MAAM,qBAAuB,IAAI,mBAAmB,qBAClD,CAAC,IAAI,WAAW,kBAAkB,MAAM,aAC1C,KAAM,IAAI,OAAM,oFAIpB,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,mBACV,UAAW,CAAC,KAAK,MAAM,MAAM,aAWzB,aAAW,QACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,MAAO,cAAe,KAAK,oBAC5D,WAAY,IAAI,WAAW,aAAa,CACtC,SAAU,KAAK,MAAM,MAAM,SAC3B,YAAa,KAAK,MAAM,YAAY,MACpC,aAAY,IAAE,KAAK,MAAM,SAAK,MAAA,KAAA,OAAA,OAAA,GAAE,YAChC,uBAAwB,KAAK,MAAM,uBACnC,eAAgB,KAAK,MAAM,mBA9CnC,QAAA,eAAA,oIAE0B,eAAA,+BAA2D,CACjF,IAAI,mBAAmB,iBACvB,IAAI,mBAAmB",
  "names": []
}
