{
  "version": 3,
  "sources": ["state-machine-fragment.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { Chain } from './chain';\nimport { Parallel, ParallelProps } from './states/parallel';\nimport { State } from './states/state';\nimport { IChainable, INextable } from './types';\n\n                                                          \nexport abstract class StateMachineFragment extends Construct implements IChainable {\n                                                               \n  public abstract readonly startState: State;\n\n                                                                  \n  public abstract readonly endStates: INextable[];\n\n  public get id() {\n    return this.node.id;\n  }\n\n                                                                                                                                                                                                                                                              \n  public prefixStates(prefix?: string): StateMachineFragment {\n    State.prefixStates(this, prefix || `${this.id}: `);\n    return this;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                        \n  public toSingleState(options: SingleStateOptions = {}): Parallel {\n    const stateId = options.stateId || this.id;\n    this.prefixStates(options.prefixStates || `${stateId}: `);\n\n    return new Parallel(this, stateId, options).branch(this);\n  }\n\n                                                               \n  public next(next: IChainable) {\n    return Chain.start(this).next(next);\n  }\n}\n\n                                              \nexport interface SingleStateOptions extends ParallelProps {\n                                                                                                                 \n  readonly stateId?: string;\n\n                                                                                                   \n  readonly prefixStates?: string;\n}\n"],
  "mappings": "2NAAA,aAAA,QAAA,cACA,QAAA,QAAA,WACA,WAAA,QAAA,qBACA,QAAA,QAAA,kBAIA,kCAAmD,cAAA,SAAS,IAO/C,KAAE,CACX,MAAO,MAAK,KAAK,GAIZ,aAAa,OAAe,CACjC,eAAA,MAAM,aAAa,KAAM,QAAU,GAAG,KAAK,QACpC,KAIF,cAAc,QAA8B,GAAE,mFACnD,KAAM,SAAU,QAAQ,SAAW,KAAK,GACxC,YAAK,aAAa,QAAQ,cAAgB,GAAG,aAEtC,GAAI,YAAA,SAAS,KAAM,QAAS,SAAS,OAAO,MAI9C,KAAK,KAAgB,+EACnB,QAAA,MAAM,MAAM,MAAM,KAAK,OA3BlC,QAAA,qBAAA",
  "names": []
}
