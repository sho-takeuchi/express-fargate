{
  "version": 3,
  "sources": ["choice.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { Chain } from '../chain';\nimport { Condition } from '../condition';\nimport { IChainable, INextable } from '../types';\nimport { StateType } from './private/state-type';\nimport { State } from './state';\n\n                                                 \nexport interface ChoiceProps {\n                                                                                     \n  readonly comment?: string;\n\n                                                                                                                                                                                                                                          \n  readonly inputPath?: string;\n\n                                                                                                                                                                                                                                            \n  readonly outputPath?: string;\n}\n\n                                                                                                                                   \nexport class Choice extends State {\n  public readonly endStates: INextable[] = [];\n\n  constructor(scope: Construct, id: string, props: ChoiceProps = {}) {\n    super(scope, id, props);\n  }\n\n                                                                                        \n  public when(condition: Condition, next: IChainable): Choice {\n    super.addChoice(condition, next.startState);\n    return this;\n  }\n\n                                                                                                                                                                                                           \n  public otherwise(def: IChainable): Choice {\n    super.makeDefault(def.startState);\n    return this;\n  }\n\n                                                                                                                                                     \n  public afterwards(options: AfterwardsOptions = {}): Chain {\n    const endStates = State.filterNextables(State.findReachableEndStates(this, { includeErrorHandlers: options.includeErrorHandlers }));\n    if (options.includeOtherwise && this.defaultChoice) {\n      throw new Error(`'includeOtherwise' set but Choice state ${this.stateId} already has an 'otherwise' transition`);\n    }\n    if (options.includeOtherwise) {\n      endStates.push(new DefaultAsNext(this));\n    }\n    return Chain.custom(this, endStates, this);\n  }\n\n                                                                        \n  public toStateJson(): object {\n    return {\n      Type: StateType.CHOICE,\n      Comment: this.comment,\n      ...this.renderInputOutput(),\n      ...this.renderChoices(),\n    };\n  }\n}\n\n                                                 \nexport interface AfterwardsOptions {\n                                                                                                                                                                                                                                                  \n  readonly includeErrorHandlers?: boolean;\n\n                                                                                                                                                                                                                                                                                             \n  readonly includeOtherwise?: boolean;\n}\n\n/**\n * Adapter to make the .otherwise() transition settable through .next()\n */\nclass DefaultAsNext implements INextable {\n  constructor(private readonly choice: Choice) {\n  }\n\n  public next(state: IChainable): Chain {\n    this.choice.otherwise(state);\n    return Chain.sequence(this.choice, state);\n  }\n}\n"],
  "mappings": "gNACA,QAAA,QAAA,YAGA,aAAA,QAAA,wBACA,QAAA,QAAA,WAeA,oBAA4B,SAAA,KAAK,CAG/B,YAAY,MAAkB,GAAY,MAAqB,GAAE,CAC/D,MAAM,MAAO,GAAI,OAHH,KAAA,UAAyB,4EAOlC,KAAK,UAAsB,KAAgB,0JAChD,MAAM,UAAU,UAAW,KAAK,YACzB,KAIF,UAAU,IAAe,8EAC9B,MAAM,YAAY,IAAI,YACf,KAIF,WAAW,QAA6B,GAAE,kFAC/C,KAAM,WAAY,QAAA,MAAM,gBAAgB,QAAA,MAAM,uBAAuB,KAAM,CAAE,qBAAsB,QAAQ,wBAC3G,GAAI,QAAQ,kBAAoB,KAAK,cACnC,KAAM,IAAI,OAAM,2CAA2C,KAAK,iDAElE,MAAI,SAAQ,kBACV,UAAU,KAAK,GAAI,eAAc,OAE5B,QAAA,MAAM,OAAO,KAAM,UAAW,MAIhC,aAAW,CAChB,MAAO,CACL,KAAM,aAAA,UAAU,OAChB,QAAS,KAAK,WACX,KAAK,uBACL,KAAK,kBArCd,QAAA,OAAA,sGAsDA,mBAAmB,CACjB,YAA6B,OAAc,CAAd,KAAA,OAAA,OAGtB,KAAK,MAAiB,CAC3B,YAAK,OAAO,UAAU,OACf,QAAA,MAAM,SAAS,KAAK,OAAQ",
  "names": []
}
