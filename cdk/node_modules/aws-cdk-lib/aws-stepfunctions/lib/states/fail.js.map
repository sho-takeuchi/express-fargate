{
  "version": 3,
  "sources": ["fail.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { INextable } from '../types';\nimport { StateType } from './private/state-type';\nimport { State } from './state';\n\n                                               \nexport interface FailProps {\n                                                                                     \n  readonly comment?: string;\n\n                                                                                           \n  readonly error?: string;\n\n                                                                                             \n  readonly cause?: string;\n}\n\n                                                                                                                          \nexport class Fail extends State {\n  public readonly endStates: INextable[] = [];\n\n  private readonly error?: string;\n  private readonly cause?: string;\n\n  constructor(scope: Construct, id: string, props: FailProps = {}) {\n    super(scope, id, props);\n\n    this.error = props.error;\n    this.cause = props.cause;\n  }\n\n                                                                        \n  public toStateJson(): object {\n    return {\n      Type: StateType.FAIL,\n      Comment: this.comment,\n      Error: this.error,\n      Cause: this.cause,\n    };\n  }\n}\n"],
  "mappings": "8MAEA,aAAA,QAAA,wBACA,QAAA,QAAA,WAeA,kBAA0B,SAAA,KAAK,CAM7B,YAAY,MAAkB,GAAY,MAAmB,GAAE,CAC7D,MAAM,MAAO,GAAI,OANH,KAAA,UAAyB,0EAQvC,KAAK,MAAQ,MAAM,MACnB,KAAK,MAAQ,MAAM,MAId,aAAW,CAChB,MAAO,CACL,KAAM,aAAA,UAAU,KAChB,QAAS,KAAK,QACd,MAAO,KAAK,MACZ,MAAO,KAAK,QAnBlB,QAAA,KAAA",
  "names": []
}
