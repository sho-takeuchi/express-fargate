{
  "version": 3,
  "sources": ["wait.ts"],
  "sourcesContent": ["import * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { Chain } from '../chain';\nimport { IChainable, INextable } from '../types';\nimport { StateType } from './private/state-type';\nimport { State } from './state';\n\n                                                                                                                                                                                                          \nexport class WaitTime {\n                                             \n  public static duration(duration: cdk.Duration) { return new WaitTime({ Seconds: duration.toSeconds() }); }\n\n                                                                                                       \n  public static timestamp(timestamp: string) { return new WaitTime({ Timestamp: timestamp }); }\n\n                                                                                                                  \n  public static secondsPath(path: string) { return new WaitTime({ SecondsPath: path }); }\n\n                                                                                                             \n  public static timestampPath(path: string) { return new WaitTime({ TimestampPath: path }); }\n\n  private constructor(private readonly json: any) { }\n\n  /**\n   * @internal\n   */\n  public get _json() {\n    return this.json;\n  }\n}\n\n                                               \nexport interface WaitProps {\n                                                                                     \n  readonly comment?: string;\n\n                               \n  readonly time: WaitTime;\n}\n\n                                                                                                                                       \nexport class Wait extends State implements INextable {\n  public readonly endStates: INextable[];\n\n  private readonly time: WaitTime;\n\n  constructor(scope: Construct, id: string, props: WaitProps) {\n    super(scope, id, props);\n\n    this.time = props.time;\n    this.endStates = [this];\n  }\n\n                                                               \n  public next(next: IChainable): Chain {\n    super.makeNext(next.startState);\n    return Chain.sequence(this, next);\n  }\n\n                                                                        \n  public toStateJson(): object {\n    return {\n      Type: StateType.WAIT,\n      Comment: this.comment,\n      ...this.time._json,\n      ...this.renderNextEnd(),\n    };\n  }\n}\n"],
  "mappings": "kOAEA,QAAA,QAAA,YAEA,aAAA,QAAA,wBACA,QAAA,QAAA,WAGA,cAAqB,CAanB,YAAqC,KAAS,CAAT,KAAA,KAAA,WAXvB,UAAS,SAAsB,CAAA,+BAAA,qBAAA,UAAW,GAAI,UAAS,CAAE,QAAS,SAAS,oBAG3E,WAAU,UAAiB,CAAI,MAAO,IAAI,UAAS,CAAE,UAAW,kBAGhE,aAAY,KAAY,CAAI,MAAO,IAAI,UAAS,CAAE,YAAa,aAG/D,eAAc,KAAY,CAAI,MAAO,IAAI,UAAS,CAAE,cAAe,UAOtE,QAAK,CACd,MAAO,MAAK,MAnBhB,QAAA,SAAA,4GAiCA,kBAA0B,SAAA,KAAK,CAK7B,YAAY,MAAkB,GAAY,MAAgB,CACxD,MAAM,MAAO,GAAI,8EAEjB,KAAK,KAAO,MAAM,KAClB,KAAK,UAAY,CAAC,MAIb,KAAK,KAAgB,+EAC1B,MAAM,SAAS,KAAK,YACb,QAAA,MAAM,SAAS,KAAM,MAIvB,aAAW,CAChB,MAAO,CACL,KAAM,aAAA,UAAU,KAChB,QAAS,KAAK,WACX,KAAK,KAAK,SACV,KAAK,kBAxBd,QAAA,KAAA",
  "names": []
}
