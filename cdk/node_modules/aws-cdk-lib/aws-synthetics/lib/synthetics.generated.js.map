{
  "version": 3,
  "sources": ["synthetics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-01-29T04:08:34.178Z\",\"fingerprint\":\"VmU/2CinWOcg/PV4B2+TRZ02E/kBAnm+ZxhJMtAL8cc=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n                                                                                                                                                                                                   \nexport interface CfnCanaryProps {\n\n                                                                                                                                                                                                                                                                                                                                                                                                                           \n    readonly artifactS3Location: string;\n\nn    readonly code: CfnCanary.CodeProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n    readonly executionRoleArn: string;\n\nn    readonly name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                               \n    readonly runtimeVersion: string;\n\n                                                                                                                                                                                                                                                                                        \n    readonly schedule: CfnCanary.ScheduleProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    readonly startCanaryAfterCreation: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                 \n    readonly artifactConfig?: CfnCanary.ArtifactConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                       \n    readonly failureRetentionPeriod?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                     \n    readonly runConfig?: CfnCanary.RunConfigProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                           \n    readonly successRetentionPeriod?: number;\n\n                                                                                                                                                                                                                                        \n    readonly tags?: cdk.CfnTag[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    readonly visualReference?: CfnCanary.VisualReferenceProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    readonly vpcConfig?: CfnCanary.VPCConfigProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCanaryProps`\n *\n * @param properties - the TypeScript properties of a `CfnCanaryProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanaryPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('artifactConfig', CfnCanary_ArtifactConfigPropertyValidator)(properties.artifactConfig));\n    errors.collect(cdk.propertyValidator('artifactS3Location', cdk.requiredValidator)(properties.artifactS3Location));\n    errors.collect(cdk.propertyValidator('artifactS3Location', cdk.validateString)(properties.artifactS3Location));\n    errors.collect(cdk.propertyValidator('code', cdk.requiredValidator)(properties.code));\n    errors.collect(cdk.propertyValidator('code', CfnCanary_CodePropertyValidator)(properties.code));\n    errors.collect(cdk.propertyValidator('executionRoleArn', cdk.requiredValidator)(properties.executionRoleArn));\n    errors.collect(cdk.propertyValidator('executionRoleArn', cdk.validateString)(properties.executionRoleArn));\n    errors.collect(cdk.propertyValidator('failureRetentionPeriod', cdk.validateNumber)(properties.failureRetentionPeriod));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('runConfig', CfnCanary_RunConfigPropertyValidator)(properties.runConfig));\n    errors.collect(cdk.propertyValidator('runtimeVersion', cdk.requiredValidator)(properties.runtimeVersion));\n    errors.collect(cdk.propertyValidator('runtimeVersion', cdk.validateString)(properties.runtimeVersion));\n    errors.collect(cdk.propertyValidator('schedule', cdk.requiredValidator)(properties.schedule));\n    errors.collect(cdk.propertyValidator('schedule', CfnCanary_SchedulePropertyValidator)(properties.schedule));\n    errors.collect(cdk.propertyValidator('startCanaryAfterCreation', cdk.requiredValidator)(properties.startCanaryAfterCreation));\n    errors.collect(cdk.propertyValidator('startCanaryAfterCreation', cdk.validateBoolean)(properties.startCanaryAfterCreation));\n    errors.collect(cdk.propertyValidator('successRetentionPeriod', cdk.validateNumber)(properties.successRetentionPeriod));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcConfig', CfnCanary_VPCConfigPropertyValidator)(properties.vpcConfig));\n    errors.collect(cdk.propertyValidator('visualReference', CfnCanary_VisualReferencePropertyValidator)(properties.visualReference));\n    return errors.wrap('supplied properties not correct for \"CfnCanaryProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary` resource\n *\n * @param properties - the TypeScript properties of a `CfnCanaryProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanaryPropsValidator(properties).assertSuccess();\n    return {\n        ArtifactS3Location: cdk.stringToCloudFormation(properties.artifactS3Location),\n        Code: cfnCanaryCodePropertyToCloudFormation(properties.code),\n        ExecutionRoleArn: cdk.stringToCloudFormation(properties.executionRoleArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        RuntimeVersion: cdk.stringToCloudFormation(properties.runtimeVersion),\n        Schedule: cfnCanarySchedulePropertyToCloudFormation(properties.schedule),\n        StartCanaryAfterCreation: cdk.booleanToCloudFormation(properties.startCanaryAfterCreation),\n        ArtifactConfig: cfnCanaryArtifactConfigPropertyToCloudFormation(properties.artifactConfig),\n        FailureRetentionPeriod: cdk.numberToCloudFormation(properties.failureRetentionPeriod),\n        RunConfig: cfnCanaryRunConfigPropertyToCloudFormation(properties.runConfig),\n        SuccessRetentionPeriod: cdk.numberToCloudFormation(properties.successRetentionPeriod),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        VisualReference: cfnCanaryVisualReferencePropertyToCloudFormation(properties.visualReference),\n        VPCConfig: cfnCanaryVPCConfigPropertyToCloudFormation(properties.vpcConfig),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanaryProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanaryProps>();\n    ret.addPropertyResult('artifactS3Location', 'ArtifactS3Location', cfn_parse.FromCloudFormation.getString(properties.ArtifactS3Location));\n    ret.addPropertyResult('code', 'Code', CfnCanaryCodePropertyFromCloudFormation(properties.Code));\n    ret.addPropertyResult('executionRoleArn', 'ExecutionRoleArn', cfn_parse.FromCloudFormation.getString(properties.ExecutionRoleArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('runtimeVersion', 'RuntimeVersion', cfn_parse.FromCloudFormation.getString(properties.RuntimeVersion));\n    ret.addPropertyResult('schedule', 'Schedule', CfnCanarySchedulePropertyFromCloudFormation(properties.Schedule));\n    ret.addPropertyResult('startCanaryAfterCreation', 'StartCanaryAfterCreation', cfn_parse.FromCloudFormation.getBoolean(properties.StartCanaryAfterCreation));\n    ret.addPropertyResult('artifactConfig', 'ArtifactConfig', properties.ArtifactConfig != null ? CfnCanaryArtifactConfigPropertyFromCloudFormation(properties.ArtifactConfig) : undefined);\n    ret.addPropertyResult('failureRetentionPeriod', 'FailureRetentionPeriod', properties.FailureRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.FailureRetentionPeriod) : undefined);\n    ret.addPropertyResult('runConfig', 'RunConfig', properties.RunConfig != null ? CfnCanaryRunConfigPropertyFromCloudFormation(properties.RunConfig) : undefined);\n    ret.addPropertyResult('successRetentionPeriod', 'SuccessRetentionPeriod', properties.SuccessRetentionPeriod != null ? cfn_parse.FromCloudFormation.getNumber(properties.SuccessRetentionPeriod) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('visualReference', 'VisualReference', properties.VisualReference != null ? CfnCanaryVisualReferencePropertyFromCloudFormation(properties.VisualReference) : undefined);\n    ret.addPropertyResult('vpcConfig', 'VPCConfig', properties.VPCConfig != null ? CfnCanaryVPCConfigPropertyFromCloudFormation(properties.VPCConfig) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nnexport class CfnCanary extends cdk.CfnResource implements cdk.IInspectable {\n                                                                                     \n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Synthetics::Canary\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCanary {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCanaryPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCanary(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n                                                                               \n    public readonly attrId: string;\n\n                                                                                                              \n    public readonly attrState: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                           \n    public artifactS3Location: string;\n\nn    public code: CfnCanary.CodeProperty | cdk.IResolvable;\n\nn    public executionRoleArn: string;\n\nn    public name: string;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                               \n    public runtimeVersion: string;\n\n                                                                                                                                                                                                                                                                                        \n    public schedule: CfnCanary.ScheduleProperty | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n    public startCanaryAfterCreation: boolean | cdk.IResolvable;\n\n                                                                                                                                                                                                                                                                                                                                                 \n    public artifactConfig: CfnCanary.ArtifactConfigProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                       \n    public failureRetentionPeriod: number | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                     \n    public runConfig: CfnCanary.RunConfigProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                           \n    public successRetentionPeriod: number | undefined;\n\n                                                                                                                                                                                                                                        \n    public readonly tags: cdk.TagManager;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n    public visualReference: CfnCanary.VisualReferenceProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n    public vpcConfig: CfnCanary.VPCConfigProperty | cdk.IResolvable | undefined;\n\n                                                                                                                                                                                                                             \n    constructor(scope: constructs.Construct, id: string, props: CfnCanaryProps) {\n        super(scope, id, { type: CfnCanary.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'artifactS3Location', this);\n        cdk.requireProperty(props, 'code', this);\n        cdk.requireProperty(props, 'executionRoleArn', this);\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'runtimeVersion', this);\n        cdk.requireProperty(props, 'schedule', this);\n        cdk.requireProperty(props, 'startCanaryAfterCreation', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n\n        this.artifactS3Location = props.artifactS3Location;\n        this.code = props.code;\n        this.executionRoleArn = props.executionRoleArn;\n        this.name = props.name;\n        this.runtimeVersion = props.runtimeVersion;\n        this.schedule = props.schedule;\n        this.startCanaryAfterCreation = props.startCanaryAfterCreation;\n        this.artifactConfig = props.artifactConfig;\n        this.failureRetentionPeriod = props.failureRetentionPeriod;\n        this.runConfig = props.runConfig;\n        this.successRetentionPeriod = props.successRetentionPeriod;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Synthetics::Canary\", props.tags, { tagPropertyName: 'tags' });\n        this.visualReference = props.visualReference;\n        this.vpcConfig = props.vpcConfig;\n    }\n\n                                                                                                                                                                              \n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCanary.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            artifactS3Location: this.artifactS3Location,\n            code: this.code,\n            executionRoleArn: this.executionRoleArn,\n            name: this.name,\n            runtimeVersion: this.runtimeVersion,\n            schedule: this.schedule,\n            startCanaryAfterCreation: this.startCanaryAfterCreation,\n            artifactConfig: this.artifactConfig,\n            failureRetentionPeriod: this.failureRetentionPeriod,\n            runConfig: this.runConfig,\n            successRetentionPeriod: this.successRetentionPeriod,\n            tags: this.tags.renderTags(),\n            visualReference: this.visualReference,\n            vpcConfig: this.vpcConfig,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCanaryPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnCanary {\n                                                                                                                                                                                                                                                                                                                                                                               \n    export interface ArtifactConfigProperty {\nn        readonly s3Encryption?: CfnCanary.S3EncryptionProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ArtifactConfigProperty`\n *\n * @param properties - the TypeScript properties of a `ArtifactConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_ArtifactConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('s3Encryption', CfnCanary_S3EncryptionPropertyValidator)(properties.s3Encryption));\n    return errors.wrap('supplied properties not correct for \"ArtifactConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.ArtifactConfig` resource\n *\n * @param properties - the TypeScript properties of a `ArtifactConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.ArtifactConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryArtifactConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_ArtifactConfigPropertyValidator(properties).assertSuccess();\n    return {\n        S3Encryption: cfnCanaryS3EncryptionPropertyToCloudFormation(properties.s3Encryption),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryArtifactConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.ArtifactConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.ArtifactConfigProperty>();\n    ret.addPropertyResult('s3Encryption', 'S3Encryption', properties.S3Encryption != null ? CfnCanaryS3EncryptionPropertyFromCloudFormation(properties.S3Encryption) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\n                                                                                                                                                                                                                                                                                                                                        \n    export interface BaseScreenshotProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n        readonly ignoreCoordinates?: string[];\n                                                                                                                                                                                                                                                                                                                                                                                                                    \n        readonly screenshotName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BaseScreenshotProperty`\n *\n * @param properties - the TypeScript properties of a `BaseScreenshotProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_BaseScreenshotPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ignoreCoordinates', cdk.listValidator(cdk.validateString))(properties.ignoreCoordinates));\n    errors.collect(cdk.propertyValidator('screenshotName', cdk.requiredValidator)(properties.screenshotName));\n    errors.collect(cdk.propertyValidator('screenshotName', cdk.validateString)(properties.screenshotName));\n    return errors.wrap('supplied properties not correct for \"BaseScreenshotProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.BaseScreenshot` resource\n *\n * @param properties - the TypeScript properties of a `BaseScreenshotProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.BaseScreenshot` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryBaseScreenshotPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_BaseScreenshotPropertyValidator(properties).assertSuccess();\n    return {\n        IgnoreCoordinates: cdk.listMapper(cdk.stringToCloudFormation)(properties.ignoreCoordinates),\n        ScreenshotName: cdk.stringToCloudFormation(properties.screenshotName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryBaseScreenshotPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.BaseScreenshotProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.BaseScreenshotProperty>();\n    ret.addPropertyResult('ignoreCoordinates', 'IgnoreCoordinates', properties.IgnoreCoordinates != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IgnoreCoordinates) : undefined);\n    ret.addPropertyResult('screenshotName', 'ScreenshotName', cfn_parse.FromCloudFormation.getString(properties.ScreenshotName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\nn    export interface CodeProperty {\n                                                                                                                                                                                                                                                                                                                                                                                \n        readonly handler: string;\n                                                                                                                                                                                                                                                                                                                \n        readonly s3Bucket?: string;\n                                                                                                                                                                                                                                                                                                                                                                   \n        readonly s3Key?: string;\n                                                                                                                                                                                                                                                    \n        readonly s3ObjectVersion?: string;\n                                                                                                                                                                                                                                                                                                                                                                                         \n        readonly script?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CodeProperty`\n *\n * @param properties - the TypeScript properties of a `CodeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_CodePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('handler', cdk.requiredValidator)(properties.handler));\n    errors.collect(cdk.propertyValidator('handler', cdk.validateString)(properties.handler));\n    errors.collect(cdk.propertyValidator('s3Bucket', cdk.validateString)(properties.s3Bucket));\n    errors.collect(cdk.propertyValidator('s3Key', cdk.validateString)(properties.s3Key));\n    errors.collect(cdk.propertyValidator('s3ObjectVersion', cdk.validateString)(properties.s3ObjectVersion));\n    errors.collect(cdk.propertyValidator('script', cdk.validateString)(properties.script));\n    return errors.wrap('supplied properties not correct for \"CodeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.Code` resource\n *\n * @param properties - the TypeScript properties of a `CodeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.Code` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryCodePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_CodePropertyValidator(properties).assertSuccess();\n    return {\n        Handler: cdk.stringToCloudFormation(properties.handler),\n        S3Bucket: cdk.stringToCloudFormation(properties.s3Bucket),\n        S3Key: cdk.stringToCloudFormation(properties.s3Key),\n        S3ObjectVersion: cdk.stringToCloudFormation(properties.s3ObjectVersion),\n        Script: cdk.stringToCloudFormation(properties.script),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryCodePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.CodeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.CodeProperty>();\n    ret.addPropertyResult('handler', 'Handler', cfn_parse.FromCloudFormation.getString(properties.Handler));\n    ret.addPropertyResult('s3Bucket', 'S3Bucket', properties.S3Bucket != null ? cfn_parse.FromCloudFormation.getString(properties.S3Bucket) : undefined);\n    ret.addPropertyResult('s3Key', 'S3Key', properties.S3Key != null ? cfn_parse.FromCloudFormation.getString(properties.S3Key) : undefined);\n    ret.addPropertyResult('s3ObjectVersion', 'S3ObjectVersion', properties.S3ObjectVersion != null ? cfn_parse.FromCloudFormation.getString(properties.S3ObjectVersion) : undefined);\n    ret.addPropertyResult('script', 'Script', properties.Script != null ? cfn_parse.FromCloudFormation.getString(properties.Script) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\n                                                                                                                                                                                                                                                                                                   \n    export interface RunConfigProperty {\nn        readonly activeTracing?: boolean | cdk.IResolvable;\nn        readonly environmentVariables?: { [key: string]: (string) } | cdk.IResolvable;\n                                                                                                                                                                                                                                                                                                                                                          \n        readonly memoryInMb?: number;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        readonly timeoutInSeconds?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RunConfigProperty`\n *\n * @param properties - the TypeScript properties of a `RunConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_RunConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('activeTracing', cdk.validateBoolean)(properties.activeTracing));\n    errors.collect(cdk.propertyValidator('environmentVariables', cdk.hashValidator(cdk.validateString))(properties.environmentVariables));\n    errors.collect(cdk.propertyValidator('memoryInMb', cdk.validateNumber)(properties.memoryInMb));\n    errors.collect(cdk.propertyValidator('timeoutInSeconds', cdk.validateNumber)(properties.timeoutInSeconds));\n    return errors.wrap('supplied properties not correct for \"RunConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.RunConfig` resource\n *\n * @param properties - the TypeScript properties of a `RunConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.RunConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryRunConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_RunConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ActiveTracing: cdk.booleanToCloudFormation(properties.activeTracing),\n        EnvironmentVariables: cdk.hashMapper(cdk.stringToCloudFormation)(properties.environmentVariables),\n        MemoryInMB: cdk.numberToCloudFormation(properties.memoryInMb),\n        TimeoutInSeconds: cdk.numberToCloudFormation(properties.timeoutInSeconds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryRunConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.RunConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.RunConfigProperty>();\n    ret.addPropertyResult('activeTracing', 'ActiveTracing', properties.ActiveTracing != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ActiveTracing) : undefined);\n    ret.addPropertyResult('environmentVariables', 'EnvironmentVariables', properties.EnvironmentVariables != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.EnvironmentVariables) : undefined);\n    ret.addPropertyResult('memoryInMb', 'MemoryInMB', properties.MemoryInMB != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemoryInMB) : undefined);\n    ret.addPropertyResult('timeoutInSeconds', 'TimeoutInSeconds', properties.TimeoutInSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.TimeoutInSeconds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\nn    export interface S3EncryptionProperty {\nn        readonly encryptionMode?: string;\n                                                                                                                                                                                                                                                                                                                              \n        readonly kmsKeyArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3EncryptionProperty`\n *\n * @param properties - the TypeScript properties of a `S3EncryptionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_S3EncryptionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('encryptionMode', cdk.validateString)(properties.encryptionMode));\n    errors.collect(cdk.propertyValidator('kmsKeyArn', cdk.validateString)(properties.kmsKeyArn));\n    return errors.wrap('supplied properties not correct for \"S3EncryptionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.S3Encryption` resource\n *\n * @param properties - the TypeScript properties of a `S3EncryptionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.S3Encryption` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryS3EncryptionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_S3EncryptionPropertyValidator(properties).assertSuccess();\n    return {\n        EncryptionMode: cdk.stringToCloudFormation(properties.encryptionMode),\n        KmsKeyArn: cdk.stringToCloudFormation(properties.kmsKeyArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryS3EncryptionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.S3EncryptionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.S3EncryptionProperty>();\n    ret.addPropertyResult('encryptionMode', 'EncryptionMode', properties.EncryptionMode != null ? cfn_parse.FromCloudFormation.getString(properties.EncryptionMode) : undefined);\n    ret.addPropertyResult('kmsKeyArn', 'KmsKeyArn', properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\n                                                                                                                                                                                                                                                                                                                           \n    export interface ScheduleProperty {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n        readonly durationInSeconds?: string;\nn        readonly expression: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScheduleProperty`\n *\n * @param properties - the TypeScript properties of a `ScheduleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_SchedulePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('durationInSeconds', cdk.validateString)(properties.durationInSeconds));\n    errors.collect(cdk.propertyValidator('expression', cdk.requiredValidator)(properties.expression));\n    errors.collect(cdk.propertyValidator('expression', cdk.validateString)(properties.expression));\n    return errors.wrap('supplied properties not correct for \"ScheduleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.Schedule` resource\n *\n * @param properties - the TypeScript properties of a `ScheduleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.Schedule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanarySchedulePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_SchedulePropertyValidator(properties).assertSuccess();\n    return {\n        DurationInSeconds: cdk.stringToCloudFormation(properties.durationInSeconds),\n        Expression: cdk.stringToCloudFormation(properties.expression),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanarySchedulePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.ScheduleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.ScheduleProperty>();\n    ret.addPropertyResult('durationInSeconds', 'DurationInSeconds', properties.DurationInSeconds != null ? cfn_parse.FromCloudFormation.getString(properties.DurationInSeconds) : undefined);\n    ret.addPropertyResult('expression', 'Expression', cfn_parse.FromCloudFormation.getString(properties.Expression));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\nn    export interface VPCConfigProperty {\n                                                                                                                                                                                                                                                                             \n        readonly securityGroupIds: string[];\n                                                                                                                                                                                                                                                                          \n        readonly subnetIds: string[];\n                                                                                                                                                                                                                                                                 \n        readonly vpcId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VPCConfigProperty`\n *\n * @param properties - the TypeScript properties of a `VPCConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_VPCConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.requiredValidator)(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"VPCConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.VPCConfig` resource\n *\n * @param properties - the TypeScript properties of a `VPCConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.VPCConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryVPCConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_VPCConfigPropertyValidator(properties).assertSuccess();\n    return {\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryVPCConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.VPCConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.VPCConfigProperty>();\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds));\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('vpcId', 'VpcId', properties.VpcId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCanary {\nn    export interface VisualReferenceProperty {\nn        readonly baseCanaryRunId: string;\n                                                                                                                                                                                                                                                                                                                                        \n        readonly baseScreenshots?: Array<CfnCanary.BaseScreenshotProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VisualReferenceProperty`\n *\n * @param properties - the TypeScript properties of a `VisualReferenceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCanary_VisualReferencePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('baseCanaryRunId', cdk.requiredValidator)(properties.baseCanaryRunId));\n    errors.collect(cdk.propertyValidator('baseCanaryRunId', cdk.validateString)(properties.baseCanaryRunId));\n    errors.collect(cdk.propertyValidator('baseScreenshots', cdk.listValidator(CfnCanary_BaseScreenshotPropertyValidator))(properties.baseScreenshots));\n    return errors.wrap('supplied properties not correct for \"VisualReferenceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Synthetics::Canary.VisualReference` resource\n *\n * @param properties - the TypeScript properties of a `VisualReferenceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Synthetics::Canary.VisualReference` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCanaryVisualReferencePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCanary_VisualReferencePropertyValidator(properties).assertSuccess();\n    return {\n        BaseCanaryRunId: cdk.stringToCloudFormation(properties.baseCanaryRunId),\n        BaseScreenshots: cdk.listMapper(cfnCanaryBaseScreenshotPropertyToCloudFormation)(properties.baseScreenshots),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCanaryVisualReferencePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCanary.VisualReferenceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCanary.VisualReferenceProperty>();\n    ret.addPropertyResult('baseCanaryRunId', 'BaseCanaryRunId', cfn_parse.FromCloudFormation.getString(properties.BaseCanaryRunId));\n    ret.addPropertyResult('baseScreenshots', 'BaseScreenshots', properties.BaseScreenshots != null ? cfn_parse.FromCloudFormation.getArray(CfnCanaryBaseScreenshotPropertyFromCloudFormation)(properties.BaseScreenshots) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
