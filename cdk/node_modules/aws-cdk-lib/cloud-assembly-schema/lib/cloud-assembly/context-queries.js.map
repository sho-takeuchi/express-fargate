{
  "version": 3,
  "sources": ["context-queries.ts"],
  "sourcesContent": ["import { Tag } from './metadata-schema';\n\n                                              \nexport enum ContextProvider {\n                             \n  AMI_PROVIDER = 'ami',\n\n                            \n  AVAILABILITY_ZONE_PROVIDER = 'availability-zones',\n\n                                             \n  HOSTED_ZONE_PROVIDER = 'hosted-zone',\n\n                                       \n  SSM_PARAMETER_PROVIDER = 'ssm',\n\n                             \n  VPC_PROVIDER = 'vpc-provider',\n\n                                                 \n  ENDPOINT_SERVICE_AVAILABILITY_ZONE_PROVIDER = 'endpoint-service-availability-zones',\n\n                                       \n  LOAD_BALANCER_PROVIDER = 'load-balancer',\n\n                                                \n  LOAD_BALANCER_LISTENER_PROVIDER = 'load-balancer-listener',\n\n                                        \n  SECURITY_GROUP_PROVIDER = 'security-group',\n\n                                 \n  KEY_PROVIDER = 'key-provider',\n}\n\n                                        \nexport interface AmiContextQuery {\n                                 \n  readonly account: string;\n\n                                \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                                              \n  readonly owners?: string[];\n\n                                               \n  readonly filters: {[key: string]: string[]};\n}\n\n                                                      \nexport interface AvailabilityZonesContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n}\n\n                                                \nexport interface HostedZoneContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                           \n  readonly domainName: string;\n\n                                                                                                    \n  readonly privateZone?: boolean;\n\n                                                                                                                                                                                                                                             \n  readonly vpcId?: string;\n}\n\n                                                  \nexport interface SSMParameterContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                        \n  readonly parameterName: string;\n}\n\n                                           \nexport interface VpcContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                                                                                                                                                                            \n  readonly filter: {[key: string]: string};\n\n                                                                                                                                                                                 \n  readonly returnAsymmetricSubnets?: boolean;\n\n                                                                                                                                                                                                                                                       \n  readonly subnetGroupNameTag?: string;\n}\n\n                                                     \nexport interface EndpointServiceAvailabilityZonesContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                   \n  readonly serviceName: string;\n}\n\n                                \nexport enum LoadBalancerType {\n                                      \n  NETWORK = 'network',\n\n                                          \n  APPLICATION = 'application',\n}\n\n                                               \nexport interface LoadBalancerFilter {\n                                                    \n  readonly loadBalancerType: LoadBalancerType;\n\n                                                                                                 \n  readonly loadBalancerArn?: string;\n\n                                                                                               \n  readonly loadBalancerTags?: Tag[];\n}\n\n                                                     \nexport interface LoadBalancerContextQuery extends LoadBalancerFilter {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n}\n\n                                                                         \nexport enum LoadBalancerListenerProtocol {\n                              \n  HTTP = 'HTTP',\n\n                               \n  HTTPS = 'HTTPS',\n\n                             \n  TCP = 'TCP',\n\n                             \n  TLS = 'TLS',\n\n                               \n  UDP = 'UDP',\n\n                                       \n  TCP_UDP = 'TCP_UDP',\n}\n\n                                                              \nexport interface LoadBalancerListenerContextQuery extends LoadBalancerFilter {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                                                     \n  readonly listenerArn?: string;\n\n                                                                                                 \n  readonly listenerProtocol?: LoadBalancerListenerProtocol;\n\n                                                                                                     \n  readonly listenerPort?: number;\n}\n\n                                                      \nexport interface SecurityGroupContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                            \n  readonly securityGroupId?: string;\n\n                                                              \n  readonly securityGroupName?: string;\n\n                                                 \n  readonly vpcId?: string;\n}\n\n                                               \nexport interface KeyContextQuery {\n                              \n  readonly account: string;\n\n                             \n  readonly region: string;\n\n                                                                                                                \n  readonly lookupRoleArn?: string;\n\n                                                  \n  readonly aliasName: string;\n\n}\n\nexport type ContextQueryProperties = AmiContextQuery\n| AvailabilityZonesContextQuery\n| HostedZoneContextQuery\n| SSMParameterContextQuery\n| VpcContextQuery\n| EndpointServiceAvailabilityZonesContextQuery\n| LoadBalancerContextQuery\n| LoadBalancerListenerContextQuery\n| SecurityGroupContextQuery\n| KeyContextQuery;\n"],
  "mappings": "iKAGA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAEzB,iBAAA,aAAA,MAGA,iBAAA,2BAAA,qBAGA,iBAAA,qBAAA,cAGA,iBAAA,uBAAA,MAGA,iBAAA,aAAA,eAGA,iBAAA,4CAAA,sCAGA,iBAAA,uBAAA,gBAGA,iBAAA,gCAAA,yBAGA,iBAAA,wBAAA,iBAGA,iBAAA,aAAA,iBA7BU,gBAAA,QAAA,iBAAA,SAAA,gBAAe,KAwI3B,GAAY,kBAAZ,AAAA,UAAY,kBAAgB,CAE1B,kBAAA,QAAA,UAGA,kBAAA,YAAA,gBALU,iBAAA,QAAA,kBAAA,SAAA,iBAAgB,KAiC5B,GAAY,8BAAZ,AAAA,UAAY,8BAA4B,CAEtC,8BAAA,KAAA,OAGA,8BAAA,MAAA,QAGA,8BAAA,IAAA,MAGA,8BAAA,IAAA,MAGA,8BAAA,IAAA,MAGA,8BAAA,QAAA,YAjBU,6BAAA,QAAA,8BAAA,SAAA,6BAA4B",
  "names": []
}
