{
  "version": 3,
  "sources": ["metadata-schema.ts"],
  "sourcesContent": ["/**\n * Common properties for asset metadata.\n */\ninterface BaseAssetMetadataEntry {\n  /**\n   * Requested packaging style\n   */\n  readonly packaging: string;\n\n                                                 \n  readonly id: string;\n\n                                              \n  readonly sourceHash: string;\n\n                                          \n  readonly path: string;\n}\n\n                                         \nexport interface FileAssetMetadataEntry extends BaseAssetMetadataEntry {\n                                          \n  readonly packaging: 'zip' | 'file';\n\n                                                                      \n  readonly s3BucketParameter: string;\n\n                                                                   \n  readonly s3KeyParameter: string;\n\n                                                                                                   \n  readonly artifactHashParameter: string;\n}\n\n                                             \nexport interface Tag {\n                                                                                                                                                                                                                                                                                                                      \n  readonly key: string\n\n                                                                                                                                                                                                                                                                                                                          \n  readonly value: string\n}\n\n                                                    \nexport interface ContainerImageAssetMetadataEntry extends BaseAssetMetadataEntry {\n                              \n  readonly packaging: 'container-image';\n\n                                                                                                                                                                                                                                                                                                                                                                                                              \n  readonly imageNameParameter?: string;\n\n                                                                                                                                                                                                                                                                                                                                                                   \n  readonly repositoryName?: string;\n\n                                                                                                                                                                                                                                                              \n  readonly imageTag?: string;\n\n                                                                                                             \n  readonly buildArgs?: { [key: string]: string };\n\n                                                                             \n  readonly target?: string;\n\n                                                                                                           \n  readonly file?: string;\n}\n\n/**\n * @see ArtifactMetadataEntryType.ASSET\n */\nexport type AssetMetadataEntry = FileAssetMetadataEntry | ContainerImageAssetMetadataEntry;\n\n// Type aliases for metadata entries.\n// Used simply to assign names to data types for more clarity.\n\n/**\n * @see ArtifactMetadataEntryType.INFO\n * @see ArtifactMetadataEntryType.WARN\n * @see ArtifactMetadataEntryType.ERROR\n */\nexport type LogMessageMetadataEntry = string;\n\n/**\n * @see ArtifactMetadataEntryType.LOGICAL_ID\n */\nexport type LogicalIdMetadataEntry = string;\n\n/**\n * @see ArtifactMetadataEntryType.STACK_TAGS\n */\nexport type StackTagsMetadataEntry = Tag[];\n\n/**\n * Union type for all metadata entries that might exist in the manifest.\n */\nexport type MetadataEntryData = AssetMetadataEntry | LogMessageMetadataEntry | LogicalIdMetadataEntry | StackTagsMetadataEntry;\n\n                                           \nexport enum ArtifactMetadataEntryType {\n                                   \n  ASSET = 'aws:cdk:asset',\n\n                                                                                                         \n  INFO = 'aws:cdk:info',\n\n                                                                                                            \n  WARN = 'aws:cdk:warning',\n\n                                                                                                          \n  ERROR = 'aws:cdk:error',\n\n                                                                                          \n  LOGICAL_ID = 'aws:cdk:logicalId',\n\n                                            \n  STACK_TAGS = 'aws:cdk:stack-tags'\n}\n\n                                                         \nexport interface MetadataEntry {\n                                                \n  readonly type: string;\n\n                                                        \n  readonly data?: MetadataEntryData;\n\n                                                                                             \n  readonly trace?: string[];\n}\n"],
  "mappings": "6GAkGA,GAAY,2BAAZ,AAAA,UAAY,2BAAyB,CAEnC,2BAAA,MAAA,gBAGA,2BAAA,KAAA,eAGA,2BAAA,KAAA,kBAGA,2BAAA,MAAA,gBAGA,2BAAA,WAAA,oBAGA,2BAAA,WAAA,uBAjBU,0BAAA,QAAA,2BAAA,SAAA,0BAAyB",
  "names": []
}
