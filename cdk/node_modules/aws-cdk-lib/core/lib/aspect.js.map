{
  "version": 3,
  "sources": ["aspect.ts"],
  "sourcesContent": ["import { IConstruct } from 'constructs';\n\nconst ASPECTS_SYMBOL = Symbol('cdk-aspects');\n\n                               \nexport interface IAspect {\n                                                    \n  visit(node: IConstruct): void;\n}\n\n                                                                                                     \nexport class Aspects {\n                                                                                                                                                \n  public static of(scope: IConstruct): Aspects {\n    let aspects = (scope as any)[ASPECTS_SYMBOL];\n    if (!aspects) {\n      aspects = new Aspects();\n\n      Object.defineProperty(scope, ASPECTS_SYMBOL, {\n        value: aspects,\n        configurable: false,\n        enumerable: false,\n      });\n    }\n    return aspects;\n  }\n\n  private readonly _aspects: IAspect[];\n\n  private constructor() {\n    this._aspects = [];\n  }\n\n                                                                                                           \n  public add(aspect: IAspect) {\n    this._aspects.push(aspect);\n  }\n\n                                                                               \n  public get all(): IAspect[] {\n    return [...this._aspects];\n  }\n}"],
  "mappings": "8MAEM,eAAiB,OAAO,eAS9B,aAAoB,CAkBlB,aAAA,CACE,KAAK,SAAW,SAjBJ,IAAG,MAAiB,CAChC,GAAI,SAAW,MAAc,gBAC7B,MAAK,UACH,SAAU,GAAI,SAEd,OAAO,eAAe,MAAO,eAAgB,CAC3C,MAAO,QACP,aAAc,GACd,WAAY,MAGT,QAUF,IAAI,OAAe,qDACxB,KAAK,SAAS,KAAK,WAIV,MAAG,CACZ,MAAO,CAAC,GAAG,KAAK,WA7BpB,QAAA,QAAA",
  "names": []
}
