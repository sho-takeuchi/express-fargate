{
  "version": 3,
  "sources": ["cfn-codedeploy-blue-green-hook.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnHook } from './cfn-hook';\nimport { FromCloudFormationOptions } from './cfn-parse';\nimport { CfnResource } from './cfn-resource';\nimport { undefinedIfAllValuesAreEmpty } from './util';\n\n                                                                                                                                                                \nexport enum CfnTrafficRoutingType {\n                                                   \n  ALL_AT_ONCE = 'AllAtOnce',\n\n                                                                                                    \n  TIME_BASED_CANARY = 'TimeBasedCanary',\n\n                                                                                                                                                                   \n  TIME_BASED_LINEAR = 'TimeBasedLinear',\n}\n\n                                                                                                                                           \nexport interface CfnTrafficRoutingTimeBasedCanary {\n                                                                                                                                                                                    \n  readonly stepPercentage?: number;\n\n                                                                                                                                          \n  readonly bakeTimeMins?: number;\n}\n\n                                                                                                                                           \nexport interface CfnTrafficRoutingTimeBasedLinear {\n                                                                                                                                                                                                   \n  readonly stepPercentage?: number;\n\n                                                                                                                                          \n  readonly bakeTimeMins?: number;\n}\n\n                                                                                                                                            \nexport interface CfnTrafficRoutingConfig {\n                                                                                              \n  readonly type: CfnTrafficRoutingType;\n\n                                                                                                                                                           \n  readonly timeBasedCanary?: CfnTrafficRoutingTimeBasedCanary;\n\n                                                                                                                                                           \n  readonly timeBasedLinear?: CfnTrafficRoutingTimeBasedLinear;\n}\n\n                                                                                                                                                   \nexport interface CfnCodeDeployBlueGreenAdditionalOptions {\n                                                                                                                          \n  readonly terminationWaitTimeInMinutes?: number;\n}\n\n                                                                                                                                                \nexport interface CfnCodeDeployBlueGreenLifecycleEventHooks {\n                                                                                                                   \n  readonly beforeInstall?: string;\n\n                                                                                                                                                                     \n  readonly afterInstall?: string;\n\n                                                                                                                                           \n  readonly afterAllowTestTraffic?: string;\n\n                                                                                                                                                                                                                  \n  readonly beforeAllowTraffic?: string;\n\n                                                                                                                                                 \n  readonly afterAllowTraffic?: string;\n}\n\n                                                                                 \nexport interface CfnCodeDeployBlueGreenApplicationTarget {\n                                                                                                                               \n  readonly type: string;\n\n                                                       \n  readonly logicalId: string;\n}\n\n                                                                                   \nexport interface CfnTrafficRoute {\n                                                                                                                               \n  readonly type: string;\n\n                                                       \n  readonly logicalId: string;\n}\n\n                                                                                           \nexport interface CfnTrafficRouting {\n                                                                                                       \n  readonly prodTrafficRoute: CfnTrafficRoute;\n\n                                                                                                       \n  readonly testTrafficRoute: CfnTrafficRoute;\n\n                                                                                                                                  \n  readonly targetGroups: string[];\n}\n\n                                                                                                                                             \nexport interface CfnCodeDeployBlueGreenEcsAttributes {\n                                                                                                                     \n  readonly taskDefinitions: string[];\n\n                                                                                                       \n  readonly taskSets: string[];\n\n                                                   \n  readonly trafficRouting: CfnTrafficRouting;\n}\n\n                                                                                                                                 \nexport interface CfnCodeDeployBlueGreenApplication {\n                                                   \n  readonly target: CfnCodeDeployBlueGreenApplicationTarget;\n\n                                                                \n  readonly ecsAttributes: CfnCodeDeployBlueGreenEcsAttributes;\n}\n\n                                                                         \nexport interface CfnCodeDeployBlueGreenHookProps {\n                                                                                          \n  readonly serviceRole: string;\n\n                                                                          \n  readonly applications: CfnCodeDeployBlueGreenApplication[];\n\n                                                                                                                                                                        \n  readonly trafficRoutingConfig?: CfnTrafficRoutingConfig;\n\n                                                                                                             \n  readonly additionalOptions?: CfnCodeDeployBlueGreenAdditionalOptions;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly lifecycleEventHooks?: CfnCodeDeployBlueGreenLifecycleEventHooks;\n}\n\n                                                                                                                                                                                                   \nexport class CfnCodeDeployBlueGreenHook extends CfnHook {\n  /**\n   * A factory method that creates a new instance of this class from an object\n   * containing the CloudFormation properties of this resource.\n   * Used in the @aws-cdk/cloudformation-include module.\n   *\n   * @internal\n   */\n  public static _fromCloudFormation(scope: Construct, id: string, hookAttributes: any,\n    options: FromCloudFormationOptions): CfnCodeDeployBlueGreenHook {\n\n    hookAttributes = hookAttributes || {};\n    const hookProperties = options.parser.parseValue(hookAttributes.Properties);\n    return new CfnCodeDeployBlueGreenHook(scope, id, {\n      serviceRole: hookProperties?.ServiceRole,\n      applications: hookProperties?.Applications?.map(applicationFromCloudFormation),\n      trafficRoutingConfig: {\n        type: hookProperties?.TrafficRoutingConfig?.Type,\n        timeBasedCanary: {\n          stepPercentage: hookProperties?.TrafficRoutingConfig?.TimeBasedCanary?.StepPercentage,\n          bakeTimeMins: hookProperties?.TrafficRoutingConfig?.TimeBasedCanary?.BakeTimeMins,\n        },\n        timeBasedLinear: {\n          stepPercentage: hookProperties?.TrafficRoutingConfig?.TimeBasedLinear?.StepPercentage,\n          bakeTimeMins: hookProperties?.TrafficRoutingConfig?.TimeBasedLinear?.BakeTimeMins,\n        },\n      },\n      additionalOptions: {\n        terminationWaitTimeInMinutes: hookProperties?.AdditionalOptions?.TerminationWaitTimeInMinutes,\n      },\n      lifecycleEventHooks: {\n        beforeInstall: hookProperties?.LifecycleEventHooks?.BeforeInstall,\n        afterInstall: hookProperties?.LifecycleEventHooks?.AfterInstall,\n        afterAllowTestTraffic: hookProperties?.LifecycleEventHooks?.AfterAllowTestTraffic,\n        beforeAllowTraffic: hookProperties?.LifecycleEventHooks?.BeforeAllowTraffic,\n        afterAllowTraffic: hookProperties?.LifecycleEventHooks?.AfterAllowTraffic,\n      },\n    });\n\n    function applicationFromCloudFormation(app: any) {\n      const target = findResource(app?.Target?.LogicalID);\n      const taskDefinitions: Array<CfnResource | undefined> | undefined = app?.ECSAttributes?.TaskDefinitions?.map(\n        (td: any) => findResource(td));\n      const taskSets: Array<CfnResource | undefined> | undefined = app?.ECSAttributes?.TaskSets?.map(\n        (ts: any) => findResource(ts));\n      const prodTrafficRoute = findResource(app?.ECSAttributes?.TrafficRouting?.ProdTrafficRoute?.LogicalID);\n      const testTrafficRoute = findResource(app?.ECSAttributes?.TrafficRouting?.TestTrafficRoute?.LogicalID);\n      const targetGroups: Array<CfnResource | undefined> | undefined = app?.ECSAttributes?.TrafficRouting?.TargetGroups?.map(\n        (tg: any) => findResource(tg));\n\n      return {\n        target: {\n          type: app?.Target?.Type,\n          logicalId: target?.logicalId,\n        },\n        ecsAttributes: {\n          taskDefinitions: taskDefinitions?.map(td => td?.logicalId),\n          taskSets: taskSets?.map(ts => ts?.logicalId),\n          trafficRouting: {\n            prodTrafficRoute: {\n              type: app?.ECSAttributes?.TrafficRouting?.ProdTrafficRoute?.Type,\n              logicalId: prodTrafficRoute?.logicalId,\n            },\n            testTrafficRoute: {\n              type: app?.ECSAttributes?.TrafficRouting?.TestTrafficRoute?.Type,\n              logicalId: testTrafficRoute?.logicalId,\n            },\n            targetGroups: targetGroups?.map((tg) => tg?.logicalId),\n          },\n        },\n      };\n    }\n\n    function findResource(logicalId: string | undefined): CfnResource | undefined {\n      if (logicalId == null) {\n        return undefined;\n      }\n      const ret = options.parser.finder.findResource(logicalId);\n      if (!ret) {\n        throw new Error(`Hook '${id}' references resource '${logicalId}' that was not found in the template`);\n      }\n      return ret;\n    }\n  }\n\n  private _serviceRole: string;\n  private _applications: CfnCodeDeployBlueGreenApplication[];\n  private _trafficRoutingConfig?: CfnTrafficRoutingConfig;\n  private _additionalOptions?: CfnCodeDeployBlueGreenAdditionalOptions;\n  private _lifecycleEventHooks?: CfnCodeDeployBlueGreenLifecycleEventHooks;\n\n                                                                                                                                                                                                                                                                                                             \n  constructor(scope: Construct, id: string, props: CfnCodeDeployBlueGreenHookProps) {\n    super(scope, id, {\n      type: 'AWS::CodeDeploy::BlueGreen',\n      // we render the properties ourselves\n    });\n\n    this._serviceRole = props.serviceRole;\n    this._applications = props.applications;\n    this._trafficRoutingConfig = props.trafficRoutingConfig;\n    this._additionalOptions = props.additionalOptions;\n    this._lifecycleEventHooks = props.lifecycleEventHooks;\n  }\n\n                                                                                          \n  public get serviceRole(): string {\n    return this._serviceRole;\n  }\n\n  public set serviceRole(serviceRole: string) {\n    this._serviceRole = serviceRole;\n  }\n\n                                                                          \n  public get applications(): CfnCodeDeployBlueGreenApplication[] {\n    return this._applications;\n  }\n\n  public set applications(value: CfnCodeDeployBlueGreenApplication[]) {\n    this._applications = value;\n  }\n\n                                                                                                                                                                        \n  public get trafficRoutingConfig(): CfnTrafficRoutingConfig | undefined {\n    return this._trafficRoutingConfig;\n  }\n\n  public set trafficRoutingConfig(value: CfnTrafficRoutingConfig | undefined) {\n    this._trafficRoutingConfig = value;\n  }\n\n                                                                                                             \n  public get additionalOptions(): CfnCodeDeployBlueGreenAdditionalOptions | undefined {\n    return this._additionalOptions;\n  }\n\n  public set additionalOptions(value: CfnCodeDeployBlueGreenAdditionalOptions | undefined) {\n    this._additionalOptions = value;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  public get lifecycleEventHooks(): CfnCodeDeployBlueGreenLifecycleEventHooks | undefined {\n    return this._lifecycleEventHooks;\n  }\n\n  public set lifecycleEventHooks(value: CfnCodeDeployBlueGreenLifecycleEventHooks | undefined) {\n    this._lifecycleEventHooks = value;\n  }\n\n  protected renderProperties(_props?: { [p: string]: any }): { [p: string]: any } | undefined {\n    return {\n      ServiceRole: this.serviceRole,\n      Applications: this.applications.map((app) => ({\n        Target: {\n          Type: app.target.type,\n          LogicalID: app.target.logicalId,\n        },\n        ECSAttributes: {\n          TaskDefinitions: app.ecsAttributes.taskDefinitions,\n          TaskSets: app.ecsAttributes.taskSets,\n          TrafficRouting: {\n            ProdTrafficRoute: {\n              Type: app.ecsAttributes.trafficRouting.prodTrafficRoute.type,\n              LogicalID: app.ecsAttributes.trafficRouting.prodTrafficRoute.logicalId,\n            },\n            TestTrafficRoute: {\n              Type: app.ecsAttributes.trafficRouting.testTrafficRoute.type,\n              LogicalID: app.ecsAttributes.trafficRouting.testTrafficRoute.logicalId,\n            },\n            TargetGroups: app.ecsAttributes.trafficRouting.targetGroups,\n          },\n        },\n      })),\n      TrafficRoutingConfig: undefinedIfAllValuesAreEmpty({\n        Type: this.trafficRoutingConfig?.type,\n        TimeBasedCanary: undefinedIfAllValuesAreEmpty({\n          StepPercentage: this.trafficRoutingConfig?.timeBasedCanary?.stepPercentage,\n          BakeTimeMins: this.trafficRoutingConfig?.timeBasedCanary?.bakeTimeMins,\n        }),\n        TimeBasedLinear: undefinedIfAllValuesAreEmpty({\n          StepPercentage: this.trafficRoutingConfig?.timeBasedLinear?.stepPercentage,\n          BakeTimeMins: this.trafficRoutingConfig?.timeBasedLinear?.bakeTimeMins,\n        }),\n      }),\n      AdditionalOptions: undefinedIfAllValuesAreEmpty({\n        TerminationWaitTimeInMinutes: this.additionalOptions?.terminationWaitTimeInMinutes,\n      }),\n      LifecycleEventHooks: undefinedIfAllValuesAreEmpty({\n        BeforeInstall: this.lifecycleEventHooks?.beforeInstall,\n        AfterInstall: this.lifecycleEventHooks?.afterInstall,\n        AfterAllowTestTraffic: this.lifecycleEventHooks?.afterAllowTestTraffic,\n        BeforeAllowTraffic: this.lifecycleEventHooks?.beforeAllowTraffic,\n        AfterAllowTraffic: this.lifecycleEventHooks?.afterAllowTraffic,\n      }),\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
