{
  "version": 3,
  "sources": ["cfn-condition.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnElement } from './cfn-element';\nimport { IResolvable, IResolveContext } from './resolvable';\n\nexport interface CfnConditionProps {\n                                                                                            \n  readonly expression?: ICfnConditionExpression;\n}\n\n                                                                                                                                                         \nexport class CfnCondition extends CfnElement implements ICfnConditionExpression, IResolvable {\n                                         \n  public expression?: ICfnConditionExpression;\n\n                                                                                                                                      \n  constructor(scope: Construct, id: string, props?: CfnConditionProps) {\n    super(scope, id);\n    this.expression = props && props.expression;\n  }\n\n  /**\n   * @internal\n   */\n  public _toCloudFormation(): object {\n    if (!this.expression) {\n      return { };\n    }\n\n    return {\n      Conditions: {\n        [this.logicalId]: this.expression,\n      },\n    };\n  }\n\n                                           \n  public resolve(_context: IResolveContext): any {\n    return { Condition: this.logicalId };\n  }\n}\n\nnexport interface ICfnConditionExpression extends IResolvable {}\n\n                                                                                                                                                        \nexport interface ICfnRuleConditionExpression extends ICfnConditionExpression {\n                                                                                                           \n  readonly disambiguator: boolean;\n}\n"],
  "mappings": "mNACA,cAAA,QAAA,iBASA,0BAAkC,eAAA,UAAU,CAK1C,YAAY,MAAkB,GAAY,MAAyB,CACjE,MAAM,MAAO,iEACb,KAAK,WAAa,OAAS,MAAM,WAM5B,mBAAiB,CACtB,MAAK,MAAK,WAIH,CACL,WAAY,EACT,KAAK,WAAY,KAAK,aALlB,GAWJ,QAAQ,SAAyB,sEAC/B,CAAE,UAAW,KAAK,YA3B7B,QAAA,aAAA",
  "names": []
}
