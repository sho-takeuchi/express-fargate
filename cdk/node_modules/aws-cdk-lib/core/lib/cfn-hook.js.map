{
  "version": 3,
  "sources": ["cfn-hook.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnElement } from './cfn-element';\nimport { ignoreEmpty } from './util';\n\n                                                      \nexport interface CfnHookProps {\n                                                                                       \n  readonly type: string;\n\n                                                                               \n  readonly properties?: { [name: string]: any };\n}\n\n                                                \nexport class CfnHook extends CfnElement {\n                                                                                       \n  public readonly type: string;\n\n  private readonly _cfnHookProperties?: { [name: string]: any };\n\n                                           \n  constructor(scope: Construct, id: string, props: CfnHookProps) {\n    super(scope, id);\n\n    this.type = props.type;\n    this._cfnHookProperties = props.properties;\n  }\n\n  /** @internal */\n  public _toCloudFormation(): object {\n    return {\n      Hooks: {\n        [this.logicalId]: {\n          Type: this.type,\n          Properties: ignoreEmpty(this.renderProperties(this._cfnHookProperties)),\n        },\n      },\n    };\n  }\n\n  protected renderProperties(props?: {[key: string]: any}): { [key: string]: any } | undefined {\n    return props;\n  }\n}\n"],
  "mappings": "8MACA,cAAA,QAAA,iBACA,OAAA,QAAA,UAYA,qBAA6B,eAAA,UAAU,CAOrC,YAAY,MAAkB,GAAY,MAAmB,CAC3D,MAAM,MAAO,4DAEb,KAAK,KAAO,MAAM,KAClB,KAAK,mBAAqB,MAAM,WAI3B,mBAAiB,CACtB,MAAO,CACL,MAAO,EACJ,KAAK,WAAY,CAChB,KAAM,KAAK,KACX,WAAY,OAAA,YAAY,KAAK,iBAAiB,KAAK,wBAMjD,iBAAiB,MAA4B,CACrD,MAAO,QA3BX,QAAA,QAAA",
  "names": []
}
