{
  "version": 3,
  "sources": ["cfn-json.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CustomResource } from './custom-resource';\nimport { CfnUtilsProvider } from './private/cfn-utils-provider';\nimport { CfnUtilsResourceType } from './private/cfn-utils-provider/consts';\nimport { Reference } from './reference';\nimport { IResolvable, IResolveContext } from './resolvable';\nimport { Stack } from './stack';\nimport { captureStackTrace } from './stack-trace';\n\nexport interface CfnJsonProps {\n                                                                                                                            \n  readonly value: any;\n}\n\nnexport class CfnJson extends Construct implements IResolvable {\n  public readonly creationStack: string[] = [];\n\n                                                                                                                                                                                                                                                  \n  public readonly value: Reference;\n\n  private readonly jsonString: string;\n\n  constructor(scope: Construct, id: string, props: CfnJsonProps) {\n    super(scope, id);\n\n    this.creationStack = captureStackTrace();\n\n    // stringify the JSON object in a token-aware way.\n    this.jsonString = Stack.of(this).toJsonString(props.value);\n\n    const resource = new CustomResource(this, 'Resource', {\n      serviceToken: CfnUtilsProvider.getOrCreate(this),\n      resourceType: CfnUtilsResourceType.CFN_JSON,\n      properties: {\n        Value: this.jsonString,\n      },\n    });\n\n    this.value = resource.getAtt('Value');\n  }\n\n                                                                                                                                                           \n  public toJSON() {\n    return this.jsonString;\n  }\n\n  public resolve(_: IResolveContext): any {\n    return this.value;\n  }\n}\n"],
  "mappings": "8MAAA,aAAA,QAAA,cACA,kBAAA,QAAA,qBACA,qBAAA,QAAA,gCAIA,QAAA,QAAA,WACA,cAAA,QAAA,iBAQA,qBAA6B,cAAA,SAAS,CAQpC,YAAY,MAAkB,GAAY,MAAmB,CAC3D,MAAM,MAAO,IARC,KAAA,cAA0B,2DAUxC,KAAK,cAAgB,cAAA,oBAGrB,KAAK,WAAa,QAAA,MAAM,GAAG,MAAM,aAAa,MAAM,OAEpD,KAAM,UAAW,GAAI,mBAAA,eAAe,KAAM,WAAY,CACpD,aAAc,qBAAA,iBAAiB,YAAY,MAC3C,aAAY,wBACZ,WAAY,CACV,MAAO,KAAK,cAIhB,KAAK,MAAQ,SAAS,OAAO,SAIxB,QAAM,CACX,MAAO,MAAK,WAGP,QAAQ,EAAkB,+DACxB,KAAK,OAjChB,QAAA,QAAA",
  "names": []
}
