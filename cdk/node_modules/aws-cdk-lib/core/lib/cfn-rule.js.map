{
  "version": 3,
  "sources": ["cfn-rule.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ICfnConditionExpression } from './cfn-condition';\nimport { CfnRefElement } from './cfn-element';\nimport { capitalizePropertyNames } from './util';\n\nnexport interface CfnRuleProps {\n                                                                                                                                                                                                                                                                            \n  readonly ruleCondition?: ICfnConditionExpression;\n\n                                                                                                   \n  readonly assertions?: CfnRuleAssertion[];\n}\n\nnexport class CfnRule extends CfnRefElement {\n  private ruleCondition?: ICfnConditionExpression;\n  private assertions?: CfnRuleAssertion[];\n\n                                                                                                                   \n  constructor(scope: Construct, id: string, props?: CfnRuleProps) {\n    super(scope, id);\n\n    this.ruleCondition = props && props.ruleCondition;\n    this.assertions = props && props.assertions;\n  }\n\n                                                                                                                                                             \n  public addAssertion(condition: ICfnConditionExpression, description: string) {\n    if (!this.assertions) {\n      this.assertions = [];\n    }\n\n    this.assertions.push({\n      assert: condition,\n      assertDescription: description,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public _toCloudFormation(): object {\n    return {\n      Rules: {\n        [this.logicalId]: {\n          RuleCondition: this.ruleCondition,\n          Assertions: capitalizePropertyNames(this, this.assertions),\n        },\n      },\n    };\n  }\n}\n\n                            \nexport interface CfnRuleAssertion {\n                               \n  readonly assert: ICfnConditionExpression;\n\n                                           \n  readonly assertDescription: string;\n}\n"],
  "mappings": "8MAEA,cAAA,QAAA,iBACA,OAAA,QAAA,UAYA,qBAA6B,eAAA,aAAa,CAKxC,YAAY,MAAkB,GAAY,MAAoB,CAC5D,MAAM,MAAO,4DAEb,KAAK,cAAgB,OAAS,MAAM,cACpC,KAAK,WAAa,OAAS,MAAM,WAI5B,aAAa,UAAoC,YAAmB,wEACpE,KAAK,YACR,MAAK,WAAa,IAGpB,KAAK,WAAW,KAAK,CACnB,OAAQ,UACR,kBAAmB,cAOhB,mBAAiB,CACtB,MAAO,CACL,MAAO,EACJ,KAAK,WAAY,CAChB,cAAe,KAAK,cACpB,WAAY,OAAA,wBAAwB,KAAM,KAAK,gBAhCzD,QAAA,QAAA",
  "names": []
}
