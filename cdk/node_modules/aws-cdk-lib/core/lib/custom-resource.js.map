{
  "version": 3,
  "sources": ["custom-resource.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnResource } from './cfn-resource';\nimport { RemovalPolicy } from './removal-policy';\nimport { Resource } from './resource';\nimport { Token } from './token';\n\n                                                                \nexport interface CustomResourceProps {\nn  readonly serviceToken: string;\n\n                                                                                     \n  readonly properties?: { [key: string]: any };\n\nn  readonly resourceType?: string;\n\n                                                                                                                                     \n  readonly removalPolicy?: RemovalPolicy;\n\n                                                                                   \n  readonly pascalCaseProperties?: boolean;\n}\n\nnexport class CustomResource extends Resource {\n  private readonly resource: CfnResource;\n\n  constructor(scope: Construct, id: string, props: CustomResourceProps) {\n    super(scope, id);\n\n    const type = renderResourceType(props.resourceType);\n    const pascalCaseProperties = props.pascalCaseProperties ?? false;\n    const properties = pascalCaseProperties ? uppercaseProperties(props.properties || {}) : (props.properties || {});\n\n    this.resource = new CfnResource(this, 'Default', {\n      type,\n      properties: {\n        ServiceToken: props.serviceToken,\n        ...properties,\n      },\n    });\n\n    this.resource.applyRemovalPolicy(props.removalPolicy, {\n      default: RemovalPolicy.DESTROY,\n    });\n  }\n\n                                                           \n  public get ref() {\n    return this.resource.ref;\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n  public getAtt(attributeName: string) {\n    return this.resource.getAtt(attributeName);\n  }\n\n                                                                                                                                                                                                                                                                                                                                              \n  public getAttString(attributeName: string): string {\n    return Token.asString(this.getAtt(attributeName));\n  }\n}\n\n/**\n * Uppercase the first letter of every property name\n *\n * It's customary for CloudFormation properties to start with capitals, and our\n * properties to start with lowercase, so this function translates from one\n * to the other\n */\nfunction uppercaseProperties(props: { [key: string]: any }) {\n  const ret: { [key: string]: any } = {};\n  Object.keys(props).forEach(key => {\n    const upper = key.substr(0, 1).toUpperCase() + key.substr(1);\n    ret[upper] = props[key];\n  });\n  return ret;\n}\n\nfunction renderResourceType(resourceType?: string) {\n  if (!resourceType) {\n    return 'AWS::CloudFormation::CustomResource';\n  }\n\n  if (!resourceType.startsWith('Custom::')) {\n    throw new Error(`Custom resource type must begin with \"Custom::\" (${resourceType})`);\n  }\n\n  const typeName = resourceType.substr(resourceType.indexOf('::') + 2);\n  if (typeName.length > 60) {\n    throw new Error(`Custom resource type length > 60 (${resourceType})`);\n  }\n\n  if (!/^[a-z0-9_@-]+$/i.test(typeName)) {\n    throw new Error(`Custom resource type name can only include alphanumeric characters and _@- (${typeName})`);\n  }\n\n  return resourceType;\n}\n"],
  "mappings": "qNACA,eAAA,QAAA,kBACA,iBAAA,QAAA,oBACA,WAAA,QAAA,cACA,QAAA,QAAA,WAqBA,4BAAoC,YAAA,QAAQ,CAG1C,YAAY,MAAkB,GAAY,MAA0B,QAClE,MAAM,MAAO,mEAEb,KAAM,MAAO,mBAAmB,MAAM,cAEhC,WAAa,AADO,KAAG,MAAM,wBAAoB,MAAA,KAAA,OAAA,GAAI,IACjB,oBAAoB,MAAM,YAAc,IAAO,MAAM,YAAc,GAE7G,KAAK,SAAW,GAAI,gBAAA,YAAY,KAAM,UAAW,CAC/C,KACA,WAAY,CACV,aAAc,MAAM,gBACjB,cAIP,KAAK,SAAS,mBAAmB,MAAM,cAAe,CACpD,QAAS,iBAAA,cAAc,aAKhB,MAAG,CACZ,MAAO,MAAK,SAAS,IAIhB,OAAO,cAAqB,CACjC,MAAO,MAAK,SAAS,OAAO,eAIvB,aAAa,cAAqB,CACvC,MAAO,SAAA,MAAM,SAAS,KAAK,OAAO,iBAnCtC,QAAA,eAAA,4GA8CA,6BAA6B,MAA6B,CACxD,KAAM,KAA8B,GACpC,cAAO,KAAK,OAAO,QAAQ,KAAM,CAC/B,KAAM,OAAQ,IAAI,OAAO,EAAG,GAAG,cAAgB,IAAI,OAAO,GAC1D,IAAI,OAAS,MAAM,OAEd,IAGT,4BAA4B,aAAqB,CAC/C,GAAI,CAAC,aACH,MAAO,sCAGT,GAAI,CAAC,aAAa,WAAW,YAC3B,KAAM,IAAI,OAAM,oDAAoD,iBAGtE,KAAM,UAAW,aAAa,OAAO,aAAa,QAAQ,MAAQ,GAClE,GAAI,SAAS,OAAS,GACpB,KAAM,IAAI,OAAM,qCAAqC,iBAGvD,GAAI,CAAC,kBAAkB,KAAK,UAC1B,KAAM,IAAI,OAAM,+EAA+E,aAGjG,MAAO",
  "names": []
}
