{
  "version": 3,
  "sources": ["stack-synthesizer.ts"],
  "sourcesContent": ["import * as cxschema from '../../../cloud-assembly-schema';\nimport { DockerImageAssetLocation, DockerImageAssetSource, FileAssetLocation, FileAssetSource } from '../assets';\nimport { Stack } from '../stack';\nimport { addStackArtifactToAssembly } from './_shared';\nimport { IStackSynthesizer, ISynthesisSession } from './types';\n\n                                                                                                                                                                                                                                                                                                                                         \nexport abstract class StackSynthesizer implements IStackSynthesizer {\n                                                                                                                                               \n  public abstract bind(stack: Stack): void;\n\n                                                                                                                                   \n  public abstract addFileAsset(asset: FileAssetSource): FileAssetLocation;\n\n                                                                                                                                           \n  public abstract addDockerImageAsset(asset: DockerImageAssetSource): DockerImageAssetLocation;\n\n                                                               \n  public abstract synthesize(session: ISynthesisSession): void;\n\n                                                      \n  protected synthesizeStackTemplate(stack: Stack, session: ISynthesisSession): void {\n    stack._synthesizeTemplate(session);\n  }\n\n\n                                                                                                                                                                          \n  protected emitStackArtifact(stack: Stack, session: ISynthesisSession, options: SynthesizeStackArtifactOptions = {}) {\n    addStackArtifactToAssembly(session, stack, options ?? {}, options.additionalDependencies ?? []);\n  }\n}\n\n                                                                                                                                                                                                    \nexport interface SynthesizeStackArtifactOptions {\n                                                                                                       \n  readonly additionalDependencies?: string[];\n\n                                                                                                                                                \n  readonly parameters?: { [id: string]: string };\n\n                                                                                                                                             \n  readonly assumeRoleArn?: string;\n\n                                                                                                        \n  readonly assumeRoleExternalId?: string;\n\n                                                                                                                                                                         \n  readonly cloudFormationExecutionRoleArn?: string;\n\n                                                                                                        \n  readonly lookupRole?: cxschema.BootstrapRole;\n\n                                                                                                                                                                         \n  readonly stackTemplateAssetObjectUrl?: string;\n\n                                                                                                                          \n  readonly requiresBootstrapStackVersion?: number;\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly bootstrapStackVersionSsmParameter?: string;\n}\n"],
  "mappings": "0NAGA,UAAA,QAAA,aAIA,sBAAsC,CAc1B,wBAAwB,MAAc,QAA0B,iHACxE,MAAM,oBAAoB,SAKlB,kBAAkB,MAAc,QAA4B,QAA0C,GAAE,oMAChH,UAAA,2BAA2B,QAAS,MAAO,SAAO,KAAP,QAAW,GAAE,IAAE,QAAQ,0BAAsB,MAAA,KAAA,OAAA,GAAI,KArBhG,QAAA,iBAAA",
  "names": []
}
