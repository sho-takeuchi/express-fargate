{
  "version": 3,
  "sources": ["tag-aspect.ts"],
  "sourcesContent": ["import { Construct, IConstruct } from 'constructs';\nimport { Annotations } from './annotations';\nimport { IAspect, Aspects } from './aspect';\nimport { ITaggable, TagManager } from './tag-manager';\n\n                               \nexport interface TagProps {\n                                                                                                              \n  readonly applyToLaunchedInstances?: boolean;\n\n                                                                                                                                                                                                                                                                        \n  readonly excludeResourceTypes?: string[];\n\n                                                                                                                                                                                                                                            \n  readonly includeResourceTypes?: string[];\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  readonly priority?: number;\n}\n\n/**\n * The common functionality for Tag and Remove Tag Aspects\n */\nabstract class TagBase implements IAspect {\n\n                                           \n  public readonly key: string;\n\n  protected readonly props: TagProps;\n\n  constructor(key: string, props: TagProps = {}) {\n    this.key = key;\n    this.props = props;\n  }\n\n  public visit(construct: IConstruct): void {\n    if (TagManager.isTaggable(construct)) {\n      this.applyTag(construct);\n    }\n  }\n\n  protected abstract applyTag(resource: ITaggable): void;\n}\n\n                                                                                              \nexport class Tag extends TagBase {\n\n                                                                                                                                                   \n  public static add(scope: Construct, key: string, value: string, props: TagProps = {}) {\n    Annotations.of(scope).addDeprecation('@aws-cdk/core.Tag.add(scope,k,v)', 'Use \"Tags.of(scope).add(k,v)\" instead');\n    Tags.of(scope).add(key, value, props);\n  }\n\n                                                                                                                                                         \n  public static remove(scope: Construct, key: string, props: TagProps = {}) {\n    Annotations.of(scope).addDeprecation('@aws-cdk/core.Tag.remove(scope,k,v)', 'Use \"Tags.of(scope).remove(k,v)\" instead');\n    Tags.of(scope).remove(key, props);\n  }\n\n                                            \n  public readonly value: string;\n\n  private readonly defaultPriority = 100;\n\n  constructor(key: string, value: string, props: TagProps = {}) {\n    super(key, props);\n    if (value === undefined) {\n      throw new Error('Tag must have a value');\n    }\n    this.value = value;\n  }\n\n  protected applyTag(resource: ITaggable) {\n    if (resource.tags.applyTagAspectHere(this.props.includeResourceTypes, this.props.excludeResourceTypes)) {\n      resource.tags.setTag(\n        this.key,\n        this.value,\n        this.props.priority ?? this.defaultPriority,\n        this.props.applyToLaunchedInstances !== false,\n      );\n    }\n  }\n}\n\n                                                                       \nexport class Tags {\n                                                                                 \n  public static of(scope: IConstruct): Tags {\n    return new Tags(scope);\n  }\n\n  private constructor(private readonly scope: IConstruct) { }\n\n                                                                                      \n  public add(key: string, value: string, props: TagProps = {}) {\n    Aspects.of(this.scope).add(new Tag(key, value, props));\n  }\n\n                                                                                         \n  public remove(key: string, props: TagProps = {}) {\n    Aspects.of(this.scope).add(new RemoveTag(key, props));\n  }\n}\n\n                                                                                     \nexport class RemoveTag extends TagBase {\n\n  private readonly defaultPriority = 200;\n\n  constructor(key: string, props: TagProps = {}) {\n    super(key, props);\n  }\n\n  protected applyTag(resource: ITaggable): void {\n    if (resource.tags.applyTagAspectHere(this.props.includeResourceTypes, this.props.excludeResourceTypes)) {\n      resource.tags.removeTag(this.key, this.props.priority ?? this.defaultPriority);\n    }\n  }\n}\n"],
  "mappings": "+OACA,cAAA,QAAA,iBACA,SAAA,QAAA,YACA,cAAA,QAAA,iBAoBA,aAAsB,CAOpB,YAAY,IAAa,MAAkB,GAAE,CAC3C,KAAK,IAAM,IACX,KAAK,MAAQ,MAGR,MAAM,UAAqB,CAChC,AAAI,cAAA,WAAW,WAAW,YACxB,KAAK,SAAS,YAQpB,iBAAyB,QAAO,CAmB9B,YAAY,IAAa,MAAe,MAAkB,GAAE,CAC1D,MAAM,IAAK,OACX,GAJe,KAAA,gBAAkB,wDAI7B,QAAU,OACZ,KAAM,IAAI,OAAM,yBAElB,KAAK,MAAQ,YArBD,KAAI,MAAkB,IAAa,MAAe,MAAkB,GAAE,CAClF,cAAA,YAAY,GAAG,OAAO,eAAe,mCAAoC,yCACzE,KAAK,GAAG,OAAO,IAAI,IAAK,MAAO,aAInB,QAAO,MAAkB,IAAa,MAAkB,GAAE,CACtE,cAAA,YAAY,GAAG,OAAO,eAAe,sCAAuC,4CAC5E,KAAK,GAAG,OAAO,OAAO,IAAK,OAgBnB,SAAS,SAAmB,gEAChC,SAAS,KAAK,mBAAmB,KAAK,MAAM,qBAAsB,KAAK,MAAM,uBAC/E,SAAS,KAAK,OACZ,KAAK,IACL,KAAK,MAAK,IACV,KAAK,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,KAAK,gBAC5B,KAAK,MAAM,2BAA6B,KAjChD,QAAA,IAAA,2EAwCA,UAAiB,CAMf,YAAqC,MAAiB,CAAjB,KAAA,MAAA,YAJvB,IAAG,MAAiB,CAChC,MAAO,IAAI,MAAK,OAMX,IAAI,IAAa,MAAe,MAAkB,GAAE,qDACzD,SAAA,QAAQ,GAAG,KAAK,OAAO,IAAI,GAAI,KAAI,IAAK,MAAO,QAI1C,OAAO,IAAa,MAAkB,GAAE,qDAC7C,SAAA,QAAQ,GAAG,KAAK,OAAO,IAAI,GAAI,WAAU,IAAK,SAflD,QAAA,KAAA,8EAoBA,uBAA+B,QAAO,CAIpC,YAAY,IAAa,MAAkB,GAAE,CAC3C,MAAM,IAAK,OAHI,KAAA,gBAAkB,wDAMzB,SAAS,SAAmB,gEAChC,SAAS,KAAK,mBAAmB,KAAK,MAAM,qBAAsB,KAAK,MAAM,uBAC/E,SAAS,KAAK,UAAU,KAAK,IAAG,IAAE,KAAK,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,KAAK,kBAVpE,QAAA,UAAA",
  "names": []
}
