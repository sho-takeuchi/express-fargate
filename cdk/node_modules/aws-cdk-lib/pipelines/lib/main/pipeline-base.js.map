{
  "version": 3,
  "sources": ["pipeline-base.ts"],
  "sourcesContent": ["import { Aspects, Stage } from '../../../core';\nimport { Construct } from 'constructs';\nimport { AddStageOpts as StageOptions, WaveOptions, Wave, IFileSetProducer, ShellStep, FileSet } from '../blueprint';\n\n                                      \nexport interface PipelineBaseProps {\n                                                                                                                                                                                                                                                                                                                                                           \n  readonly synth: IFileSetProducer;\n}\n\nnexport abstract class PipelineBase extends Construct {\n                                                                    \n  public readonly synth: IFileSetProducer;\n\n                                           \n  public readonly waves: Wave[];\n\n                                                                                                                    \n  public readonly cloudAssemblyFileSet: FileSet;\n\n  private built = false;\n\n  constructor(scope: Construct, id: string, props: PipelineBaseProps) {\n    super(scope, id);\n\n    if (props.synth instanceof ShellStep && !props.synth.primaryOutput) {\n      props.synth.primaryOutputDirectory('cdk.out');\n    }\n\n    if (!props.synth.primaryOutput) {\n      throw new Error(`synthStep ${props.synth} must produce a primary output, but is not producing anything. Configure the Step differently or use a different Step type.`);\n    }\n\n    this.synth = props.synth;\n    this.waves = [];\n    this.cloudAssemblyFileSet = props.synth.primaryOutput;\n\n    Aspects.of(this).add({ visit: () => this.buildJustInTime() });\n  }\n\n                                                                                                                                                                                                                                                                                   \n  public addStage(stage: Stage, options?: StageOptions) {\n    if (this.built) {\n      throw new Error('addStage: can\\'t add Stages anymore after buildPipeline() has been called');\n    }\n    return this.addWave(stage.stageName).addStage(stage, options);\n  }\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n  public addWave(id: string, options?: WaveOptions) {\n    if (this.built) {\n      throw new Error('addWave: can\\'t add Waves anymore after buildPipeline() has been called');\n    }\n\n    const wave = new Wave(id, options);\n    this.waves.push(wave);\n    return wave;\n  }\n\n                                                                                                                                                                              \n  public buildPipeline() {\n    if (this.built) {\n      throw new Error('build() has already been called: can only call it once');\n    }\n    this.doBuildPipeline();\n    this.built = true;\n  }\n\n                                                                                 \n  protected abstract doBuildPipeline(): void;\n\n  /**\n   * Automatically call 'build()' just before synthesis if the user hasn't explicitly called it yet\n   */\n  private buildJustInTime() {\n    if (!this.built) {\n      this.buildPipeline();\n    }\n  }\n}"],
  "mappings": "sNAAA,OAAA,QAAA,iBACA,aAAA,QAAA,cACA,YAAA,QAAA,gBASA,0BAA2C,cAAA,SAAS,CAYlD,YAAY,MAAkB,GAAY,MAAwB,CAChE,MAAM,MAAO,IAMb,GATM,KAAA,MAAQ,0EAKV,MAAM,gBAAiB,aAAA,WAAa,CAAC,MAAM,MAAM,eACnD,MAAM,MAAM,uBAAuB,WAGjC,CAAC,MAAM,MAAM,cACf,KAAM,IAAI,OAAM,aAAa,MAAM,oIAGrC,KAAK,MAAQ,MAAM,MACnB,KAAK,MAAQ,GACb,KAAK,qBAAuB,MAAM,MAAM,cAExC,OAAA,QAAQ,GAAG,MAAM,IAAI,CAAE,MAAO,IAAM,KAAK,oBAIpC,SAAS,MAAc,QAAsB,CAClD,wHAAI,KAAK,MACP,KAAM,IAAI,OAAM,4EAElB,MAAO,MAAK,QAAQ,MAAM,WAAW,SAAS,MAAO,SAIhD,QAAQ,GAAY,QAAqB,CAC9C,sEAAI,KAAK,MACP,KAAM,IAAI,OAAM,0EAGlB,KAAM,MAAO,GAAI,aAAA,KAAK,GAAI,SAC1B,YAAK,MAAM,KAAK,MACT,KAIF,eAAa,CAClB,GAAI,KAAK,MACP,KAAM,IAAI,OAAM,0DAElB,KAAK,kBACL,KAAK,MAAQ,GASP,iBAAe,CACrB,AAAK,KAAK,OACR,KAAK,iBAlEX,QAAA,aAAA",
  "names": []
}
